LOCAL vm : 1.8.0_05
Path: /Users/aarong/git/common/common/lib/runtime/guava-18.0.jar
Path: /Users/aarong/git/jsure/jsure-analysis/bin
Path: /Users/aarong/git/common/common/lib/runtime/ant-1.9.6.jar
Path: /Users/aarong/git/jsure/jsure-common
Path: /Users/aarong/git/common/common
Path: /Users/aarong/git/common/common/lib/runtime/javax.servlet-api-3.1.0.jar
Path: /Users/aarong/git/jsure/jsure-analysis
Path: /Users/aarong/git/common/common/lib/runtime/antlr-3.5.2-runtime.jar
Path: /Users/aarong/git/jsure/jsure-common/lib/runtime/diffutils-1.2.1.jar
Path: /Users/aarong/git/common/common/bin
Path: /Users/aarong/git/common/common/lib/runtime/asm-commons-5.0.4.jar
Path: /Users/aarong/git/jsure/jsure-analysis/lib/runtime/renamedJavac.jar
Path: /Users/aarong/git/common/common/lib/runtime/promises-5.6.0.jar
Path: /Users/aarong/git/common/common/lib/runtime/derby-10.11.1.1.jar
Path: /Users/aarong/git/jsure/jsure-common/bin
Path: /Users/aarong/git/common/common/lib/runtime/asm-5.0.4.jar
Path: /Users/aarong/git/common/common/lib/runtime/asm-tree-5.0.4.jar
Path: /Users/aarong/git/common/common/lib/runtime/hppc-0.7.1.jar
Path: /Users/aarong/git/common/common/lib/runtime/commons-lang3-3.4.jar
Starting process:
	/Library/Java/JavaVirtualMachines/jdk1.8.0_05.jdk/Contents/Home/jre/bin/java
	-Dsl.running.in.remote.vm=true
	-Dsurelogic.test.code=NONE
	-XX:MaxPermSize=512m
	-verbosegc
	-DSureLogicX=true
	-Dsl.run.dir=/Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestEffectSanityChec-2016.02.04-at-11.19.37.247
	-Dfluid.ir.versioning=Versioning.Off
	-Djsure.analysis.directory.url=file:/Eclipses/eclipse-standard-luna-SR2-macosx-cocoa-x86_64/../../Users/aarong/git/jsure/jsure-analysis/
	-Xmx2048m
	-classpath
	/Users/aarong/git/common/common/lib/runtime/guava-18.0.jar:/Users/aarong/git/jsure/jsure-analysis/bin:/Users/aarong/git/common/common/lib/runtime/ant-1.9.6.jar:/Users/aarong/git/jsure/jsure-common:/Users/aarong/git/common/common:/Users/aarong/git/common/common/lib/runtime/javax.servlet-api-3.1.0.jar:/Users/aarong/git/jsure/jsure-analysis:/Users/aarong/git/common/common/lib/runtime/antlr-3.5.2-runtime.jar:/Users/aarong/git/jsure/jsure-common/lib/runtime/diffutils-1.2.1.jar:/Users/aarong/git/common/common/bin:/Users/aarong/git/common/common/lib/runtime/asm-commons-5.0.4.jar:/Users/aarong/git/jsure/jsure-analysis/lib/runtime/renamedJavac.jar:/Users/aarong/git/common/common/lib/runtime/promises-5.6.0.jar:/Users/aarong/git/common/common/lib/runtime/derby-10.11.1.1.jar:/Users/aarong/git/jsure/jsure-common/bin:/Users/aarong/git/common/common/lib/runtime/asm-5.0.4.jar:/Users/aarong/git/common/common/lib/runtime/asm-tree-5.0.4.jar:/Users/aarong/git/common/common/lib/runtime/hppc-0.7.1.jar:/Users/aarong/git/common/common/lib/runtime/commons-lang3-3.4.jar
	com.surelogic.javac.jobs.RemoteJSureRun

First line in REMOTE vm = Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
REMOTE: [GC (Allocation Failure)  512K->504K(327168K), 0.0012210 secs]
REMOTE: [GC (Allocation Failure)  1002K->560K(327680K), 0.0008400 secs]
REMOTE: [GC (Allocation Failure)  1584K->688K(327680K), 0.0010170 secs]
REMOTE: [GC (Allocation Failure)  1712K->768K(328704K), 0.0010500 secs]
REMOTE: [GC (Allocation Failure)  2816K->1019K(328704K), 0.0014370 secs]
REMOTE: JVM started: 1.8.0_05
REMOTE: Log level: INFO
REMOTE: Created reader
REMOTE: Created monitor
REMOTE: Created log handler
REMOTE: Running RemoteJSureRun
REMOTE: [GC (Allocation Failure)  3067K->1283K(331264K), 0.0011190 secs]
REMOTE: [GC (Allocation Failure)  5379K->1675K(331264K), 0.0015690 secs]
REMOTE: [GC (Allocation Failure)  5771K->1755K(335360K), 0.0012040 secs]
REMOTE: runPath = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestEffectSanityChec-2016.02.04-at-11.19.37.247
REMOTE: Creating run: TestEffectSanityChec-2016.02.04-at-11.19.37.247
REMOTE: Defaulting project org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7 to Java 0
REMOTE: Created project org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7 from XML
REMOTE: Setting project TestEffectSanityChecks to Java 7
REMOTE: [GC (Allocation Failure)  9947K->2410K(335360K), 0.0021350 secs]
REMOTE: Created project TestEffectSanityChecks from XML
REMOTE: projects = TestEffectSanityChecks
REMOTE: Loading edu.cmu.cs.fluid.make.nonabductive.proposals = false
REMOTE: Loading edu.cmu.cs.fluid.load.all.classes = false
REMOTE: Loading edu.cmu.cs.fluid.timeoutFlag = true
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BCA = false
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ConstantExpr = false
REMOTE: Loading edu.cmu.cs.fluid.physMemoryInMB = 20480
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.EqualityAssurance = true
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ThreadSafe = true
REMOTE: Loading edu.cmu.cs.fluid.xml.diff.directory = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/promises-xml
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.IRConcurrencyDetector = true
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Singleton = true
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.CALLS = false
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BenchmarkingUniquenessSE = false
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ThreadEffectAssurance2 = true
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Binder = false
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.cliend.eclipse.TypeBasedAlias = false
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Nullable = true
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.TestIsFunctional = false
REMOTE: Loading edu.cmu.cs.fluid.tool-memory-mb = 2048
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.DefinitelyAssigned = false
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceSE = true
REMOTE: Loading edu.cmu.cs.fluid.analysis.thread.count = 8
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LockModelBuilder = true
REMOTE: Loading edu.cmu.cs.fluid.timeoutSec = 11
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.NonNullRawTypes = false
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.EffectsAndLocks = false
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LayersAssurance = true
REMOTE: Loading edu.cmu.cs.fluid.default.JRE = org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Loading edu.cmu.cs.fluid.timeoutWarningSec = 30
REMOTE: Loading edu.cmu.cs.fluid.modeling.problem.filters = 00000012com\.apple.*00000013com\.oracle.*00000010com\.sun.*00000014.*\.internal.*00000023.*BakedArrayList\.class00000007apple.*00000008oracle.*00000011quicktime.*00000005sun.*
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Utility = true
REMOTE: Loading edu.cmu.cs.fluid.scan.may.use.compression = true
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ParameterizedType = true
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Final = false
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LockAssurance4 = true
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LockAssurance3 = false
REMOTE: Loading edu.cmu.cs.fluid.data.directory = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.NullablePreprocessor = true
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.EffectAssurance2 = true
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LV = false
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.StructureAssurance = true
REMOTE: Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Types = false
REMOTE: JSure data dir = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data
REMOTE: XML diff dir   = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/promises-xml
REMOTE: Looking for JRE in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: default JRE = org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Initialized job
REMOTE: Created com.surelogic.analysis.concurrency.detector.ConcurrencyDetector
REMOTE: Starting a new group for ConcurrencyDetector
REMOTE: Created com.surelogic.analysis.threads.ThreadEffectsModule
REMOTE: Created com.surelogic.analysis.structure.StructureAnalysis
REMOTE: Created com.surelogic.analysis.annotationbounds.ParameterizedTypeAnalysis
REMOTE: Created com.surelogic.analysis.equality.EqualityAnalysis
REMOTE: Created com.surelogic.analysis.layers.LayersAnalysis
REMOTE: Created com.surelogic.analysis.utility.UtilityAnalysis
REMOTE: Starting a new group for UtilityAnalysis
REMOTE: Group: EXTERNALLY
REMOTE: 	ConcurrencyDetector
REMOTE: 	ThreadEffectsModule
REMOTE: 	StructureAnalysis
REMOTE: 	ParameterizedTypeAnalysis
REMOTE: 	EqualityAnalysis
REMOTE: 	LayersAnalysis
REMOTE: Created com.surelogic.analysis.singleton.SingletonAnalysis
REMOTE: Created com.surelogic.analysis.concurrency.driver.LockModelBuilder
REMOTE: Starting a new group for LockModelBuilder
REMOTE: Group: com.surelogic.analysis.visitors.TopLevelAnalysisVisitor$1@5e265ba4, EXTERNALLY
REMOTE: 	UtilityAnalysis
REMOTE: 	SingletonAnalysis
REMOTE: Created com.surelogic.analysis.concurrency.driver.ThreadSafeAnalysis
REMOTE: Starting a new group for ThreadSafeAnalysis
REMOTE: Group: EXTERNALLY
REMOTE: 	LockModelBuilder
REMOTE: Created com.surelogic.analysis.concurrency.driver.NewLockAnalysis
REMOTE: Starting a new group for NewLockAnalysis
REMOTE: Group: com.surelogic.analysis.visitors.TopLevelAnalysisVisitor$1@5e265ba4, EXTERNALLY
REMOTE: 	ThreadSafeAnalysis
REMOTE: Created com.surelogic.analysis.effects.EffectsAnalysis
REMOTE: Starting a new group for EffectsAnalysis
REMOTE: Group: class com.surelogic.analysis.bca.BindingContextAnalysis, EXTERNALLY
REMOTE: 	NewLockAnalysis
REMOTE: Created com.surelogic.analysis.uniqueness.classic.sideeffecting.UniquenessAnalysisModule
REMOTE: Starting a new group for UniquenessAnalysisModule
REMOTE: Group: com.surelogic.analysis.visitors.TopLevelAnalysisVisitor$1@5e265ba4, class com.surelogic.analysis.bca.BindingContextAnalysis, EXTERNALLY
REMOTE: 	EffectsAnalysis
REMOTE: Created com.surelogic.analysis.nullable.NullablePreprocessorModule
REMOTE: Starting a new group for NullablePreprocessorModule
REMOTE: Group: com.surelogic.analysis.uniqueness.classic.sideeffecting.UniquenessAnalysisModule$1@156643d4, class com.surelogic.analysis.bca.BindingContextAnalysis, INTERNALLY
REMOTE: 	UniquenessAnalysisModule
REMOTE: Created com.surelogic.analysis.nullable.NullableModule2
REMOTE: Starting a new group for NullableModule2
REMOTE: Group: EXTERNALLY
REMOTE: 	NullablePreprocessorModule
REMOTE: Group: com.surelogic.analysis.granules.FlowUnitGranulator@123a439b, EXTERNALLY
REMOTE: 	NullableModule2
REMOTE: ##TASK, Scan, 478
REMOTE: Initializing ...
REMOTE: ##SUBTASK, Initializing ...
REMOTE: monitor = com.surelogic.common.jobs.remote.AbstractRemoteSLJob$Monitor@7de26db8
REMOTE: process() using 8 threads
REMOTE: [GC (Allocation Failure)  10602K->3082K(340992K), 0.0024480 secs]
REMOTE: [GC (Allocation Failure)  16394K->3223K(340992K), 0.0021560 secs]
REMOTE: [GC (Allocation Failure)  16501K->16030K(344576K), 0.0084800 secs]
REMOTE: [GC (Allocation Failure)  32819K->32469K(349184K), 0.0107350 secs]
REMOTE: Done initializing org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: 0
REMOTE: org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/resources.jar : 2465399
REMOTE: [GC (Allocation Failure)  49365K->45195K(354816K), 0.0092920 secs]
REMOTE: [GC (Allocation Failure)  66699K->49291K(360448K), 0.0066410 secs]
REMOTE: org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/rt.jar : 64311652
REMOTE: org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jsse.jar : 582478
REMOTE: org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jce.jar : 109504
REMOTE: org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/charsets.jar : 3696271
REMOTE: org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jfr.jar : 532548
REMOTE: org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/dnsns.jar : 8923
REMOTE: org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/localedata.jar : 550578
REMOTE: org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunec.jar : 15941
REMOTE: org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunjce_provider.jar : 198101
REMOTE: org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunpkcs11.jar : 237244
REMOTE: org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/zipfs.jar : 68751
REMOTE: org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /System/Library/Java/Extensions/MRJToolkit.jar : 12849
REMOTE: Done initializing TestEffectSanityChecks: 26
REMOTE: Trying to find /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestEffectSanityChec-2016.02.04-at-11.19.37.247/source/TestEffectSanityChecks.bin.zip
REMOTE: TestEffectSanityChecks: TestEffectSanityChecks -> org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Done initializing org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: 0
REMOTE: TestEffectSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/resources.jar : 2465399
REMOTE: [GC (Allocation Failure)  70795K->53707K(372224K), 0.0083900 secs]
REMOTE: TestEffectSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/rt.jar : 64311652
REMOTE: TestEffectSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jsse.jar : 582478
REMOTE: TestEffectSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jce.jar : 109504
REMOTE: TestEffectSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/charsets.jar : 3696271
REMOTE: TestEffectSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jfr.jar : 532548
REMOTE: TestEffectSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/dnsns.jar : 8923
REMOTE: TestEffectSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/localedata.jar : 550578
REMOTE: TestEffectSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunec.jar : 15941
REMOTE: TestEffectSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunjce_provider.jar : 198101
REMOTE: TestEffectSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunpkcs11.jar : 237244
REMOTE: TestEffectSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/zipfs.jar : 68751
REMOTE: TestEffectSanityChecks: Done initializing with /System/Library/Java/Extensions/MRJToolkit.jar : 12849
REMOTE: TestEffectSanityChecks: Done initializing with /Users/aarong/git/regression/regression/TestEffectSanityChecks/promises-5.6.0.jar : 133034
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: Assuming that the projects are run in dependency order
REMOTE: Parsing ...
REMOTE: ##SUBTASK, Parsing ...
REMOTE: Done adapting 0 files for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: Parsing ...
REMOTE: ##SUBTASK, Parsing ...
REMOTE: [GC (Allocation Failure)  88523K->60558K(372736K), 0.0085230 secs]
REMOTE: JCP: warning: [options] bootstrap class path not set in conjunction with -source 1.7
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: Adapting 26 CUTs
REMOTE: Done adapting 26 files for TestEffectSanityChecks
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: Handling references for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##SUBTASK, Handling references for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Handling 21 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: [GC (Allocation Failure)  95374K->62746K(386048K), 0.0096630 secs]
REMOTE: Setting project for Object from org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Handling 44 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Handling 55 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Handling 51 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Handling 32 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Handling 17 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Handling 8 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Handling 12 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: [GC (Allocation Failure)  111898K->68656K(386560K), 0.0131760 secs]
REMOTE: Handling 15 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Handling 4 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Handling 2 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: Handling references for TestEffectSanityChecks
REMOTE: ##SUBTASK, Handling references for TestEffectSanityChecks
REMOTE: Handling 25 dangling refs for TestEffectSanityChecks
REMOTE: Handling 5 dangling refs for TestEffectSanityChecks
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: Parsing ASTs  = 507 ms
REMOTE: Handling refs = 455 ms
REMOTE: [2016-02-04 11:19:39    INFO] partial bindings = 0 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
REMOTE: [2016-02-04 11:19:39    INFO] full bindings = 0 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
REMOTE: Canonicalizing ASTs
REMOTE: ##SUBTASK, Canonicalizing ASTs
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: ##WORK, 1
REMOTE: [2016-02-04 11:19:39    INFO] partial bindings = 1742 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
REMOTE: [2016-02-04 11:19:39    INFO] full bindings = 1275 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p1/Test.java
REMOTE: [GC (Metadata GC Threshold)  86409K->69250K(407040K), 0.0080710 secs]
REMOTE: [Full GC (Metadata GC Threshold)  69250K->67584K(160256K), 0.2754450 secs]
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_qualifiedThis/C.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p1/S.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_parameter/C.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_class/Test.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Other.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_constructorVisibility/C.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_parameter/Test.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Other.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_qualifiedThis/D.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_explicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_parameter/D.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_implicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p2/Test.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_abstraction/sameClass/Test.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_constructorVisibility/Test.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_class/C.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_class/nested/C.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_implicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p2/Other.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_class/D.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Test.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_explicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: Canonicalizing TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/S.java
REMOTE: ##WORK, 1
REMOTE: Binding = 108 ms
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: [GC (System.gc())  73065K->67944K(160256K), 0.0016480 secs]
REMOTE: [Full GC (System.gc())  67944K->55904K(160256K), 0.0937160 secs]
REMOTE: Creating drops
REMOTE: ##SUBTASK, Creating drops
REMOTE: Created binary drop for java.nio.charset.CharacterCodingException
REMOTE: Created binary drop for java.nio.file.attribute.BasicFileAttributes
REMOTE: Created binary drop for java.util.zip.ZipException
REMOTE: Created binary drop for java.net.FileNameMap
REMOTE: Created binary drop for java.nio.channels.GatheringByteChannel
REMOTE: Created binary drop for java.math.BigInteger
REMOTE: Created binary drop for java.nio.charset.Charset
REMOTE: Created binary drop for java.io.IOException
REMOTE: Created binary drop for java.lang.reflect.Method
REMOTE: Created binary drop for java.util.Hashtable
REMOTE: Created binary drop for java.net.URISyntaxException
REMOTE: Created binary drop for java.nio.channels.AsynchronousFileChannel
REMOTE: Created binary drop for java.util.List
REMOTE: Created binary drop for java.lang.Thread
REMOTE: Created binary drop for java.nio.file.AccessMode
REMOTE: Created binary drop for java.util.concurrent.Executor
REMOTE: Created binary drop for java.nio.file.attribute.FileAttributeView
REMOTE: Created binary drop for java.lang.ref.Reference
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p1/Test.java
REMOTE: Created binary drop for java.net.Proxy
REMOTE: Created binary drop for java.util.Comparator
REMOTE: Created binary drop for java.security.SignatureException
REMOTE: Created binary drop for java.util.concurrent.ConcurrentMap
REMOTE: Created binary drop for java.nio.file.LinkOption
REMOTE: Created binary drop for java.security.Timestamp
REMOTE: Created binary drop for java.security.NoSuchAlgorithmException
REMOTE: Created binary drop for sun.util.locale.Extension
REMOTE: Created binary drop for java.lang.reflect.TypeVariable
REMOTE: Created binary drop for java.io.FilterOutputStream
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/C.java
REMOTE: Created binary drop for java.lang.annotation.RetentionPolicy
REMOTE: Created binary drop for java.io.InputStream
REMOTE: Created binary drop for java.lang.Object
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p1/S.java
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/C.java
REMOTE: Created binary drop for java.security.Key
REMOTE: Created binary drop for sun.reflect.CallerSensitive
REMOTE: Created binary drop for java.lang.SuppressWarnings
REMOTE: Created binary drop for java.util.Dictionary
REMOTE: Created binary drop for java.io.FileFilter
REMOTE: Created binary drop for java.net.InetAddress
REMOTE: Created binary drop for java.nio.LongBuffer
REMOTE: Created binary drop for java.net.URLStreamHandlerFactory
REMOTE: Created binary drop for sun.util.resources.OpenListResourceBundle
REMOTE: Created binary drop for java.lang.annotation.Target
REMOTE: Created binary drop for sun.util.locale.BaseLocale
REMOTE: Created binary drop for java.security.ProtectionDomain
REMOTE: Created binary drop for java.util.AbstractMap
REMOTE: Created binary drop for java.nio.IntBuffer
REMOTE: Created binary drop for java.nio.channels.Channel
REMOTE: Created binary drop for java.security.DomainCombiner
REMOTE: Created binary drop for java.net.NetworkInterface
REMOTE: Created binary drop for java.security.cert.CertificateEncodingException
REMOTE: Created binary drop for java.nio.channels.WritableByteChannel
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/Test.java
REMOTE: Created binary drop for java.nio.file.attribute.AttributeView
REMOTE: Created binary drop for java.lang.NoSuchFieldException
REMOTE: Created binary drop for java.nio.ByteBuffer
REMOTE: Created binary drop for sun.reflect.ReflectionFactory
REMOTE: Created binary drop for java.security.CodeSigner
REMOTE: Created binary drop for java.io.PrintWriter
REMOTE: Created binary drop for java.lang.Double
REMOTE: Created binary drop for java.lang.Enum
REMOTE: Created binary drop for java.lang.ReflectiveOperationException
REMOTE: Created binary drop for sun.util.LocaleServiceProviderPool
REMOTE: Created binary drop for sun.misc.Resource
REMOTE: Created binary drop for java.util.concurrent.Callable
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Test.java
REMOTE: Created binary drop for com.surelogic.Region
REMOTE: Created binary drop for java.util.Date
REMOTE: Created binary drop for java.util.zip.ZipConstants
REMOTE: Created binary drop for java.nio.channels.AsynchronousCloseException
REMOTE: Created binary drop for java.util.Vector
REMOTE: Created binary drop for java.nio.channels.AsynchronousChannel
REMOTE: Created binary drop for java.io.Closeable
REMOTE: Created binary drop for java.lang.NumberFormatException
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Other.java
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/C.java
REMOTE: Created binary drop for java.io.FileDescriptor
REMOTE: Created binary drop for java.nio.file.attribute.UserPrincipalLookupService
REMOTE: Created binary drop for java.security.PublicKey
REMOTE: Created binary drop for java.lang.AutoCloseable
REMOTE: Created binary drop for java.lang.ref.SoftReference
REMOTE: Created binary drop for java.nio.MappedByteBuffer
REMOTE: Created binary drop for java.lang.AbstractStringBuilder
REMOTE: Created binary drop for java.io.Flushable
REMOTE: Created binary drop for java.util.Random
REMOTE: Created binary drop for java.util.zip.ZipEntry
REMOTE: Created binary drop for java.lang.reflect.GenericDeclaration
REMOTE: Created binary drop for java.lang.InstantiationException
REMOTE: Created binary drop for java.nio.channels.FileChannel
REMOTE: Created binary drop for java.util.Enumeration
REMOTE: Created binary drop for java.util.LinkedList
REMOTE: Created binary drop for java.util.concurrent.locks.Lock
REMOTE: Created binary drop for sun.util.locale.LanguageTag
REMOTE: Created binary drop for java.lang.Deprecated
REMOTE: Created binary drop for java.nio.charset.CharsetEncoder
REMOTE: Created binary drop for java.nio.file.attribute.FileAttribute
REMOTE: Created binary drop for java.lang.Boolean
REMOTE: Created binary drop for java.nio.file.FileStore
REMOTE: Created binary drop for sun.misc.JarIndex
REMOTE: Created binary drop for java.lang.ClassValue
REMOTE: Created binary drop for java.util.concurrent.Future
REMOTE: Created binary drop for java.nio.channels.ClosedChannelException
REMOTE: Created binary drop for java.security.KeyException
REMOTE: Created binary drop for java.lang.RuntimeException
REMOTE: Created binary drop for java.lang.CharSequence
REMOTE: Created binary drop for java.net.SocketAddress
REMOTE: Created binary drop for sun.security.util.Debug
REMOTE: Created binary drop for java.nio.file.Watchable
REMOTE: Created binary drop for sun.reflect.annotation.AnnotationType
REMOTE: Created binary drop for java.lang.Appendable
REMOTE: Created binary drop for java.util.Map
REMOTE: Created binary drop for java.io.PrintStream
REMOTE: Created binary drop for java.security.NoSuchProviderException
REMOTE: Created binary drop for java.lang.reflect.Type
REMOTE: Created binary drop for java.util.jar.Attributes
REMOTE: Created binary drop for java.lang.Byte
REMOTE: Created binary drop for java.lang.SecurityException
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/Test.java
REMOTE: Created binary drop for java.security.Permission
REMOTE: Created binary drop for java.lang.Long
REMOTE: Created binary drop for java.nio.file.attribute.FileTime
REMOTE: Created binary drop for java.lang.reflect.Field
REMOTE: Created binary drop for java.lang.String
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Other.java
REMOTE: Created binary drop for java.lang.Runnable
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/D.java
REMOTE: Created binary drop for java.security.InvalidKeyException
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/D.java
REMOTE: Created binary drop for java.util.zip.Inflater
REMOTE: Created binary drop for java.nio.file.WatchKey
REMOTE: Created binary drop for java.net.ContentHandler
REMOTE: Created binary drop for java.io.Writer
REMOTE: Created binary drop for java.util.zip.DataFormatException
REMOTE: Created binary drop for sun.util.locale.LocaleSyntaxException
REMOTE: Created binary drop for java.lang.Readable
REMOTE: Created binary drop for java.lang.ThreadGroup
REMOTE: Created binary drop for java.util.Iterator
REMOTE: Created binary drop for java.util.spi.LocaleServiceProvider
REMOTE: Created binary drop for java.lang.Class
REMOTE: Created binary drop for java.util.MissingResourceException
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/C.java
REMOTE: Created binary drop for java.util.AbstractSequentialList
REMOTE: Created binary drop for java.security.Principal
REMOTE: Created binary drop for java.nio.file.PathMatcher
REMOTE: Created binary drop for java.nio.channels.FileLock
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/Test.java
REMOTE: Created binary drop for java.security.PermissionCollection
REMOTE: Created binary drop for java.util.SortedMap
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/D.java
REMOTE: Created binary drop for java.lang.ThreadLocal
REMOTE: Created binary drop for com.surelogic.Regions
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p2/Test.java
REMOTE: Created binary drop for java.net.MalformedURLException
REMOTE: Created binary drop for java.nio.ShortBuffer
REMOTE: Created binary drop for java.io.DataOutputStream
REMOTE: Created binary drop for java.lang.Integer
REMOTE: Created binary drop for java.lang.Float
REMOTE: Created binary drop for java.lang.IllegalAccessException
REMOTE: Created binary drop for java.lang.annotation.ElementType
REMOTE: Created binary drop for java.util.RandomAccess
REMOTE: Created binary drop for java.io.File
REMOTE: Created binary drop for java.nio.file.Path
REMOTE: Created binary drop for java.lang.ClassLoader
REMOTE: Created binary drop for java.nio.channels.InterruptibleChannel
REMOTE: Created binary drop for java.lang.StackTraceElement
REMOTE: Created binary drop for java.lang.IllegalArgumentException
REMOTE: Created binary drop for java.net.URL
REMOTE: Created binary drop for java.lang.reflect.Constructor
REMOTE: Created binary drop for java.nio.file.DirectoryStream
REMOTE: Created binary drop for java.nio.file.attribute.UserPrincipal
REMOTE: Created binary drop for java.util.Deque
REMOTE: Created binary drop for java.net.InterfaceAddress
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/sameClass/Test.java
REMOTE: Created binary drop for java.lang.annotation.Documented
REMOTE: Created binary drop for java.util.ArrayList
REMOTE: Created binary drop for java.util.Queue
REMOTE: Created binary drop for java.nio.CharBuffer
REMOTE: Created binary drop for java.net.UnknownHostException
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/Test.java
REMOTE: Created binary drop for java.nio.file.FileSystem
REMOTE: Created binary drop for sun.reflect.FieldAccessor
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/C.java
REMOTE: Created binary drop for java.util.AbstractList
REMOTE: Created binary drop for java.net.InetAddressImpl
REMOTE: Created binary drop for java.security.AccessControlContext
REMOTE: Created binary drop for java.lang.Comparable
REMOTE: Created binary drop for java.security.cert.CertificateException
REMOTE: Created binary drop for java.io.OutputStream
REMOTE: Created binary drop for java.io.ObjectStreamException
REMOTE: Created binary drop for sun.misc.URLClassPath
REMOTE: Created binary drop for java.util.jar.Manifest
REMOTE: Created binary drop for java.net.URI
REMOTE: Created binary drop for java.util.HashMap
REMOTE: Created binary drop for sun.util.locale.ParseStatus
REMOTE: Created binary drop for java.nio.Buffer
REMOTE: Created binary drop for sun.util.locale.LocaleExtensions
REMOTE: Created binary drop for sun.nio.ch.Interruptible
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/nested/C.java
REMOTE: Created binary drop for java.util.Set
REMOTE: Created binary drop for java.io.FilterInputStream
REMOTE: Created binary drop for sun.misc.MetaIndex
REMOTE: Created binary drop for java.util.WeakHashMap
REMOTE: Created binary drop for java.net.URLStreamHandler
REMOTE: Created binary drop for java.util.zip.InflaterInputStream
REMOTE: Created binary drop for java.util.ListIterator
REMOTE: Created binary drop for java.util.Collection
REMOTE: Created binary drop for java.security.CodeSource
REMOTE: Created binary drop for java.lang.annotation.Annotation
REMOTE: Created binary drop for java.nio.channels.ReadableByteChannel
REMOTE: Created binary drop for java.net.URLConnection
REMOTE: Created binary drop for java.nio.file.WatchEvent
REMOTE: Created binary drop for java.nio.channels.CompletionHandler
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/C.java
REMOTE: Created binary drop for java.util.Stack
REMOTE: Created binary drop for java.nio.FloatBuffer
REMOTE: Created binary drop for java.nio.file.spi.FileSystemProvider
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p2/Other.java
REMOTE: Created binary drop for java.io.UnsupportedEncodingException
REMOTE: Created binary drop for java.security.cert.Certificate
REMOTE: Created binary drop for java.lang.Cloneable
REMOTE: Created binary drop for java.util.concurrent.locks.ReadWriteLock
REMOTE: Created binary drop for sun.reflect.LangReflectAccess
REMOTE: Created binary drop for java.nio.charset.CoderResult
REMOTE: Created binary drop for java.lang.Number
REMOTE: Created binary drop for sun.reflect.MethodAccessor
REMOTE: Created binary drop for java.lang.Exception
REMOTE: Created binary drop for java.lang.InterruptedException
REMOTE: Created binary drop for java.nio.file.WatchService
REMOTE: Created binary drop for java.io.FileNotFoundException
REMOTE: Created binary drop for java.io.DataOutput
REMOTE: Created binary drop for java.security.Guard
REMOTE: Created binary drop for java.nio.charset.CodingErrorAction
REMOTE: Created binary drop for java.lang.ref.WeakReference
REMOTE: Created binary drop for java.util.spi.LocaleNameProvider
REMOTE: Created binary drop for java.lang.annotation.Retention
REMOTE: Created binary drop for java.nio.channels.SeekableByteChannel
REMOTE: Created binary drop for java.security.cert.CertPath
REMOTE: Created binary drop for java.nio.DoubleBuffer
REMOTE: Created binary drop for sun.reflect.ConstantPool
REMOTE: Created binary drop for java.nio.file.CopyOption
REMOTE: Created binary drop for java.net.SocketException
REMOTE: Created binary drop for java.util.AbstractCollection
REMOTE: Created binary drop for java.lang.reflect.InvocationTargetException
REMOTE: Created binary drop for java.nio.file.attribute.GroupPrincipal
REMOTE: Created binary drop for java.security.GeneralSecurityException
REMOTE: Created binary drop for java.nio.file.OpenOption
REMOTE: Created binary drop for java.lang.Short
REMOTE: Created binary drop for java.lang.StringBuilder
REMOTE: Created binary drop for java.io.SyncFailedException
REMOTE: Created binary drop for java.lang.StringBuffer
REMOTE: Created binary drop for java.nio.file.attribute.FileStoreAttributeView
REMOTE: Created binary drop for sun.util.locale.InternalLocaleBuilder
REMOTE: Created binary drop for java.nio.ByteOrder
REMOTE: Created binary drop for java.lang.reflect.AnnotatedElement
REMOTE: Created binary drop for java.io.Serializable
REMOTE: Created binary drop for java.util.concurrent.ExecutorService
REMOTE: Created binary drop for java.lang.Void
REMOTE: Created binary drop for sun.util.locale.LocaleObjectCache
REMOTE: Created binary drop for java.lang.Iterable
REMOTE: Created binary drop for java.security.PrivilegedAction
REMOTE: Created binary drop for java.lang.reflect.Member
REMOTE: Created binary drop for java.util.AbstractSet
REMOTE: Created binary drop for java.lang.Package
REMOTE: Created binary drop for java.util.ResourceBundle
REMOTE: Created binary drop for java.util.jar.JarEntry
REMOTE: Created binary drop for java.util.concurrent.TimeUnit
REMOTE: Created binary drop for java.lang.CloneNotSupportedException
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/D.java
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Test.java
REMOTE: Created binary drop for java.lang.ref.ReferenceQueue
REMOTE: Created binary drop for java.util.zip.ZipFile
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/D.java
REMOTE: Created binary drop for java.lang.reflect.AccessibleObject
REMOTE: Created binary drop for java.nio.charset.CharsetDecoder
REMOTE: Created binary drop for java.util.jar.JarFile
REMOTE: Created binary drop for java.util.Locale
REMOTE: Created binary drop for java.security.AccessControlException
REMOTE: Created binary drop for java.net.ContentHandlerFactory
REMOTE: Created binary drop for java.io.FilenameFilter
REMOTE: Created binary drop for java.util.concurrent.locks.Condition
REMOTE: Created binary drop for java.net.UnknownServiceException
REMOTE: Created binary drop for com.surelogic.RegionEffects
REMOTE: Created binary drop for java.nio.channels.spi.AbstractInterruptibleChannel
REMOTE: Created binary drop for sun.reflect.ConstructorAccessor
REMOTE: Created binary drop for java.lang.Character
REMOTE: Created binary drop for java.nio.channels.ByteChannel
REMOTE: Created source drop for file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/S.java
REMOTE: Created binary drop for java.nio.channels.ScatteringByteChannel
REMOTE: Created binary drop for java.lang.Throwable
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: Parsing promises
REMOTE: ##SUBTASK, Parsing promises
REMOTE: Added 3 promises for java.lang.[] in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7e32c033
REMOTE: Added 3 promises for java.lang.[] in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@70f148dc
REMOTE: Added 18 promises for java.net.URISyntaxException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4135bbd1
REMOTE: Added 17 promises for java.util.concurrent.ConcurrentMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@6e8cc7da
REMOTE: Added 4 promises for test_abstraction.subclass.diffPackage.p1.S in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@5cd4a87e
REMOTE: Added 138 promises for java.math.BigInteger in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@30b8b706
REMOTE: Added 6 promises for test_parameter.C in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@2c1922ba
REMOTE: Added 89 promises for java.util.List in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1bb40996
REMOTE: Added 31 promises for java.lang.Object in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1ca04795
REMOTE: Javac making log: AnnotationRules
REMOTE: Added 141 promises for java.lang.Thread in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2686dbaf
REMOTE: Added 29 promises for java.util.Dictionary in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@25b3f1c0
REMOTE: Added 83 promises for java.util.Hashtable in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3f0e4d24
REMOTE: Added 16 promises for test_abstraction.unrelatedClasses.diffPackage.p1.Test in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@68f54f26
REMOTE: Added 6 promises for java.lang.NoSuchFieldException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2a0ca979
REMOTE: Added 6 promises for java.io.PrintWriter in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@38727925
REMOTE: Added 13 promises for java.lang.Enum in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@48a73a17
REMOTE: Added 70 promises for java.lang.Double in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4345fb42
REMOTE: Added 16 promises for test_abstraction.unrelatedClasses.samePackage.Test in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@4a3f8a45
REMOTE: Added 3 promises for java.util.Date in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5abc3e58
REMOTE: Added 4 promises for test_constructorVisibility.C in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@50f73da1
REMOTE: Added 6 promises for java.lang.NumberFormatException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4cb48229
REMOTE: Added 2 promises for java.lang.ref.SoftReference in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@37ef96c2
REMOTE: Added 108 promises for java.util.AbstractMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1371d092
REMOTE: Added 74 promises for test_class.Test in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@1ce985c3
REMOTE: Added 144 promises for java.lang.AbstractStringBuilder in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@24543ea6
REMOTE: Added 170 promises for java.util.Vector in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@531ec3a8
REMOTE: Added 72 promises for test_qualifiedThis.C in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@f080d46
REMOTE: Added 36 promises for test_abstraction.unrelatedClasses.nested.Other in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@136b56e2
REMOTE: Added 20 promises for java.util.concurrent.locks.Lock in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3e674588
REMOTE: Added 4 promises for java.util.Enumeration in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5ec3f03f
REMOTE: Added 6 promises for java.lang.InstantiationException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@69b33d4b
REMOTE: Added 3 promises for java.util.zip.ZipEntry in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@41acbad5
REMOTE: Added 6 promises for java.lang.Appendable in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@53dd21c6
REMOTE: Added 37 promises for java.lang.Boolean in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@27baa7cd
REMOTE: Added 12 promises for java.lang.RuntimeException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5dadbe28
REMOTE: Added 12 promises for java.lang.SecurityException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@19665551
REMOTE: Added 12 promises for java.lang.CharSequence in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@f9a5ae2
REMOTE: Added 139 promises for java.util.LinkedList in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7b2183df
REMOTE: Added 4 promises for test_abstraction.unrelatedClasses.samePackage.Other in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@292abc4e
REMOTE: Added 59 promises for java.lang.Byte in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1bffe157
REMOTE: [GC (Allocation Failure)  125024K->59545K(166912K), 0.0064150 secs]
REMOTE: Added 64 promises for java.util.Map in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3999c0f0
REMOTE: Added 6 promises for java.io.PrintStream in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@9e1cd69
REMOTE: Added 88 promises for java.util.jar.Attributes in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@288c64fc
REMOTE: Added 1 promises for test_parameter.D in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@24569a70
REMOTE: Added 6 promises for java.io.Writer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4eab0923
REMOTE: Added 1 promises for test_qualifiedThis.D in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@6be3472
REMOTE: Added 6 promises for java.util.Iterator in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@bab1ffd
REMOTE: Added 68 promises for test_parameter.Test in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@7dfd1126
REMOTE: Added 96 promises for java.lang.Long in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4b93f0ee
REMOTE: Added 1 promises for test_implicitThis.D in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@2ec15c73
REMOTE: Added 56 promises for test_explicitThis.C in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@1165dbcd
REMOTE: Added 29 promises for java.util.AbstractSequentialList in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@58975a26
REMOTE: Added 12 promises for java.lang.Class in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3b711416
REMOTE: Added 1 promises for java.lang.ThreadLocal in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@34d7d1f9
REMOTE: Added 32 promises for test_abstraction.subclass.samePackage.Test in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@3623c8d5
REMOTE: Added 32 promises for test_abstraction.subclass.diffPackage.p2.Test in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@74214a39
REMOTE: Added 6 promises for java.lang.IllegalAccessException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@49310618
REMOTE: Added 3 promises for java.nio.file.DirectoryStream in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@f0f6c23
REMOTE: Added 31 promises for java.util.SortedMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4e04da83
REMOTE: Added 3 promises for java.nio.file.Path in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@6fb35bbd
REMOTE: Added 4 promises for test_constructorVisibility.Test in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@72e03eaf
REMOTE: Added 73 promises for java.lang.Float in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@141adea
REMOTE: Added 12 promises for java.lang.IllegalArgumentException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@62908df
REMOTE: Added 96 promises for java.lang.Integer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7d10f8b4
REMOTE: Added 18 promises for java.util.Queue in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@123b5431
REMOTE: Added 301 promises for java.lang.String in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@309eff28
REMOTE: Added 36 promises for test_abstraction.sameClass.Test in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@405c0159
REMOTE: Added 18 promises for java.nio.CharBuffer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@436a227e
REMOTE: Added 87 promises for java.util.Deque in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4f9612bf
REMOTE: Added 3 promises for java.util.jar.Manifest in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@aad88af
REMOTE: Added 2 promises for test_class.nested.C in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@2c1984a2
REMOTE: WARNING: TreeAccessor couldn't find equals(java.lang.Object) in java.util.ArrayList
REMOTE: WARNING: TreeAccessor couldn't find hashCode() in java.util.ArrayList
REMOTE: Added 18 promises for java.util.ListIterator in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@13da35d4
REMOTE: Added 60 promises for java.util.AbstractList in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@600bdfe0
REMOTE: Added 7 promises for java.util.concurrent.locks.ReadWriteLock in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@15b360cd
REMOTE: Added 4 promises for test_abstraction.unrelatedClasses.diffPackage.p2.Other in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@ee1eaa0
REMOTE: Added 6 promises for test_class.C in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@6ecfe109
REMOTE: Added 54 promises for java.util.Set in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@6f9c5bd6
REMOTE: Added 56 promises for java.util.WeakHashMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@613375b
REMOTE: Added 6 promises for java.lang.InterruptedException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2c568b87
REMOTE: Added 21 promises for java.util.Stack in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@704b7b97
REMOTE: Added 104 promises for java.util.ArrayList in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@10234dc4
REMOTE: Added 61 promises for java.util.HashMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2ee22df6
REMOTE: Added 54 promises for java.util.Collection in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@10fa5cb3
REMOTE: Added 22 promises for java.lang.Number in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@570af99f
REMOTE: Added 12 promises for java.lang.Exception in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@53a24de2
REMOTE: Added 56 promises for test_implicitThis.C in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@c5c017d
REMOTE: Added 12 promises for java.lang.reflect.InvocationTargetException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@18aceb5f
REMOTE: Added 61 promises for java.lang.Short in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@64957868
REMOTE: Added 55 promises for java.util.AbstractCollection in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1557eca0
REMOTE: Added 1 promises for test_class.D in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@631e58cb
REMOTE: Added 6 promises for java.lang.CloneNotSupportedException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4a846627
REMOTE: Added 3 promises for java.lang.Iterable in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@101d2700
REMOTE: Added 34 promises for java.util.concurrent.ExecutorService in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7fe6db95
REMOTE: Added 29 promises for java.util.concurrent.TimeUnit in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5e2b8bfd
REMOTE: Added 1 promises for test_explicitThis.D in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@33278ca9
REMOTE: Added 45 promises for java.util.ResourceBundle in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@b74b514
REMOTE: Added 20 promises for test_abstraction.unrelatedClasses.nested.Test in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@145b7a13
REMOTE: Added 109 promises for java.lang.StringBuilder in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2b77c2ea
REMOTE: Added 3 promises for java.util.Locale in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@b9ac3a3
REMOTE: Added 1 promises for java.lang.ref.ReferenceQueue in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@102de6fc
REMOTE: Added 22 promises for java.util.concurrent.locks.Condition in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@f48bf11
REMOTE: Added 4 promises for test_abstraction.subclass.samePackage.S in TestEffectSanityChecks: com.surelogic.tree.SyntaxTreeNode@7979c929
REMOTE: Added 16 promises for java.util.AbstractSet in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@38f572e
REMOTE: Added 158 promises for java.lang.StringBuffer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@68ed3c61
REMOTE: Added 47 promises for java.lang.Throwable in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7b200b28
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: Scrubbing promises
REMOTE: ##SUBTASK, Scrubbing promises
REMOTE: [GC (Allocation Failure)  137369K->61769K(168448K), 0.0086340 secs]
REMOTE: Creating RegionModel java.lang.Object.Instance for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@f080d46 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } @ SuppressWarnings ( # ) private static class StaticInner extends java.lang.Object { # public # StaticInner # # # # public # StaticInner # # # # public # # bad_reads_staticInnerClass# # # # public # # bad_writes_staticInnerClass# # # # public static # # bad_static_reads_staticInnerClass# # # # public static # # bad_static_writes_staticInnerClass# # # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # Inner # # # # public # # good_reads_qualified# # # # public # # good_reads_unqualified# # # # public # # bad_reads_notOuterClass# # # # public # # bad_reads_noSuchClass# # # # public # # bad_reads_staticRegion# # # # public # # bad_reads_badRegion# # # # public # # bad_reads_noSuchRegion# # # # public # # good_writes_qualified# # # # public # # good_writes_unqualified# # # # public # # bad_writes_notOuterClass# # # # public # # bad_writes_noSuchClass# # # # public # # bad_writes_staticRegion# # # # public # # bad_writes_badRegion# # # # public # # bad_writes_noSuchRegion# # # # public # # good_read_publicRegion_publicMethod# # # # protected # # bad_read_publicRegion_protectedMethod# # # # # # bad_read_publicRegion_defaultMethod# # # # private # # bad_read_publicRegion_privateMethod# # # # public # # good_read_protectedRegion_publicMethod# # # # protected # # bad_read_protectedRegion_protectedMethod# # # # # # bad_read_protectedRegion_defaultMethod# # # # private # # bad_read_protectedRegion_privateMethod# # # # public # # good_read_defaultRegion_publicMethod# # # # protected # # bad_read_defaultRegion_protectedMethod# # # # # # bad_read_defaultRegion_defaultMethod# # # # private # # bad_read_defaultRegion_privateMethod# # # # public # # good_read_privateRegion_publicMethod# # # # protected # # bad_read_privateRegion_protectedMethod# # # # # # bad_read_privateRegion_defaultMethod# # # # private # # bad_read_privateRegion_privateMethod# # # # public # # good_write_publicRegion_publicMethod# # # # protected # # bad_write_publicRegion_protectedMethod# # # # # # bad_write_publicRegion_defaultMethod# # # # private # # bad_write_publicRegion_privateMethod# # # # public # # good_write_protectedRegion_publicMethod# # # # protected # # bad_write_protectedRegion_protectedMethod# # # # # # bad_write_protectedRegion_defaultMethod# # # # private # # bad_write_protectedRegion_privateMethod# # # # public # # good_write_defaultRegion_publicMethod# # # # protected # # bad_write_defaultRegion_protectedMethod# # # # # # bad_write_defaultRegion_defaultMethod# # # # private # # bad_write_defaultRegion_privateMethod# # # # public # # good_write_privateRegion_publicMethod# # # # protected # # bad_write_privateRegion_protectedMethod# # # # # # bad_write_privateRegion_defaultMethod# # # # private # # bad_write_privateRegion_privateMethod# # # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@c5c017d -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find field C in com.surelogic.tree.SyntaxTreeNode@1ce985c3 -- public class Test extends java.lang.Object {   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read, # # a) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b) { # }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d, # # e) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write, # # a) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b) { # }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d, # # e) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_read_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod(# # c) {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_write_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod(# # c) {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod(# # c) {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find field C in com.surelogic.tree.SyntaxTreeNode@1ce985c3 -- public class Test extends java.lang.Object {   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read, # # a) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b) { # }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d, # # e) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write, # # a) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b) { # }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d, # # e) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_read_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod(# # c) {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_write_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod(# # c) {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod(# # c) {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find field C in com.surelogic.tree.SyntaxTreeNode@1ce985c3 -- public class Test extends java.lang.Object {   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read, # # a) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b) { # }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d, # # e) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write, # # a) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b) { # }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d, # # e) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_read_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod(# # c) {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_write_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod(# # c) {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod(# # c) {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find field C in com.surelogic.tree.SyntaxTreeNode@1ce985c3 -- public class Test extends java.lang.Object {   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read, # # a) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b) { # }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d, # # e) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write, # # a) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b) { # }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d, # # e) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_read_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod(# # c) {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_write_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod(# # c) {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod(# # c) {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find field C in com.surelogic.tree.SyntaxTreeNode@1ce985c3 -- public class Test extends java.lang.Object {   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read, # # a) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b) { # }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d, # # e) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write, # # a) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b) { # }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d, # # e) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_read_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod(# # c) {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_write_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod(# # c) {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod(# # c) {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find field C in com.surelogic.tree.SyntaxTreeNode@1ce985c3 -- public class Test extends java.lang.Object {   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read, # # a) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b) { # }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d, # # e) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # read, # # a, # # b, # # c, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write, # # a) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b) { # }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d, # # e) { # }   /* is UNBOUND */  @ RegionEffects ( # ) public Test (# # write, # # a, # # b, # # c, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_read_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public void bad_write_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_read_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_read_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_qualifiedClassName() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_goodQualfiedClassName2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_write_unqualifiedClassName() {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchClass() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchRegion() {  }   /* is UNBOUND */  @ RegionEffects ( # ) public static void bad_static_write_noSuchRegion2() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_read_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_read_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod(# # c) {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_write_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public static void good_write_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod(# # c) {  }   /* is UNASSOCIATED */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod(# # c) {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@6ecfe109 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@1165dbcd -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@1165dbcd -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@1165dbcd -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@1165dbcd -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@1165dbcd -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [GC (Allocation Failure)  139593K->65488K(176128K), 0.0142480 secs]
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@1165dbcd -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@1165dbcd -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@1165dbcd -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@1165dbcd -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@1165dbcd -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@1165dbcd -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@1165dbcd -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object {   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # reads) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # reads, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # reads, # # a, # # b) { # }   /* is UNASSOCIATED: Cannot use this on constructor */  @ RegionEffects ( # ) public C (# # writes) { # }   /* is UNASSOCIATED: Cannot use this, static region on constructor */  @ RegionEffects ( # ) public C (# # writes, # # a) { # }   /* is UNBOUND: Cannot use this on constructor; region not from C */  @ RegionEffects ( # ) public C (# # writes, # # a, # # b) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_read_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_read_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_instanceRegion() {  }   /* is UNASSOCIATED: static region */  @ RegionEffects ( # ) public void bad_write_staticRegion() {  }   /* is UNBOUND: no such region */  @ RegionEffects ( # ) public void bad_write_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_read_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_read_badRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_instanceRegion() {  }   /* is UNASSOCIATED: Cannot use this on static method */  @ RegionEffects ( # ) public static void bad_static_write_staticRegion() {  }   /* is UNBOUND: Cannot use this on static method; region not from C */  @ RegionEffects ( # ) public static void bad_static_write_badRegion() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_read_privateRegion_privateMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_publicRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_protectedRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_defaultRegion_privateMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod() {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod() {  }   /* is CONSISTENT */  @ RegionEffects ( # ) @ SuppressWarnings ( # ) private void bad_write_privateRegion_privateMethod() {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find field bad in com.surelogic.tree.SyntaxTreeNode@7dfd1126 -- public class Test extends java.lang.Object {   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # c, # # reads) { # }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a) { # }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b) { # }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d) { # }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d, # # e) { # }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # c, # # writes) { # }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a) { # }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b) { # }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d) { # }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d, # # e) { # }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_reads(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public void bad_reads_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public void bad_reads_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public void bad_reads_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public void bad_reads_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public void bad_reads_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_writes(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public void bad_writes_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public void bad_writes_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public void bad_writes_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public void bad_writes_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public void bad_writes_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_reads(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public static void bad_static_reads_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public static void bad_static_reads_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public static void bad_static_reads_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public static void bad_static_reads_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public static void bad_static_reads_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_writes(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public static void bad_static_writes_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public static void bad_static_writes_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public static void bad_static_writes_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public static void bad_static_writes_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public static void bad_static_writes_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is UNASSOCIATED */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is UNASSOCIATED */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod(# # c) {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find field bad in com.surelogic.tree.SyntaxTreeNode@7dfd1126 -- public class Test extends java.lang.Object {   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # c, # # reads) { # }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a) { # }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b) { # }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d) { # }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d, # # e) { # }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # c, # # writes) { # }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a) { # }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b) { # }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d) { # }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d, # # e) { # }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_reads(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public void bad_reads_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public void bad_reads_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public void bad_reads_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public void bad_reads_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public void bad_reads_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_writes(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public void bad_writes_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public void bad_writes_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public void bad_writes_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public void bad_writes_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public void bad_writes_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_reads(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public static void bad_static_reads_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public static void bad_static_reads_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public static void bad_static_reads_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public static void bad_static_reads_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public static void bad_static_reads_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_writes(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public static void bad_static_writes_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public static void bad_static_writes_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public static void bad_static_writes_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public static void bad_static_writes_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public static void bad_static_writes_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is UNASSOCIATED */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is UNASSOCIATED */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod(# # c) {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find field bad in com.surelogic.tree.SyntaxTreeNode@7dfd1126 -- public class Test extends java.lang.Object {   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # c, # # reads) { # }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a) { # }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b) { # }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d) { # }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d, # # e) { # }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # c, # # writes) { # }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a) { # }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b) { # }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d) { # }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d, # # e) { # }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_reads(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public void bad_reads_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public void bad_reads_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public void bad_reads_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public void bad_reads_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public void bad_reads_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_writes(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public void bad_writes_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public void bad_writes_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public void bad_writes_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public void bad_writes_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public void bad_writes_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_reads(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public static void bad_static_reads_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public static void bad_static_reads_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public static void bad_static_reads_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public static void bad_static_reads_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public static void bad_static_reads_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_writes(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public static void bad_static_writes_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public static void bad_static_writes_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public static void bad_static_writes_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public static void bad_static_writes_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public static void bad_static_writes_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is UNASSOCIATED */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is UNASSOCIATED */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod(# # c) {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find field bad in com.surelogic.tree.SyntaxTreeNode@7dfd1126 -- public class Test extends java.lang.Object {   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # c, # # reads) { # }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a) { # }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b) { # }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d) { # }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d, # # e) { # }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # c, # # writes) { # }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a) { # }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b) { # }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d) { # }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d, # # e) { # }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_reads(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public void bad_reads_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public void bad_reads_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public void bad_reads_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public void bad_reads_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public void bad_reads_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_writes(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public void bad_writes_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public void bad_writes_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public void bad_writes_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public void bad_writes_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public void bad_writes_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_reads(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public static void bad_static_reads_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public static void bad_static_reads_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public static void bad_static_reads_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public static void bad_static_reads_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public static void bad_static_reads_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_writes(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public static void bad_static_writes_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public static void bad_static_writes_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public static void bad_static_writes_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public static void bad_static_writes_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public static void bad_static_writes_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is UNASSOCIATED */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is UNASSOCIATED */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod(# # c) {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find field bad in com.surelogic.tree.SyntaxTreeNode@7dfd1126 -- public class Test extends java.lang.Object {   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # c, # # reads) { # }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a) { # }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b) { # }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d) { # }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d, # # e) { # }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # c, # # writes) { # }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a) { # }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b) { # }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d) { # }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d, # # e) { # }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_reads(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public void bad_reads_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public void bad_reads_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public void bad_reads_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public void bad_reads_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public void bad_reads_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_writes(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public void bad_writes_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public void bad_writes_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public void bad_writes_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public void bad_writes_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public void bad_writes_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_reads(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public static void bad_static_reads_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public static void bad_static_reads_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public static void bad_static_reads_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public static void bad_static_reads_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public static void bad_static_reads_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_writes(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public static void bad_static_writes_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public static void bad_static_writes_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public static void bad_static_writes_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public static void bad_static_writes_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public static void bad_static_writes_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is UNASSOCIATED */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is UNASSOCIATED */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod(# # c) {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region RegionFromD in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find region NoSuchRegion in com.surelogic.tree.SyntaxTreeNode@2c1922ba -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) public class C extends java.lang.Object { public  C () { # } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: [2016-02-04 11:19:42    INFO] Couldn't find field bad in com.surelogic.tree.SyntaxTreeNode@7dfd1126 -- public class Test extends java.lang.Object {   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # c, # # reads) { # }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a) { # }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b) { # }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d) { # }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d, # # e) { # }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public Test (# # c, # # reads, # # a, # # b, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public Test (# # c, # # writes) { # }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a) { # }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b) { # }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d) { # }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d, # # e) { # }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public Test (# # c, # # writes, # # a, # # b, # # d, # # e, # # f) { # }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_reads(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public void bad_reads_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public void bad_reads_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public void bad_reads_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public void bad_reads_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public void bad_reads_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_writes(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public void bad_writes_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public void bad_writes_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public void bad_writes_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public void bad_writes_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public void bad_writes_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_reads(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public static void bad_static_reads_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public static void bad_static_reads_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public static void bad_static_reads_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public static void bad_static_reads_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public static void bad_static_reads_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public static void good_static_writes(# # c) {  }   /* is UNASSOCIATED: Region is static */  @ RegionEffects ( # ) public static void bad_static_writes_staticRegion(# # c) {  }   /* is UNBOUND: Region is not from C */  @ RegionEffects ( # ) public static void bad_static_writes_badRegion(# # c) {  }   /* is UNBOUND: No such region */  @ RegionEffects ( # ) public static void bad_static_writes_noSuchRegion(# # c) {  }   /* is UNBOUND: C is primitive, so the region lookup fails */  @ RegionEffects ( # ) public static void bad_static_writes_primitive(# # c) {  }   /* is UNBOUND: No such parameter */  @ RegionEffects ( # ) public static void bad_static_writes_noSuchParam(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_read_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_publicRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_read_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_protectedRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_read_defaultRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_read_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_read_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_read_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_read_privateRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is UNASSOCIATED */  @ RegionEffects ( # ) private void bad_read_privateRegion_privateMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) public void good_write_publicRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_publicRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_publicRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_publicRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_protectedRegion_publicMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) protected void bad_write_protectedRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_protectedRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_protectedRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_defaultRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_defaultRegion_protectedMethod(# # c) {  }   /* is CONSISTENT */  @ RegionEffects ( # ) void bad_write_defaultRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is CONSISTENT */  @ RegionEffects ( # ) private void bad_write_defaultRegion_privateMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) public void good_write_privateRegion_publicMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) protected void bad_write_privateRegion_protectedMethod(# # c) {  }   /* is UNASSOCIATED: region is less visible than method */  @ RegionEffects ( # ) void bad_write_privateRegion_defaultMethod(# # c) {  } @ SuppressWarnings ( # )   /* is UNASSOCIATED */  @ RegionEffects ( # ) private void bad_write_privateRegion_privateMethod(# # c) {  } }
REMOTE: for project TestEffectSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: Starting analyses
REMOTE: Using new analysis framework -- groups
REMOTE: Starting group: ConcurrencyDetector, ThreadEffectsModule, StructureAnalysis, ParameterizedTypeAnalysis, EqualityAnalysis, LayersAnalysis
REMOTE: ##SUBTASK, Starting parallel ConcurrencyDetector [0]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel ConcurrencyDetector [0]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##SUBTASK, Starting parallel ThreadEffectsModule [1]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel ThreadEffectsModule [1]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##SUBTASK, Starting parallel StructureAnalysis [2]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel StructureAnalysis [2]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##SUBTASK, Starting parallel ParameterizedTypeAnalysis [3]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel ParameterizedTypeAnalysis [3]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##SUBTASK, Starting parallel EqualityAnalysis [4]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel EqualityAnalysis [4]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##SUBTASK, Starting parallel LayersAnalysis [5]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel LayersAnalysis [5]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Starting parallel ConcurrencyDetector [0]: 26 for TestEffectSanityChecks
REMOTE: Starting parallel ConcurrencyDetector [0]: 26 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Starting parallel ThreadEffectsModule [1]: 26 for TestEffectSanityChecks
REMOTE: Starting parallel ThreadEffectsModule [1]: 26 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Starting parallel StructureAnalysis [2]: 26 for TestEffectSanityChecks
REMOTE: Starting parallel StructureAnalysis [2]: 26 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Starting parallel ParameterizedTypeAnalysis [3]: 26 for TestEffectSanityChecks
REMOTE: Starting parallel ParameterizedTypeAnalysis [3]: 26 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Starting parallel EqualityAnalysis [4]: 26 for TestEffectSanityChecks
REMOTE: Starting parallel EqualityAnalysis [4]: 26 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Starting parallel LayersAnalysis [5]: 26 for TestEffectSanityChecks
REMOTE: Starting parallel LayersAnalysis [5]: 26 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Other.java
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p1/S.java
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p1/Test.java
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/C.java
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Test.java
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/C.java
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/Test.java
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/C.java
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p1/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Other.java
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p1/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p1/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Other.java
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p1/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p1/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p1/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p1/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p1/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/Test.java
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Other.java
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p1/Test.java
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/C.java
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p1/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Test.java
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Other.java
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/D.java
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/D.java
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p2/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/C.java
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p2/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p2/Test.java
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p2/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p2/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p2/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/Test.java
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/sameClass/Test.java
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/sameClass/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/sameClass/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/sameClass/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/sameClass/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/nested/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/nested/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/nested/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/nested/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/nested/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/nested/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p2/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p2/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p2/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p2/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p2/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p2/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/sameClass/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: Starting group: UtilityAnalysis, SingletonAnalysis
REMOTE: com.surelogic.analysis.granules.FlowUnitGranulator@123a439b: 541
REMOTE: com.surelogic.analysis.visitors.TopLevelAnalysisVisitor$1@5e265ba4: 30
REMOTE: com.surelogic.analysis.uniqueness.classic.sideeffecting.UniquenessAnalysisModule$1@156643d4: 0
REMOTE: ##SUBTASK, Starting parallel UtilityAnalysis [6]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel UtilityAnalysis [6]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##SUBTASK, Starting parallel SingletonAnalysis [7]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel SingletonAnalysis [7]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Starting parallel UtilityAnalysis [6]: 30 for TestEffectSanityChecks
REMOTE: Starting parallel UtilityAnalysis [6]: 30 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Starting parallel SingletonAnalysis [7]: 30 for TestEffectSanityChecks
REMOTE: Starting parallel SingletonAnalysis [7]: 30 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Checking [ Utility class ] test_abstraction.unrelatedClasses.diffPackage.p1.Test
REMOTE: ##SUBTASK, Checking [ Utility class ] test_qualifiedThis.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_qualifiedThis.C
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_abstraction.unrelatedClasses.diffPackage.p1.Test
REMOTE: ##SUBTASK, Checking [ Utility class ] test_qualifiedThis.C.StaticInner
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_qualifiedThis.C.Inner
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_qualifiedThis.C.StaticInner
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_abstraction.subclass.diffPackage.p1.S
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_qualifiedThis.C.Inner
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_parameter.C
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_abstraction.subclass.diffPackage.p1.S
REMOTE: ##SUBTASK, Checking [ Utility class ] test_abstraction.unrelatedClasses.nested.Other
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_constructorVisibility.C
REMOTE: ##SUBTASK, Checking [ Utility class ] test_class.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_abstraction.unrelatedClasses.samePackage.Other
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_parameter.C
REMOTE: ##SUBTASK, Checking [ Utility class ] test_parameter.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_abstraction.unrelatedClasses.nested.Other
REMOTE: ##SUBTASK, Checking [ Utility class ] test_parameter.D
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_abstraction.unrelatedClasses.nested.Other.InnerTest
REMOTE: ##SUBTASK, Checking [ Utility class ] test_abstraction.unrelatedClasses.samePackage.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_explicitThis.C
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_parameter.D
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_parameter.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_constructorVisibility.C
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_class.Test
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_abstraction.unrelatedClasses.samePackage.Other
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_abstraction.unrelatedClasses.nested.Other.InnerTest
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_implicitThis.D
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_explicitThis.C
REMOTE: ##SUBTASK, Checking [ Utility class ] test_abstraction.subclass.diffPackage.p2.Test
REMOTE: ##SUBTASK, Checking [ Utility class ] test_qualifiedThis.D
REMOTE: ##SUBTASK, Checking [ Utility class ] test_abstraction.subclass.samePackage.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_abstraction.sameClass.Test
REMOTE: ##SUBTASK, Checking [ Utility class ] test_class.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_abstraction.unrelatedClasses.samePackage.Test
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_implicitThis.D
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_abstraction.sameClass.Test
REMOTE: ##SUBTASK, Checking [ Utility class ] test_class.nested.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_abstraction.unrelatedClasses.diffPackage.p2.Other
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_abstraction.subclass.diffPackage.p2.Test
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_qualifiedThis.D
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_constructorVisibility.Test
REMOTE: ##SUBTASK, Checking [ Utility class ] test_abstraction.unrelatedClasses.nested.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_constructorVisibility.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_abstraction.unrelatedClasses.nested.Test.Inner
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_abstraction.unrelatedClasses.nested.Test.Inner
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_explicitThis.D
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_explicitThis.D
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_abstraction.subclass.samePackage.S
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_abstraction.subclass.samePackage.S
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_abstraction.subclass.samePackage.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_class.D
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_class.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Utility class ] test_implicitThis.C
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_class.nested.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_abstraction.unrelatedClasses.diffPackage.p2.Other
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_abstraction.unrelatedClasses.nested.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_class.D
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Singleton class ] test_implicitThis.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: Starting group: LockModelBuilder
REMOTE: ##SUBTASK, Starting parallel LockModelBuilder [8]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel LockModelBuilder [8]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Starting parallel LockModelBuilder [8]: 26 for TestEffectSanityChecks
REMOTE: Starting parallel LockModelBuilder [8]: 26 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p1/Test.java
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p1/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/C.java
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/Test.java
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/D.java
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/D.java
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/sameClass/Test.java
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p2/Test.java
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p2/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Test.java
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/nested/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/Test.java
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/D.java
REMOTE: ##SUBTASK, Checking [ Lock Model Builder ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: Starting group: ThreadSafeAnalysis
REMOTE: ##SUBTASK, Starting parallel ThreadSafeAnalysis [9]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel ThreadSafeAnalysis [9]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Starting parallel ThreadSafeAnalysis [9]: 30 for TestEffectSanityChecks
REMOTE: Starting parallel ThreadSafeAnalysis [9]: 30 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_qualifiedThis.C
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_qualifiedThis.C.StaticInner
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_qualifiedThis.C.Inner
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_abstraction.subclass.diffPackage.p1.S
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_parameter.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_class.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_abstraction.unrelatedClasses.nested.Other
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_constructorVisibility.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_abstraction.unrelatedClasses.samePackage.Other
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_explicitThis.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_parameter.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_abstraction.subclass.diffPackage.p2.Test
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_qualifiedThis.D
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_abstraction.subclass.samePackage.Test
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_parameter.D
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_abstraction.unrelatedClasses.samePackage.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_constructorVisibility.Test
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_class.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_abstraction.sameClass.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_implicitThis.D
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_abstraction.unrelatedClasses.nested.Test.Inner
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_explicitThis.D
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_abstraction.unrelatedClasses.nested.Test
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_class.D
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_abstraction.unrelatedClasses.diffPackage.p2.Other
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_implicitThis.C
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_class.nested.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ ThreadSafe / Containable / Immutable ] test_abstraction.subclass.samePackage.S
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: Starting group: NewLockAnalysis
REMOTE: ##SUBTASK, Starting parallel NewLockAnalysis [10]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel NewLockAnalysis [10]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Starting parallel NewLockAnalysis [10]: 26 for TestEffectSanityChecks
REMOTE: Starting parallel NewLockAnalysis [10]: 26 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p1/Test.java
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/C.java
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p1/S.java
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/C.java
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/Test.java
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Test.java
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Other.java
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/D.java
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p2/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/sameClass/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/nested/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p2/Other.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ New Lock policy ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/S.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: Starting group: EffectsAnalysis
REMOTE: ##SUBTASK, Starting parallel EffectsAnalysis [11]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel EffectsAnalysis [11]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Starting parallel EffectsAnalysis [11]: 30 for TestEffectSanityChecks
REMOTE: Starting parallel EffectsAnalysis [11]: 30 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Checking [ Region effects ] test_abstraction.unrelatedClasses.diffPackage.p1.Test
REMOTE: ##SUBTASK, Checking [ Region effects ] test_qualifiedThis.C
REMOTE: ##SUBTASK, Checking [ Region effects ] test_qualifiedThis.C.StaticInner
REMOTE: ##SUBTASK, Checking [ Region effects ] test_qualifiedThis.C.Inner
REMOTE: ##SUBTASK, Checking [ Region effects ] test_abstraction.subclass.diffPackage.p1.S
REMOTE: ##SUBTASK, Checking [ Region effects ] test_parameter.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_class.Test
REMOTE: ##SUBTASK, Checking [ Region effects ] test_abstraction.unrelatedClasses.nested.Other
REMOTE: ##SUBTASK, Checking [ Region effects ] test_abstraction.unrelatedClasses.samePackage.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_abstraction.unrelatedClasses.nested.Other.InnerTest
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_constructorVisibility.C
REMOTE: ##SUBTASK, Checking [ Region effects ] test_parameter.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_abstraction.unrelatedClasses.samePackage.Other
REMOTE: ##SUBTASK, Checking [ Region effects ] test_parameter.D
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_explicitThis.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_qualifiedThis.D
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_abstraction.subclass.samePackage.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_abstraction.subclass.diffPackage.p2.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_implicitThis.D
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_abstraction.sameClass.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_constructorVisibility.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_class.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_class.nested.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_abstraction.unrelatedClasses.diffPackage.p2.Other
REMOTE: ##SUBTASK, Checking [ Region effects ] test_implicitThis.C
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_class.D
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_abstraction.unrelatedClasses.nested.Test
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_abstraction.unrelatedClasses.nested.Test.Inner
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_explicitThis.D
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Region effects ] test_abstraction.subclass.samePackage.S
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: Starting group: UniquenessAnalysisModule
REMOTE: ##SUBTASK, Starting parallel UniquenessAnalysisModule [12]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel UniquenessAnalysisModule [12]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Starting parallel UniquenessAnalysisModule [12]: 0 for TestEffectSanityChecks
REMOTE: Starting parallel UniquenessAnalysisModule [12]: 0 for TestEffectSanityChecks
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: Starting group: NullablePreprocessorModule
REMOTE: ##SUBTASK, Starting parallel NullablePreprocessorModule [13]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel NullablePreprocessorModule [13]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Starting parallel NullablePreprocessorModule [13]: 26 for TestEffectSanityChecks
REMOTE: Starting parallel NullablePreprocessorModule [13]: 26 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p1/Test.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/C.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p1/S.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/C.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/Test.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Test.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Other.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/samePackage/Other.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_parameter/Test.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_qualifiedThis/D.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/diffPackage/p2/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/sameClass/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_constructorVisibility/Test.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/nested/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/nested/Test.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/D.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_class/D.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/unrelatedClasses/diffPackage/p2/Other.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_implicitThis/C.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_abstraction/subclass/samePackage/S.java
REMOTE: ##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestEffectSanityChecks/src/test_explicitThis/D.java
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: Starting group: NullableModule2
REMOTE: ##SUBTASK, Starting parallel NullableModule2 [14]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: Starting parallel NullableModule2 [14]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Starting parallel NullableModule2 [14]: 541 for TestEffectSanityChecks
REMOTE: Starting parallel NullableModule2 [14]: 541 for TestEffectSanityChecks
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.Test()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.privateMethodParam_Public(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.privateMethodParam_Protected(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.privateMethodParam_Default(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.privateMethodParam_Private(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.defaultMethodParam_Public(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.defaultMethodParam_Protected(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.defaultMethodParam_Default(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.protectedMethodParam_Public(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.protectedMethodParam_Default(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.defaultMethodParam_Private(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.protectedMethodParam_Private(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.publicMethodParam_Public(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.publicMethodParam_Protected(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.protectedMethodParam_Protected(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.publicMethodParam_Default(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.publicMethodParam_Private(test_abstraction.unrelatedClasses.diffPackage.p2.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p1.Test.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.StaticInner.StaticInner(boolean)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.StaticInner.StaticInner(java.lang.Object)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.StaticInner.bad_reads_staticInnerClass()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.StaticInner.bad_writes_staticInnerClass()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.StaticInner.bad_static_reads_staticInnerClass()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.StaticInner.bad_static_writes_staticInnerClass()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.StaticInner.<clinit>
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.C()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(boolean)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(boolean,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(boolean,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(boolean,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(boolean,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(boolean,int,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(boolean,int,int,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(java.lang.Object)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(java.lang.Object,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(java.lang.Object,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(java.lang.Object,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(java.lang.Object,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(java.lang.Object,int,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.Inner(java.lang.Object,int,int,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.good_reads_qualified()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.good_reads_unqualified()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_reads_notOuterClass()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_reads_noSuchClass()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_reads_staticRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_reads_badRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_reads_noSuchRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.good_writes_qualified()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.good_writes_unqualified()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_writes_notOuterClass()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_writes_noSuchClass()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_writes_staticRegion()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_writes_badRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_writes_noSuchRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.good_read_publicRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_read_publicRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_read_publicRegion_privateMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_read_publicRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.good_read_protectedRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_read_protectedRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_read_protectedRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_read_protectedRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.good_read_defaultRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_read_defaultRegion_protectedMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_read_defaultRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.good_read_privateRegion_publicMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_read_defaultRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_read_privateRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_read_privateRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.good_write_publicRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_write_publicRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_write_publicRegion_defaultMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_write_publicRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.good_write_protectedRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_write_protectedRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_write_protectedRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_write_protectedRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.good_write_defaultRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_write_defaultRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_read_privateRegion_defaultMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_write_defaultRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.good_write_privateRegion_publicMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_write_defaultRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_write_privateRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_write_privateRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.bad_write_privateRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p1.S.S()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p1.S.<clinit>
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.C.Inner.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.C.C()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.C.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(boolean)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(boolean,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(boolean,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(boolean,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(boolean,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(boolean,int,int,int,int,int)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(boolean,int,int,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(java.lang.Object)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(java.lang.Object,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(java.lang.Object,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(java.lang.Object,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(java.lang.Object,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(java.lang.Object,int,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.Test(java.lang.Object,int,int,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_read_qualifiedClassName()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_read_goodQualfiedClassName2()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_read_unqualifiedClassName()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_staticRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_noSuchClass()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_noSuchRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_noSuchRegion2()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_write_qualifiedClassName()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_write_goodQualfiedClassName2()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_write_unqualifiedClassName()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_staticRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_noSuchClass()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_noSuchRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_noSuchRegion2()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_static_read_qualifiedClassName()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_static_read_goodQualfiedClassName2()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_static_read_unqualifiedClassName()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_static_read_staticRegion()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_static_read_noSuchClass()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_static_read_noSuchRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_static_read_noSuchRegion2()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_static_write_qualifiedClassName()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_static_write_goodQualfiedClassName2()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_static_write_unqualifiedClassName()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_static_write_staticRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_static_write_noSuchClass()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_static_write_noSuchRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_static_write_noSuchRegion2()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_read_publicRegion_publicMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_publicRegion_protectedMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_publicRegion_defaultMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_publicRegion_privateMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_read_protectedRegion_publicMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_protectedRegion_privateMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_protectedRegion_protectedMethod(test_class.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_read_defaultRegion_publicMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_defaultRegion_protectedMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_defaultRegion_defaultMethod(test_class.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_defaultRegion_privateMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_read_privateRegion_publicMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_privateRegion_protectedMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_privateRegion_defaultMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_publicRegion_protectedMethod(test_class.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_publicRegion_defaultMethod(test_class.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_write_publicRegion_publicMethod(test_class.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_protectedRegion_defaultMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_publicRegion_privateMethod(test_class.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_read_privateRegion_privateMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_write_protectedRegion_publicMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_protectedRegion_defaultMethod(test_class.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_protectedRegion_protectedMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_protectedRegion_privateMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_write_defaultRegion_publicMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_defaultRegion_protectedMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_defaultRegion_defaultMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_defaultRegion_privateMethod(test_class.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.good_write_privateRegion_publicMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_privateRegion_defaultMethod(test_class.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_privateRegion_protectedMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.<clinit>
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.Test.bad_write_privateRegion_privateMethod(test_class.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.Test()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.privateMethodParam_Public(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.privateMethodParam_Protected(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.privateMethodParam_Default(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.privateMethodParam_Private(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.defaultMethodParam_Public(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.defaultMethodParam_Protected(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.defaultMethodParam_Default(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.defaultMethodParam_Private(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.protectedMethodParam_Protected(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.protectedMethodParam_Public(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.protectedMethodParam_Default(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.publicMethodParam_Public(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.protectedMethodParam_Private(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.publicMethodParam_Protected(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.publicMethodParam_Private(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.publicMethodParam_Default(test_abstraction.unrelatedClasses.samePackage.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.Other()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.InnerTest()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Test.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.privateMethodReceiver_Public()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.privateMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.privateMethodReceiver_Default()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.privateMethodReceiver_Private()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.defaultMethodReceiver_Public()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.defaultMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.defaultMethodReceiver_Default()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.defaultMethodReceiver_Private()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.protectedMethodReceiver_Public()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.protectedMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.protectedMethodReceiver_Default()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.protectedMethodReceiver_Private()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.publicMethodReceiver_Public()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.publicMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.publicMethodReceiver_Private()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.privateMethodParam_Public(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.privateMethodParam_Protected(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.privateMethodParam_Default(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.privateMethodParam_Private(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.defaultMethodParam_Public(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.defaultMethodParam_Protected(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.defaultMethodParam_Default(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.publicMethodReceiver_Default()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.protectedMethodParam_Public(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.defaultMethodParam_Private(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.protectedMethodParam_Protected(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.protectedMethodParam_Default(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.protectedMethodParam_Private(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.publicMethodParam_Public(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.publicMethodParam_Protected(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.publicMethodParam_Default(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.publicMethodParam_Private(test_abstraction.unrelatedClasses.nested.Other)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.InnerTest.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Other.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_constructorVisibility.C.C()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_constructorVisibility.C.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.Test(test_parameter.C,boolean)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.Test(test_parameter.C,boolean,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.Test(test_parameter.C,boolean,int,int)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.Test(test_parameter.C,boolean,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.Test(int,boolean,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.Test(test_parameter.C,boolean,int,int,int,int,int)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.Test(test_parameter.C,java.lang.Object)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.Test(test_parameter.C,java.lang.Object,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.Test(test_parameter.C,java.lang.Object,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.Test(test_parameter.C,java.lang.Object,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.Test(int,java.lang.Object,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.Test(test_parameter.C,java.lang.Object,int,int,int,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.good_reads(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_reads_staticRegion(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_reads_badRegion(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_reads_noSuchRegion(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_reads_primitive(int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_reads_noSuchParam(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.good_writes(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_writes_staticRegion(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_writes_badRegion(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_writes_noSuchRegion(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_writes_primitive(int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_writes_noSuchParam(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.good_static_reads(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_static_reads_staticRegion(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_static_reads_badRegion(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_static_reads_noSuchRegion(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_static_reads_primitive(int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_static_reads_noSuchParam(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.good_static_writes(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_static_writes_staticRegion(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_static_writes_badRegion(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_static_writes_noSuchRegion(test_parameter.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_static_writes_primitive(int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_static_writes_noSuchParam(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.good_read_publicRegion_publicMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_read_publicRegion_defaultMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_read_publicRegion_privateMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.good_read_protectedRegion_publicMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_read_protectedRegion_defaultMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_read_protectedRegion_privateMethod(test_parameter.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_read_publicRegion_protectedMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.good_read_defaultRegion_publicMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_read_defaultRegion_protectedMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_read_defaultRegion_defaultMethod(test_parameter.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_read_protectedRegion_protectedMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_read_defaultRegion_privateMethod(test_parameter.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.good_read_privateRegion_publicMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_read_privateRegion_protectedMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_read_privateRegion_defaultMethod(test_parameter.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_read_privateRegion_privateMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.good_write_publicRegion_publicMethod(test_parameter.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_write_publicRegion_protectedMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_write_publicRegion_defaultMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_write_publicRegion_privateMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.good_write_protectedRegion_publicMethod(test_parameter.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_write_protectedRegion_protectedMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_write_protectedRegion_defaultMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_write_protectedRegion_privateMethod(test_parameter.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.good_write_defaultRegion_publicMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_write_defaultRegion_defaultMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_write_defaultRegion_privateMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.good_write_privateRegion_publicMethod(test_parameter.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_write_privateRegion_protectedMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_write_privateRegion_defaultMethod(test_parameter.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_write_defaultRegion_protectedMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Other.Other()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.samePackage.Other.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.D.D()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.D.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.C(boolean)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.C(boolean,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.C(boolean,int,int)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_parameter.Test.bad_write_privateRegion_privateMethod(test_parameter.C)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.C(java.lang.Object)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.C(java.lang.Object,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.C(java.lang.Object,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.good_read_instanceRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_staticRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_badRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.good_write_instanceRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_staticRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_badRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_static_read_instanceRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_static_read_staticRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_static_read_badRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_static_write_staticRegion()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_static_write_instanceRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_static_write_badRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.good_read_publicRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_publicRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_publicRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_publicRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.good_read_protectedRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_protectedRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_protectedRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_protectedRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.good_read_defaultRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_defaultRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_defaultRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_defaultRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.good_read_privateRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_privateRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_privateRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_read_privateRegion_defaultMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.good_write_publicRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_publicRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_publicRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_publicRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.good_write_protectedRegion_publicMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_protectedRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_protectedRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_defaultRegion_protectedMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_protectedRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_defaultRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_defaultRegion_defaultMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.good_write_privateRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_privateRegion_privateMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.<clinit>
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.good_write_defaultRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.D.D()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_qualifiedThis.D.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.Test()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_privateRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.privateMethodReceiver_Public()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.C.bad_write_privateRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.privateMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.privateMethodReceiver_Private()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.defaultMethodReceiver_Public()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.privateMethodReceiver_Default()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.defaultMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.defaultMethodReceiver_Private()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.protectedMethodReceiver_Public()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.protectedMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.protectedMethodReceiver_Default()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.defaultMethodReceiver_Default()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.protectedMethodReceiver_Private()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.publicMethodReceiver_Public()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.publicMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.publicMethodReceiver_Private()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.publicMethodReceiver_Default()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.privateMethodParam_Public(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.privateMethodParam_Protected(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.privateMethodParam_Default(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.privateMethodParam_Private(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.defaultMethodParam_Public(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.defaultMethodParam_Default(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.defaultMethodParam_Private(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.protectedMethodParam_Public(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.protectedMethodParam_Protected(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.defaultMethodParam_Protected(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.protectedMethodParam_Default(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.protectedMethodParam_Private(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.publicMethodParam_Protected(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.publicMethodParam_Default(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.publicMethodParam_Private(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.Test()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.privateMethodReceiver_Public()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.privateMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.privateMethodReceiver_Default()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.Test.publicMethodParam_Public(test_abstraction.subclass.samePackage.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.privateMethodReceiver_Private()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.defaultMethodReceiver_Public()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.defaultMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.defaultMethodReceiver_Default()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.defaultMethodReceiver_Private()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.protectedMethodReceiver_Public()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.protectedMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.protectedMethodReceiver_Default()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.protectedMethodReceiver_Private()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.publicMethodReceiver_Public()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.publicMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.publicMethodReceiver_Default()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.publicMethodReceiver_Private()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.privateMethodParam_Public(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.privateMethodParam_Default(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.privateMethodParam_Private(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.privateMethodParam_Protected(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.defaultMethodParam_Public(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.defaultMethodParam_Protected(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.defaultMethodParam_Default(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.defaultMethodParam_Private(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.protectedMethodParam_Public(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.protectedMethodParam_Default(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.protectedMethodParam_Private(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.protectedMethodParam_Protected(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.publicMethodParam_Protected(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.publicMethodParam_Public(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.publicMethodParam_Default(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.publicMethodParam_Private(test_abstraction.subclass.diffPackage.p2.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.diffPackage.p2.Test.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.D.D()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.D.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.Test()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.privateMethodReceiver_Public()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.privateMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.privateMethodReceiver_Default()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.privateMethodReceiver_Private()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.defaultMethodReceiver_Public()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.defaultMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.defaultMethodReceiver_Default()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.defaultMethodReceiver_Private()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.protectedMethodReceiver_Public()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.protectedMethodReceiver_Protected()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.protectedMethodReceiver_Default()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.protectedMethodReceiver_Private()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.publicMethodReceiver_Protected()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.publicMethodReceiver_Default()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.publicMethodReceiver_Private()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.publicMethodReceiver_Public()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.privateMethodParam_Public(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.privateMethodParam_Protected(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.privateMethodParam_Default(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.privateMethodParam_Private(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.defaultMethodParam_Public(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.defaultMethodParam_Protected(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.defaultMethodParam_Private(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.protectedMethodParam_Protected(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.protectedMethodParam_Default(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.defaultMethodParam_Default(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.protectedMethodParam_Private(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.publicMethodParam_Public(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.protectedMethodParam_Public(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.publicMethodParam_Protected(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.publicMethodParam_Default(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.<clinit>
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.sameClass.Test.publicMethodParam_Private(test_abstraction.sameClass.Test)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_constructorVisibility.Test.Test()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_constructorVisibility.Test.Test(int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_constructorVisibility.Test.Test(test_constructorVisibility.C)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_constructorVisibility.Test.Test(int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_constructorVisibility.Test.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.C.C()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.C.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.nested.C.<clinit>
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.nested.C.C()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.C(boolean)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.C(boolean,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.C(boolean,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.C(java.lang.Object)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.C(java.lang.Object,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.C(java.lang.Object,int,int)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.good_read_instanceRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_staticRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_badRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.good_write_instanceRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_staticRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_badRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_static_read_staticRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_static_write_instanceRegion()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_static_write_staticRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_static_read_instanceRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.good_read_publicRegion_publicMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_static_write_badRegion()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_publicRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_publicRegion_defaultMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_publicRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.good_read_protectedRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_protectedRegion_protectedMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_protectedRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_protectedRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_static_read_badRegion()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_defaultRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_defaultRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_defaultRegion_privateMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.good_read_privateRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_privateRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_privateRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.good_write_publicRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_publicRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_publicRegion_defaultMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.good_read_defaultRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_publicRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.good_write_protectedRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_protectedRegion_defaultMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_protectedRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.good_write_defaultRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_defaultRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_defaultRegion_defaultMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_defaultRegion_privateMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.good_write_privateRegion_publicMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_privateRegion_protectedMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_protectedRegion_protectedMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_privateRegion_privateMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p2.Other.Other()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.diffPackage.p2.Other.<clinit>
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_write_privateRegion_defaultMethod()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_implicitThis.C.bad_read_privateRegion_privateMethod()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.D.D()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.Test()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.Inner.Inner()
REMOTE: ##SUBTASK, Checking [ Nullable ] test_class.D.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.Inner.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.privateMethodParam_Protected(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.privateMethodParam_Default(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.privateMethodParam_Private(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.defaultMethodParam_Public(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.privateMethodParam_Public(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.defaultMethodParam_Protected(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.defaultMethodParam_Default(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.defaultMethodParam_Private(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.protectedMethodParam_Public(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.protectedMethodParam_Protected(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.protectedMethodParam_Default(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.protectedMethodParam_Private(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.publicMethodParam_Public(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.publicMethodParam_Protected(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.publicMethodParam_Default(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.publicMethodParam_Private(test_abstraction.unrelatedClasses.nested.Test . Inner)
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.unrelatedClasses.nested.Test.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.D.D()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_explicitThis.D.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.S.S()
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Checking [ Nullable ] test_abstraction.subclass.samePackage.S.<clinit>
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK_DONE
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: ##SUBTASK, Cleaning up after analysis
REMOTE: Cleaning up after analysis
REMOTE: [GC (System.gc())  149843K->68367K(177152K), 0.0117550 secs]
REMOTE: [Full GC (System.gc())  68367K->42920K(177152K), 0.1521490 secs]
REMOTE: ##WORK, 1
REMOTE: ##SUBTASK_DONE
REMOTE: Updating consistency proof
REMOTE: ##SUBTASK, Updating consistency proof
REMOTE: Exporting results to TestEffectSanityChec-2016.02.04-at-11.19.37.247
REMOTE: ##SUBTASK, Exporting results to TestEffectSanityChec-2016.02.04-at-11.19.37.247
REMOTE: Creating snapshot: /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestEffectSanityChec-2016.02.04-at-11.19.37.247/running_or_crashed_sea_snapshot.xml.gz
REMOTE: [GC (Allocation Failure)  128424K->49678K(180224K), 0.0063710 secs]
REMOTE: Done in 5834 ms.
REMOTE: ConcurrencyDetector	: 20 ms
REMOTE: ThreadEffectsModule	: 21 ms
REMOTE: StructureAnalysis	: 3 ms
REMOTE: ParameterizedTypeAnalysis	: 14 ms
REMOTE: EqualityAnalysis	: 64 ms
REMOTE: LayersAnalysis	: 233 ms
REMOTE: UtilityAnalysis	: 1 ms
REMOTE: SingletonAnalysis	: 0 ms
REMOTE: LockModelBuilder	: 14 ms
REMOTE: ThreadSafeAnalysis	: 0 ms
REMOTE: NewLockAnalysis	: 606 ms
REMOTE: EffectsAnalysis	: 86 ms
REMOTE: UniquenessAnalysisModule	: 3 ms
REMOTE: NullablePreprocessorModule	: 14 ms
REMOTE: NullableModule2	: 2295 ms
REMOTE: [2016-02-04 11:19:44    INFO] partial bindings = 9885 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
REMOTE: [2016-02-04 11:19:44    INFO] full bindings = 2514 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
REMOTE: cached = 0
REMOTE: totalT = 0
REMOTE: #Performance data for TestEffectSanityChecks
REMOTE: #Thu Feb 04 11:19:44 EST 2016
REMOTE: jsure.Add.required=0
REMOTE: jsure.All.analyses=781
REMOTE: jsure.Binding.before.canon=108
REMOTE: jsure.Binding.full.time=623
REMOTE: jsure.Binding.partial.time=508
REMOTE: jsure.Bindings.full=2514
REMOTE: jsure.Bindings.partial=9885
REMOTE: jsure.Canonicalization=545
REMOTE: jsure.Cleanup=100
REMOTE: jsure.Destroy.time=17
REMOTE: jsure.Drop.creation=21
REMOTE: jsure.Find.canon.time=10
REMOTE: jsure.Parsing=968
REMOTE: jsure.Promise.parsing=576
REMOTE: jsure.Promise.scrubbing=1894
REMOTE: jsure.Sea.export=875
REMOTE: jsure.Sea.update=74
REMOTE: jsure.Total.JSure.time=5834
REMOTE: jsure.Total.blocks=511
REMOTE: jsure.Total.canonical=6970
REMOTE: jsure.Total.decls=963
REMOTE: jsure.Total.destroyed=0
REMOTE: jsure.Total.gced=0
REMOTE: jsure.Total.loc=3818
REMOTE: jsure.Total.nodes=74457
REMOTE: jsure.Total.stmts=592
REMOTE: jsure.Total.try.destroyed=639
REMOTE: jsure.analysis.ConcurrencyDetector=20
REMOTE: jsure.analysis.EffectsAnalysis=86
REMOTE: jsure.analysis.EqualityAnalysis=64
REMOTE: jsure.analysis.LayersAnalysis=233
REMOTE: jsure.analysis.LockModelBuilder=14
REMOTE: jsure.analysis.NewLockAnalysis=606
REMOTE: jsure.analysis.NullableModule2=2295
REMOTE: jsure.analysis.NullablePreprocessorModule=14
REMOTE: jsure.analysis.ParameterizedTypeAnalysis=14
REMOTE: jsure.analysis.SingletonAnalysis=0
REMOTE: jsure.analysis.StructureAnalysis=3
REMOTE: jsure.analysis.ThreadEffectsModule=21
REMOTE: jsure.analysis.ThreadSafeAnalysis=0
REMOTE: jsure.analysis.UniquenessAnalysisModule=3
REMOTE: jsure.analysis.UtilityAnalysis=1
REMOTE: jsure.num.threads=8
REMOTE: ##DONE
REMOTE: Renaming snapshot: /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestEffectSanityChec-2016.02.04-at-11.19.37.247/sea_snapshot.xml.gz
REMOTE: Done with JSure!
REMOTE: Scanning complete in 7 seconds 87 ms (7,087 ms)
REMOTE: No socket to close
REMOTE: Closing std streams
Process result after waiting = 0
