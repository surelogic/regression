LOCAL vm : 1.8.0_05
Path: /Users/aarong/git/jsure/jsure-analysis/bin
Path: /Users/aarong/git/common/common/lib/runtime/commons-codec-1.10.jar
Path: /Users/aarong/git/common/common/lib/runtime/trove-3.0.3.jar
Path: /Users/aarong/git/common/common/lib/runtime/antlr-3.5.2-runtime.jar
Path: /Users/aarong/git/common/common/lib/runtime/servlet-api-3.1.jar
Path: /Users/aarong/git/jsure/jsure-common/lib/runtime/diffutils-1.2.1.jar
Path: /Users/aarong/git/common/common/bin
Path: /Users/aarong/git/common/common/lib/runtime/asm-5.0.2.jar
Path: /Users/aarong/git/jsure/jsure-analysis/lib/runtime/renamedJavac.jar
Path: /Users/aarong/git/common/common/lib/runtime/asm-tree-5.0.2.jar
Path: /Users/aarong/git/common/common/lib/runtime/promises-5.6.0.jar
Path: /Users/aarong/git/jsure/jsure-analysis/lib/runtime/log4j-xml-1.3alpha-8.jar
Path: /Users/aarong/git/common/common/lib/runtime/derby-10.11.1.1.jar
Path: /Users/aarong/git/jsure/jsure-common/bin
Path: /Users/aarong/git/common/common/lib/runtime/ant-1.9.4.jar
Path: /Users/aarong/git/common/common/lib/runtime/collections-generic-4.0.jar
Path: /Users/aarong/git/jsure/jsure-analysis/lib/runtime/log4j-1.3alpha-8.jar
Path: /Users/aarong/git/common/common/lib/runtime/asm-commons-5.0.2.jar
Path: /Users/aarong/git/common/common/lib/runtime/commons-lang3-3.3.2.jar
Path: /Users/aarong/git/common/common/lib/runtime/commons-io-2.4.jar
Starting process:
	/Library/Java/JavaVirtualMachines/jdk1.8.0_05.jdk/Contents/Home/jre/bin/java
	-Dsl.running.in.remote.vm=true
	-Dsurelogic.test.code=NONE
	-XX:MaxPermSize=512m
	-verbosegc
	-DSureLogicX=true
	-Dsl.run.dir=/Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestLockSanityChecks-2015.06.23-at-13.16.26.078
	-Dfluid.ir.versioning=Versioning.Off
	-Dfluid.directory.url=file:/Eclipses/eclipse-standard-luna-SR2-macosx-cocoa-x86_64/../../Users/aarong/git/jsure/jsure-analysis/
	-Xmx2048m
	-classpath
	/Users/aarong/git/jsure/jsure-analysis/bin:/Users/aarong/git/common/common/lib/runtime/commons-codec-1.10.jar:/Users/aarong/git/common/common/lib/runtime/trove-3.0.3.jar:/Users/aarong/git/common/common/lib/runtime/antlr-3.5.2-runtime.jar:/Users/aarong/git/common/common/lib/runtime/servlet-api-3.1.jar:/Users/aarong/git/jsure/jsure-common/lib/runtime/diffutils-1.2.1.jar:/Users/aarong/git/common/common/bin:/Users/aarong/git/common/common/lib/runtime/asm-5.0.2.jar:/Users/aarong/git/jsure/jsure-analysis/lib/runtime/renamedJavac.jar:/Users/aarong/git/common/common/lib/runtime/asm-tree-5.0.2.jar:/Users/aarong/git/common/common/lib/runtime/promises-5.6.0.jar:/Users/aarong/git/jsure/jsure-analysis/lib/runtime/log4j-xml-1.3alpha-8.jar:/Users/aarong/git/common/common/lib/runtime/derby-10.11.1.1.jar:/Users/aarong/git/jsure/jsure-common/bin:/Users/aarong/git/common/common/lib/runtime/ant-1.9.4.jar:/Users/aarong/git/common/common/lib/runtime/collections-generic-4.0.jar:/Users/aarong/git/jsure/jsure-analysis/lib/runtime/log4j-1.3alpha-8.jar:/Users/aarong/git/common/common/lib/runtime/asm-commons-5.0.2.jar:/Users/aarong/git/common/common/lib/runtime/commons-lang3-3.3.2.jar:/Users/aarong/git/common/common/lib/runtime/commons-io-2.4.jar
	com.surelogic.javac.jobs.RemoteJSureRun

First line in REMOTE vm = Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
[GC (Allocation Failure)  512K->488K(327168K), 0.0012580 secs]
[GC (Allocation Failure)  987K->591K(327680K), 0.0009730 secs]
[GC (Allocation Failure)  1615K->791K(327680K), 0.0009220 secs]
[GC (Allocation Failure)  1815K->807K(328704K), 0.0010080 secs]
JVM started: 1.8.0_05
Log level: INFO
Created reader
Created monitor
Created log handler
Running RemoteJSureRun
[GC (Allocation Failure)  2855K->1047K(328704K), 0.0011820 secs]
[GC (Allocation Failure)  3095K->1359K(331264K), 0.0011450 secs]
[GC (Allocation Failure)  5455K->1623K(331264K), 0.0014970 secs]
[GC (Allocation Failure)  5719K->1807K(335360K), 0.0013210 secs]
runPath = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestLockSanityChecks-2015.06.23-at-13.16.26.078
Creating run: TestLockSanityChecks-2015.06.23-at-13.16.26.078
projects = TestLockSanityChecks
Loading edu.cmu.cs.fluid.make.nonabductive.proposals = false
Loading edu.cmu.cs.fluid.load.all.classes = false
Loading edu.cmu.cs.fluid.timeoutFlag = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BCA = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ConstantExpr = false
Loading edu.cmu.cs.fluid.physMemoryInMB = 20480
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.EqualityAssurance = true
Loading edu.cmu.cs.fluid.xml.diff.directory = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/promises-xml
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceUWM = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.IRConcurrencyDetector = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Singleton = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.CALLS = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BenchmarkingUniquenessSE = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ThreadEffectAssurance2 = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Binder = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.cliend.eclipse.TypeBasedAlias = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Nullable = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.TestIsFunctional = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceUWM_SE = false
Loading edu.cmu.cs.fluid.tool-memory-mb = 2048
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.DefinitelyAssigned = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceSE = true
Loading edu.cmu.cs.fluid.analysis.thread.count = 8
Loading edu.cmu.cs.fluid.timeoutSec = 11
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.NonNullRawTypes = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LayersAssurance = true
Loading edu.cmu.cs.fluid.default.JRE = org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Loading edu.cmu.cs.fluid.timeoutWarningSec = 30
Loading edu.cmu.cs.fluid.modeling.problem.filters = 00000012com\.apple.*00000013com\.oracle.*00000010com\.sun.*00000014.*\.internal.*00000023.*BakedArrayList\.class00000007apple.*00000008oracle.*00000011quicktime.*00000005sun.*
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Utility = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BenchmarkingUniquenessNew_SE = false
Loading edu.cmu.cs.fluid.scan.may.use.compression = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ParameterizedType = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Final = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LockAssurance3 = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BenchmarkingUniquenessNew = false
Loading edu.cmu.cs.fluid.data.directory = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.NullablePreprocessor = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.EffectAssurance2 = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LV = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.StructureAssurance = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Types = false
JSure data dir = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data
XML diff dir   = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/promises-xml
Looking for JRE in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
default JRE = org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Initialized job
Created com.surelogic.analysis.concurrency.detector.ConcurrencyDetector
Starting a new group for ConcurrencyDetector
Created com.surelogic.analysis.threads.ThreadEffectsModule
Created com.surelogic.analysis.structure.StructureAnalysis
Created com.surelogic.analysis.annotationbounds.ParameterizedTypeAnalysis
Created com.surelogic.analysis.equality.EqualityAnalysis
Created com.surelogic.analysis.layers.LayersAnalysis
Created com.surelogic.analysis.utility.UtilityAnalysis
Starting a new group for UtilityAnalysis
Group: EXTERNALLY
	ConcurrencyDetector
	ThreadEffectsModule
	StructureAnalysis
	ParameterizedTypeAnalysis
	EqualityAnalysis
	LayersAnalysis
Created com.surelogic.analysis.singleton.SingletonAnalysis
[GC (Allocation Failure)  9986K->2311K(335360K), 0.0017980 secs]
Created com.surelogic.analysis.concurrency.driver.LockAnalysis
Created com.surelogic.analysis.effects.EffectsAnalysis
Created com.surelogic.analysis.uniqueness.classic.sideeffecting.UniquenessAnalysisModule
Starting a new group for UniquenessAnalysisModule
Group: com.surelogic.analysis.visitors.TopLevelAnalysisVisitor$1@69663380, EXTERNALLY
	UtilityAnalysis
	SingletonAnalysis
	LockAnalysis
	EffectsAnalysis
Created com.surelogic.analysis.nullable.NullablePreprocessorModule
Starting a new group for NullablePreprocessorModule
Group: com.surelogic.analysis.uniqueness.classic.sideeffecting.UniquenessAnalysisModule$1@5b37e0d2, class com.surelogic.analysis.bca.BindingContextAnalysis, INTERNALLY
	UniquenessAnalysisModule
Created com.surelogic.analysis.nullable.NullableModule2
Starting a new group for NullableModule2
Group: EXTERNALLY
	NullablePreprocessorModule
Group: com.surelogic.analysis.granules.FlowUnitGranulator@4459eb14, EXTERNALLY
	NullableModule2
##TASK, Scan, 890
Initializing ...
##SUBTASK, Initializing ...
monitor = com.surelogic.common.jobs.remote.AbstractRemoteSLJob$Monitor@5a2e4553
singleThread = false
[GC (Allocation Failure)  10503K->2631K(340992K), 0.0016780 secs]
[GC (Allocation Failure)  15936K->10437K(340992K), 0.0052070 secs]
[GC (Allocation Failure)  23721K->23666K(351744K), 0.0079850 secs]
Done initializing org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: 0
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/resources.jar
[GC (Allocation Failure)  44658K->43853K(352256K), 0.0138870 secs]
[GC (Allocation Failure)  64845K->47461K(366080K), 0.0050980 secs]
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/rt.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jsse.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jce.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/charsets.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jfr.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/dnsns.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/localedata.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunec.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunjce_provider.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunpkcs11.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/zipfs.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /System/Library/Java/Extensions/MRJToolkit.jar
Done initializing TestLockSanityChecks: 55
Trying to find /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestLockSanityChecks-2015.06.23-at-13.16.26.078/source/TestLockSanityChecks.bin.zip
TestLockSanityChecks: TestLockSanityChecks -> org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Done initializing org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: 0
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/resources.jar
[GC (Allocation Failure)  81253K->54025K(366080K), 0.0074980 secs]
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/rt.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jsse.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jce.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/charsets.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jfr.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/dnsns.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/localedata.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunec.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunjce_provider.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunpkcs11.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/zipfs.jar
TestLockSanityChecks: Done initializing with /System/Library/Java/Extensions/MRJToolkit.jar
TestLockSanityChecks: Done initializing with /Users/aarong/git/regression/regression/TestLockSanityChecks/promises-5.6.0.jar
##SUBTASK_DONE
##WORK, 1
Assuming that the projects are run in dependency order
Parsing ...
##SUBTASK, Parsing ...
Done adapting 0 files for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK_DONE
##WORK, 1
Parsing ...
##SUBTASK, Parsing ...
JCP: warning: [options] bootstrap class path not set in conjunction with -source 1.7
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
Adapting 55 CUTs
[GC (Allocation Failure)  87817K->61817K(387584K), 0.0137440 secs]
Done adapting 55 files for TestLockSanityChecks
##SUBTASK_DONE
##WORK, 1
Handling references for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK, Handling references for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 21 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Setting project for Object from org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 44 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 55 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 51 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 32 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 17 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 8 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 12 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 15 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 4 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 2 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK_DONE
##WORK, 1
Handling references for TestLockSanityChecks
##SUBTASK, Handling references for TestLockSanityChecks
Handling 33 dangling refs for TestLockSanityChecks
Handling 5 dangling refs for TestLockSanityChecks
Handling 1 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 2 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK_DONE
##WORK, 1
Updated 267 files in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Updated 93 files in TestLockSanityChecks
Parsing ASTs  = 506 ms
Handling refs = 408 ms
[2015-06-23 13:16:28    INFO] partial bindings = 0 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
[2015-06-23 13:16:28    INFO] full bindings = 0 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
Canonicalizing ASTs
##SUBTASK, Canonicalizing ASTs
[GC (Allocation Failure)  114553K->67381K(389120K), 0.0153820 secs]
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
[2015-06-23 13:16:28    INFO] partial bindings = 1689 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
[2015-06-23 13:16:28    INFO] full bindings = 1513 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
Canonicalizing TestLockSanityChecks/src/test_lock_region/LockViz.java
[GC (Metadata GC Threshold)  73916K->68073K(412672K), 0.0101700 secs]
[Full GC (Metadata GC Threshold)  68073K->66151K(166400K), 0.2447260 secs]
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/C.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_returns_lock/StateLock.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/B.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/good/Good3.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/BadC2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/good/Good2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/Other1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_returns_lock/PLock.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/Grandparent.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/D.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/BadC3.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/C.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/Other.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/C.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/A.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/GoodC2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/Parent.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/B.java
##WORK, 1
Binding = 119 ms
Cleaned 0 in 12 ms
##SUBTASK_DONE
##WORK, 1
Handling references for TestLockSanityChecks
##SUBTASK, Handling references for TestLockSanityChecks
Handling 21 dangling refs for TestLockSanityChecks
##SUBTASK_DONE
##WORK, 1
Handling references for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK, Handling references for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 21 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK_DONE
##WORK, 1
Updated 267 files in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Updated 93 files in TestLockSanityChecks
[GC (System.gc())  74789K->66535K(166912K), 0.0022950 secs]
[Full GC (System.gc())  66535K->55441K(166912K), 0.1212990 secs]
Creating drops
##SUBTASK, Creating drops
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
Created binary drop for sun.util.locale.BaseLocale
Created binary drop for java.nio.file.WatchKey
Created binary drop for java.net.UnknownServiceException
Created binary drop for java.io.FileNotFoundException
Created binary drop for java.nio.channels.ReadableByteChannel
Created binary drop for java.nio.channels.ByteChannel
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Other.java
Created binary drop for java.util.jar.JarFile
Created binary drop for java.nio.file.attribute.UserPrincipalLookupService
Created binary drop for java.lang.RuntimeException
Created binary drop for java.nio.file.FileStore
Created binary drop for sun.util.resources.OpenListResourceBundle
Created binary drop for java.nio.MappedByteBuffer
Created binary drop for java.nio.channels.CompletionHandler
Created binary drop for java.nio.channels.SeekableByteChannel
Created binary drop for java.nio.file.attribute.UserPrincipal
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
Created binary drop for java.nio.file.AccessMode
Created binary drop for java.security.CodeSigner
Created binary drop for java.lang.Integer
Created binary drop for java.io.FileFilter
Created binary drop for java.util.concurrent.locks.ReentrantLock
Created binary drop for java.util.zip.DataFormatException
Created binary drop for java.nio.file.attribute.FileTime
Created binary drop for java.security.PrivilegedAction
Created binary drop for sun.reflect.LangReflectAccess
Created binary drop for java.lang.ref.ReferenceQueue
Created binary drop for java.io.ObjectStreamException
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
Created binary drop for java.security.CodeSource
Created binary drop for java.io.InputStream
Created binary drop for sun.util.locale.LocaleExtensions
Created binary drop for java.net.FileNameMap
Created binary drop for java.nio.file.Path
Created binary drop for java.util.jar.Manifest
Created binary drop for java.util.concurrent.Future
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
Created binary drop for java.nio.channels.GatheringByteChannel
Created binary drop for java.lang.Appendable
Created binary drop for java.lang.Cloneable
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
Created binary drop for java.security.DomainCombiner
Created binary drop for java.security.cert.CertPath
Created binary drop for java.nio.channels.WritableByteChannel
Created binary drop for sun.reflect.MethodAccessor
Created binary drop for java.lang.reflect.Type
Created binary drop for java.lang.Short
Created binary drop for java.util.Deque
Created binary drop for java.lang.CharSequence
Created binary drop for java.security.Principal
Created binary drop for java.security.PermissionCollection
Created binary drop for java.lang.StackTraceElement
Created binary drop for java.lang.InterruptedException
Created binary drop for java.lang.annotation.Annotation
Created binary drop for java.nio.channels.AsynchronousFileChannel
Created binary drop for java.lang.String
Created binary drop for java.util.concurrent.locks.ReadWriteLock
Created binary drop for java.lang.Readable
Created binary drop for java.lang.ThreadGroup
Created binary drop for java.nio.file.PathMatcher
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/D.java
Created binary drop for java.lang.Long
Created binary drop for java.lang.Byte
Created binary drop for com.surelogic.ReturnsLock
Created binary drop for java.nio.LongBuffer
Created binary drop for java.util.concurrent.TimeUnit
Created binary drop for java.net.SocketAddress
Created binary drop for java.util.concurrent.locks.ReentrantReadWriteLock
Created binary drop for java.util.concurrent.Callable
Created binary drop for java.util.concurrent.locks.Condition
Created binary drop for java.lang.annotation.Documented
Created binary drop for java.nio.channels.spi.AbstractInterruptibleChannel
Created binary drop for java.net.URLStreamHandlerFactory
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
Created binary drop for java.lang.StringBuffer
Created binary drop for java.util.concurrent.ConcurrentMap
Created binary drop for java.lang.reflect.Method
Created binary drop for java.lang.ref.WeakReference
Created binary drop for java.lang.Void
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
Created binary drop for java.security.AccessControlContext
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
Created binary drop for java.security.cert.CertificateException
Created binary drop for java.net.URISyntaxException
Created binary drop for sun.nio.ch.Interruptible
Created binary drop for java.nio.file.DirectoryStream
Created binary drop for java.util.ListIterator
Created binary drop for java.lang.ThreadLocal
Created binary drop for java.nio.file.attribute.BasicFileAttributes
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
Created binary drop for java.util.jar.JarEntry
Created binary drop for java.util.zip.Inflater
Created binary drop for sun.reflect.ConstructorAccessor
Created binary drop for java.nio.charset.CoderResult
Created binary drop for java.net.URLConnection
Created binary drop for java.util.zip.ZipException
Created binary drop for java.nio.channels.AsynchronousChannel
Created binary drop for java.nio.channels.AsynchronousCloseException
Created binary drop for java.security.AccessControlException
Created binary drop for java.lang.reflect.AccessibleObject
Created binary drop for java.net.MalformedURLException
Created binary drop for java.util.jar.Attributes
Created binary drop for java.nio.file.attribute.FileAttributeView
Created binary drop for java.util.AbstractCollection
Created binary drop for java.util.AbstractMap
Created binary drop for java.util.Queue
Created binary drop for java.lang.ref.SoftReference
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/A.java
Created binary drop for java.lang.ref.Reference
Created binary drop for java.net.ContentHandler
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
Created binary drop for java.nio.charset.Charset
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
Created binary drop for java.nio.file.LinkOption
Created binary drop for java.net.URI
Created binary drop for java.nio.charset.CharsetEncoder
Created binary drop for java.util.zip.InflaterInputStream
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
Created binary drop for com.surelogic.RegionLock
Created binary drop for java.lang.Thread
Created binary drop for java.nio.channels.ClosedChannelException
Created binary drop for java.lang.IllegalArgumentException
Created binary drop for java.nio.file.CopyOption
Created binary drop for sun.reflect.ConstantPool
Created binary drop for java.security.cert.Certificate
Created binary drop for java.util.spi.LocaleNameProvider
Created binary drop for com.surelogic.PolicyLocks
Created binary drop for java.util.List
Created binary drop for java.lang.Enum
Created binary drop for sun.util.locale.LanguageTag
Created binary drop for java.nio.file.attribute.FileStoreAttributeView
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/C.java
Created binary drop for java.lang.reflect.Member
Created binary drop for java.lang.annotation.Retention
Created binary drop for java.util.RandomAccess
Created binary drop for java.nio.channels.FileChannel
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
Created binary drop for java.nio.file.OpenOption
Created binary drop for com.surelogic.InRegion
Created binary drop for java.util.concurrent.locks.AbstractQueuedSynchronizer
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
Created binary drop for java.lang.reflect.InvocationTargetException
Created binary drop for java.io.SyncFailedException
Created binary drop for java.security.PublicKey
Created binary drop for java.lang.annotation.RetentionPolicy
Created binary drop for com.surelogic.Regions
Created binary drop for java.util.Date
Created binary drop for sun.misc.URLClassPath
Created binary drop for java.lang.Class
Created binary drop for java.util.zip.ZipEntry
Created binary drop for java.lang.Exception
Created binary drop for java.lang.Boolean
Created binary drop for java.io.OutputStream
Created binary drop for java.lang.ClassLoader
Created binary drop for java.net.UnknownHostException
Created binary drop for java.security.NoSuchProviderException
Created binary drop for java.util.concurrent.Executor
Created binary drop for java.util.Locale
Created binary drop for java.net.Proxy
Created binary drop for java.util.Random
Created binary drop for java.net.InetAddressImpl
Created binary drop for java.util.concurrent.locks.AbstractOwnableSynchronizer
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
Created binary drop for java.lang.InstantiationException
Created binary drop for java.io.FilenameFilter
Created binary drop for java.io.DataOutputStream
Created binary drop for java.security.Guard
Created binary drop for java.nio.file.Watchable
Created binary drop for java.lang.reflect.GenericDeclaration
Created binary drop for java.nio.channels.ScatteringByteChannel
Created binary drop for java.nio.channels.InterruptibleChannel
Created binary drop for java.lang.Deprecated
Created binary drop for java.security.cert.CertificateEncodingException
Created binary drop for java.util.ResourceBundle
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
Created binary drop for java.util.MissingResourceException
Created binary drop for java.util.Map
Created binary drop for com.surelogic.RequiresLock
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
Created binary drop for java.util.Collection
Created binary drop for sun.util.LocaleServiceProviderPool
Created binary drop for java.nio.file.FileSystem
Created binary drop for java.nio.CharBuffer
Created binary drop for java.io.File
Created binary drop for java.lang.reflect.TypeVariable
Created binary drop for java.security.Timestamp
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
Created binary drop for java.io.PrintStream
Created binary drop for sun.reflect.FieldAccessor
Created binary drop for java.nio.ByteBuffer
Created binary drop for java.security.Key
Created binary drop for java.nio.charset.CharacterCodingException
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/D.java
Created binary drop for java.util.zip.ZipConstants
Created binary drop for java.lang.Iterable
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C.java
Created binary drop for java.nio.charset.CodingErrorAction
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
Created binary drop for java.util.AbstractSet
Created binary drop for java.util.SortedMap
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
Created binary drop for java.nio.channels.FileLock
Created binary drop for java.util.spi.LocaleServiceProvider
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/B.java
Created binary drop for java.util.Enumeration
Created binary drop for java.nio.file.WatchService
Created binary drop for java.util.WeakHashMap
Created binary drop for java.net.InterfaceAddress
Created binary drop for java.lang.Throwable
Created binary drop for java.security.Permission
Created binary drop for java.net.InetAddress
Created binary drop for sun.util.locale.InternalLocaleBuilder
Created binary drop for java.nio.file.WatchEvent
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/Other.java
Created binary drop for java.util.Vector
Created binary drop for java.io.IOException
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
Created binary drop for java.io.Flushable
Created binary drop for java.util.AbstractSequentialList
Created binary drop for java.security.KeyException
Created binary drop for java.util.LinkedList
Created binary drop for com.surelogic.RegionLocks
Created binary drop for sun.reflect.CallerSensitive
Created binary drop for java.util.Stack
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
Created binary drop for java.io.FilterOutputStream
Created binary drop for java.util.Hashtable
Created binary drop for java.lang.NullPointerException
Created binary drop for java.net.URL
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/B.java
Created binary drop for java.lang.annotation.Target
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/D.java
Created binary drop for java.math.BigInteger
Created binary drop for java.security.SignatureException
Created binary drop for java.nio.file.attribute.GroupPrincipal
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
Created binary drop for com.surelogic.Region
Created binary drop for java.util.HashMap
Created binary drop for java.security.GeneralSecurityException
Created binary drop for java.lang.IllegalAccessException
Created binary drop for java.io.Closeable
Created binary drop for java.nio.file.spi.FileSystemProvider
Created binary drop for java.lang.Number
Created binary drop for java.net.URLStreamHandler
Created binary drop for java.lang.reflect.Field
Created binary drop for java.lang.Runnable
Created binary drop for sun.util.locale.LocaleSyntaxException
Created binary drop for java.nio.IntBuffer
Created binary drop for java.io.Serializable
Created binary drop for java.lang.NoSuchFieldException
Created binary drop for sun.misc.JarIndex
Created binary drop for sun.reflect.ReflectionFactory
Created binary drop for sun.util.locale.Extension
Created binary drop for java.lang.CloneNotSupportedException
Created binary drop for java.util.concurrent.locks.Lock
Created binary drop for java.nio.ShortBuffer
Created binary drop for java.util.Iterator
Created binary drop for java.lang.ReflectiveOperationException
Created binary drop for sun.misc.MetaIndex
Created binary drop for java.nio.charset.CharsetDecoder
Created binary drop for java.lang.reflect.Constructor
Created binary drop for java.nio.file.attribute.FileAttribute
Created binary drop for java.util.Dictionary
Created binary drop for java.util.Comparator
Created binary drop for java.nio.file.attribute.AttributeView
Created binary drop for java.security.ProtectionDomain
Created binary drop for java.io.DataOutput
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
Created binary drop for java.nio.ByteOrder
Created binary drop for java.lang.reflect.AnnotatedElement
Created binary drop for java.lang.StringBuilder
Created binary drop for java.nio.Buffer
Created binary drop for java.lang.AutoCloseable
Created binary drop for sun.reflect.annotation.AnnotationType
Created binary drop for java.nio.channels.Channel
Created binary drop for java.util.AbstractList
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
Created binary drop for java.net.ContentHandlerFactory
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
Created binary drop for sun.misc.Resource
Created binary drop for com.surelogic.PolicyLock
Created binary drop for java.nio.FloatBuffer
Created binary drop for sun.security.util.Debug
Created binary drop for java.lang.Float
Created binary drop for java.lang.AbstractStringBuilder
Created binary drop for java.lang.Comparable
Created binary drop for java.lang.annotation.ElementType
Created binary drop for java.lang.SuppressWarnings
Created binary drop for java.lang.Character
Created binary drop for java.lang.Package
Created binary drop for java.lang.NumberFormatException
Created binary drop for java.io.FileDescriptor
Created binary drop for java.io.PrintWriter
Created binary drop for java.security.NoSuchAlgorithmException
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
Created binary drop for java.nio.DoubleBuffer
Created binary drop for java.util.Set
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
Created binary drop for java.io.UnsupportedEncodingException
Created binary drop for java.lang.Double
Created binary drop for java.io.FilterInputStream
Created binary drop for java.net.SocketException
Created binary drop for sun.util.locale.LocaleObjectCache
Created binary drop for java.lang.SecurityException
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
Created binary drop for java.util.zip.ZipFile
Created binary drop for java.net.NetworkInterface
Created binary drop for java.lang.ClassValue
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/C.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C.java
Created binary drop for java.security.InvalidKeyException
Created binary drop for java.util.ArrayList
Created binary drop for java.util.concurrent.ExecutorService
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
Created binary drop for sun.util.locale.ParseStatus
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/C1.java
Created binary drop for java.lang.Object
Created binary drop for java.io.Writer
##SUBTASK_DONE
##WORK, 1
Parsing promises
##SUBTASK, Parsing promises
Added 3 promises for java.lang.[] in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@799f7e29
Added 3 promises for java.lang.[] in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@625a9c5d
Added 1 promises for test_lock_region.Other in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@4b20014b
Javac making log: AnnotationRules
Added 3 promises for test_unique_names.BadC3 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@41bc42
Added 10 promises for test_lock_region.Grandparent in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@583dc163
Added 3 promises for java.nio.file.DirectoryStream in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7e4894c
Added 12 promises for java.lang.RuntimeException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2ea65765
Added 2 promises for java.lang.ref.SoftReference in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7d56dcda
line 1:49 missing EOF at '.'
line 1:49 missing EOF at '.'
line 1:49 missing EOF at '.'
Added 18 promises for test_lock_region.C in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@6f53b2a9
Added 1 promises for inherited_region.Instance.Bad1 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@37c58ab2
Added 3 promises for twoLocksOneRegion.sameClass.Bad in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@dac45e3
Added 1 promises for inherited_region.Subregion.Bad3 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@3a85d1bf
Added 3 promises for java.util.Date in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5b4333f3
Added 3 promises for java.util.zip.ZipEntry in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@59962abf
Added 3 promises for java.nio.file.Path in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3aa4263b
Added 1 promises for inherited_region.baseCase.Good1 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@2f144f88
Added 7 promises for java.util.concurrent.locks.ReadWriteLock in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@b8f8ba2
Added 3 promises for java.util.Locale in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@58313510
Added 1 promises for twoLocksOneRegion.unrelatedClasses.Test2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@45234995
Added 13 promises for java.lang.Enum in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@6e7d5b4
Added 1 promises for twoLocksOneRegion.unrelatedClasses.Test in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@582bcce8
Added 23 promises for test_requires_lock.PolicyLock_LockNames in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@48c15d0f
Added 87 promises for test_requires_lock.StateLock_visibility in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@3c7a4f
Added 7 promises for test_unique_names.StateVsPolicyLocks in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@7552978a
Added 58 promises for java.util.concurrent.locks.ReentrantLock in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@6456731
Added 61 promises for java.lang.Short in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4201ff20
Added 96 promises for java.lang.Integer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4f85c6e7
Added 21 promises for java.util.Stack in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@232a3dbc
Added 4 promises for java.util.Enumeration in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2b612a54
Added 1 promises for test_lock_region.D in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@43b1efe3
Added 6 promises for java.lang.Appendable in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1ebd4979
Added 45 promises for java.util.ResourceBundle in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@74d850be
Added 12 promises for java.lang.CharSequence in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@59bf6440
Added 6 promises for java.util.Iterator in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@d476c42
Added 1 promises for inherited_region.good.Good4 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@24b75837
Added 158 promises for java.lang.StringBuffer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@29a4cdd6
Added 3 promises for test_requires_lock.D in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@48fb284e
Added 3 promises for test_unique_names.BadC2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@9f2c7f6
Added 2 promises for twoLocksOneRegion.inherited.Super in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@310ca417
Added 1 promises for inherited_region.good.GoodRoot in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@779b2424
Added 2 promises for test_requires_lock.TestImprovedMessages in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@1f7498b
Added 64 promises for test_lock_field.C in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@20a5edbe
Added 103 promises for java.util.concurrent.locks.ReentrantReadWriteLock in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@72554a20
Added 11 promises for test_lock_region.GreatGrandparent in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@70113187
Added 18 promises for java.util.ListIterator in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@49b4d531
Added 83 promises for java.util.Hashtable in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7da85a0d
Added 73 promises for java.lang.Float in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5dea163
Added 2 promises for inherited_region.good.Good2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@284739fc
Added 6 promises for java.io.PrintWriter in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1d822bbd
Added 34 promises for java.util.concurrent.ExecutorService in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2752060a
Added 26 promises for test_requires_lock.StateLock_LockNames in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@2176107
Added 31 promises for java.lang.Object in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@792351a7
Added 22 promises for java.lang.Number in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@33302ee2
Added 6 promises for java.io.Writer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4b2311f5
Added 66 promises for test_lock_region.LockViz in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@516cbd4a
Added 108 promises for java.util.AbstractMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@39793acb
Added 2 promises for inherited_region.good.Good3 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@254cec7
Added 12 promises for java.lang.IllegalArgumentException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2e1b3b40
Added 70 promises for java.lang.Double in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@131db802
Added 15 promises for test_returns_lock.C_Policy in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@1d111835
Added 2 promises for twoLocksOneRegion.inherited.Duper in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@639acdc3
Added 12 promises for java.lang.SecurityException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7489ccbd
Added 66 promises for test_lock_region.LockVizJUC in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@76d561bc
Added 6 promises for java.lang.InstantiationException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@758ae3f9
Added 139 promises for java.util.LinkedList in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@53cf06b9
Added 18 promises for java.util.Queue in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5e92ce66
WARNING: TreeAccessor couldn't find equals(java.lang.Object) in java.util.ArrayList
WARNING: TreeAccessor couldn't find hashCode() in java.util.ArrayList
Added 1 promises for java.lang.ref.ReferenceQueue in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@68ddc538
Added 29 promises for java.util.concurrent.TimeUnit in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@791393c2
Added 16 promises for test_requires_lock.C in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@3214c14b
Added 12 promises for java.lang.Class in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@d7bed84
Added 22 promises for java.util.concurrent.locks.Condition in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@69aab303
Added 3 promises for java.util.jar.Manifest in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@6b6dc2b5
[GC (Allocation Failure)  129681K->59305K(176128K), 0.0055360 secs]
Added 61 promises for java.util.HashMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@72d74e9f
Added 104 promises for java.util.ArrayList in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2babf29e
Added 2 promises for inherited_region.Subregion.BadRoot2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@2de291ec
Added 37 promises for java.lang.Boolean in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@105e18a4
Added 1 promises for java.lang.ThreadLocal in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1917f66a
Added 47 promises for java.lang.Throwable in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@8016b83
Added 3 promises for test_unique_names.C1 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@66e4a00d
Added 60 promises for java.util.AbstractList in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@436278f4
Added 9 promises for test_requires_lock.StateLock_Constructor in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@3daf47f1
Added 6 promises for java.lang.NumberFormatException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@17c1ba75
Added 59 promises for java.lang.Byte in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5b71c3e8
Added 88 promises for java.util.jar.Attributes in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@6992b407
Added 3 promises for test_requires_lock.Root in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@3f05eb61
Added 54 promises for java.util.Set in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@773fc498
Added 16 promises for test_lock_region.ProtectInheritedRegion in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@4941dc8a
Added 64 promises for java.util.Map in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@403a0e82
Added 29 promises for java.util.Dictionary in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5fce9c8a
Added 55 promises for java.util.AbstractCollection in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@6a35f738
Added 138 promises for java.math.BigInteger in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@9575417
Added 79 promises for test_requires_lock.PolicyLock_visibility in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@57e9712e
Added 11 promises for test_lock_region.Parent in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@43d18f59
Added 301 promises for java.lang.String in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@59bdd719
Added 3 promises for test_unique_names.GoodC3 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@5799893f
Added 3 promises for test_requires_lock.Other1 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@42970892
Added 18 promises for java.net.URISyntaxException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@6057fdb5
Added 26 promises for test_returns_lock.StateLock in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@5f56ac35
Added 16 promises for test_requires_lock.TestDuplicates in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@6a6e660
Added 14 promises for test_requires_lock.C_Policy in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@3ce29834
Added 6 promises for java.lang.IllegalAccessException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4dc83e4c
Added 4 promises for qualified_receivers_as_locks.Outer in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@4aaa0434
Added 6 promises for java.io.PrintStream in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@75b93ef
Added 3 promises for test_requires_lock.CannotRequireRWLock in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@6ed3e689
Added 16 promises for java.util.AbstractSet in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@30521f4d
Added 22 promises for java.util.concurrent.locks.AbstractQueuedSynchronizer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2391a5ab
Added 109 promises for java.lang.StringBuilder in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3bbf306e
Added 1 promises for inherited_region.Subregion.Bad2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@5200a65b
Added 141 promises for java.lang.Thread in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5dd15cca
Added 87 promises for java.util.Deque in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2493307f
Added 6 promises for java.lang.InterruptedException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4647823
Added 3 promises for test_unique_names.GoodC2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@c474475
Added 89 promises for java.util.List in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@23a76837
Added 56 promises for java.util.WeakHashMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1347a265
Added 17 promises for test_returns_lock.C in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@754ea82d
Added 54 promises for java.util.Collection in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@76057482
Added 96 promises for java.lang.Long in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4cae339e
Added 3 promises for java.lang.Iterable in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@96239c8
Added 1 promises for test_lock_region.B in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@54c40da9
Added 144 promises for java.lang.AbstractStringBuilder in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4d97592c
Added 17 promises for java.util.concurrent.ConcurrentMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@584ffb33
Added 20 promises for java.util.concurrent.locks.Lock in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@12454ba0
Added 12 promises for java.lang.reflect.InvocationTargetException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5ea86f89
Added 12 promises for java.lang.Exception in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@278cc25f
Added 7 promises for test_requires_lock.PolicyLock_Constructor in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@37d87148
Added 24 promises for test_returns_lock.PLock in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@6594c315
Added 18 promises for java.nio.CharBuffer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1a794d72
Added 31 promises for java.util.SortedMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@21aa594d
Added 170 promises for java.util.Vector in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7d80625c
Added 29 promises for java.util.AbstractSequentialList in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5114795c
Added 6 promises for java.lang.NullPointerException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@383311cc
Added 6 promises for java.lang.NoSuchFieldException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1dd5790a
Added 6 promises for java.lang.CloneNotSupportedException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7bf46604
##SUBTASK_DONE
##WORK, 1
Scrubbing promises
##SUBTASK, Scrubbing promises
[GC (Allocation Failure)  146345K->62313K(178688K), 0.0083260 secs]
Creating RegionModel java.lang.Object.Instance for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
[2015-06-23 13:16:30    INFO] Couldn't find field unknownField in com.surelogic.tree.SyntaxTreeNode@20a5edbe -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:30    INFO] Couldn't find field fieldFromD in com.surelogic.tree.SyntaxTreeNode@20a5edbe -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:30    INFO] Couldn't find field badFieldFromD in com.surelogic.tree.SyntaxTreeNode@20a5edbe -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:30    INFO] Couldn't find field unknownField in com.surelogic.tree.SyntaxTreeNode@20a5edbe -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:30    INFO] Couldn't find field unknownField in com.surelogic.tree.SyntaxTreeNode@20a5edbe -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:30    INFO] Couldn't find field fieldFromD in com.surelogic.tree.SyntaxTreeNode@20a5edbe -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:30    INFO] Couldn't find field badFieldFromD in com.surelogic.tree.SyntaxTreeNode@20a5edbe -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:30    INFO] Couldn't find region UnknownRegion in com.surelogic.tree.SyntaxTreeNode@6f53b2a9 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNPARSEABLE: static region is from unrelated class (Other) */  @ RegionLocks ( {   /* is UNBOUND: Region is undefined */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot protect a static region with 'this' */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot protect a static region with a non-static field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region protected by class */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region protected by static field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region is from the protecting class; field is from the same */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region is from the protecting class; doesn't matter that field is from superclass (B) */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region is from the protecting class; doesn't matter that field is from subclass (D) */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region is from the protecting class; doesn't matter that field is from an unrelated class (Other) */  @ RegionLock ( # ) ,   /* is UNPARSEABLE: static region is from superclass (B) */  @ RegionLock ( # ) ,   /* is UNPARSEABLE: static region is from subclass (D) */  @ RegionLock ( # ) ,   /* is UNPARSEABLE: static region is from unrelated class (Other) */  @ RegionLock ( # ) } ) public class C extends test_lock_region.B { public  C () { # } final java.lang.Object nonStaticField #; final static java.lang.Object staticFieldFromC #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[GC (Allocation Failure)  149353K->65806K(190464K), 0.0106870 secs]
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@6594c315 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find field p in com.surelogic.tree.SyntaxTreeNode@6594c315 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@6594c315 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@6594c315 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@6594c315 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find field NoSuchClass in com.surelogic.tree.SyntaxTreeNode@6594c315 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@5f56ac35 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find field p in com.surelogic.tree.SyntaxTreeNode@5f56ac35 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@5f56ac35 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@5f56ac35 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@5f56ac35 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find field NoSuchClass in com.surelogic.tree.SyntaxTreeNode@5f56ac35 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@48c15d0f -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find field p in com.surelogic.tree.SyntaxTreeNode@48c15d0f -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@48c15d0f -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@48c15d0f -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@48c15d0f -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find field NoSuchClass in com.surelogic.tree.SyntaxTreeNode@48c15d0f -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@2176107 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find field p in com.surelogic.tree.SyntaxTreeNode@2176107 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@2176107 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@2176107 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@2176107 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-23 13:16:31    INFO] Couldn't find field NoSuchClass in com.surelogic.tree.SyntaxTreeNode@2176107 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
##SUBTASK_DONE
##WORK, 1
Starting analyses
Using new analysis framework -- groups
Starting group: ConcurrencyDetector, ThreadEffectsModule, StructureAnalysis, ParameterizedTypeAnalysis, EqualityAnalysis, LayersAnalysis
##SUBTASK, Starting parallel ConcurrencyDetector [0]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel ConcurrencyDetector [0]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK, Starting parallel ThreadEffectsModule [1]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel ThreadEffectsModule [1]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK, Starting parallel StructureAnalysis [2]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel StructureAnalysis [2]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK, Starting parallel ParameterizedTypeAnalysis [3]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel ParameterizedTypeAnalysis [3]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK, Starting parallel EqualityAnalysis [4]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel EqualityAnalysis [4]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK, Starting parallel LayersAnalysis [5]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel LayersAnalysis [5]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Starting parallel ConcurrencyDetector [0]: 55 for TestLockSanityChecks
Starting parallel ConcurrencyDetector [0]: 55 for TestLockSanityChecks
##SUBTASK, Starting parallel ThreadEffectsModule [1]: 55 for TestLockSanityChecks
Starting parallel ThreadEffectsModule [1]: 55 for TestLockSanityChecks
##SUBTASK, Starting parallel StructureAnalysis [2]: 55 for TestLockSanityChecks
Starting parallel StructureAnalysis [2]: 55 for TestLockSanityChecks
##SUBTASK, Starting parallel ParameterizedTypeAnalysis [3]: 55 for TestLockSanityChecks
Starting parallel ParameterizedTypeAnalysis [3]: 55 for TestLockSanityChecks
##SUBTASK, Starting parallel EqualityAnalysis [4]: 55 for TestLockSanityChecks
Starting parallel EqualityAnalysis [4]: 55 for TestLockSanityChecks
##SUBTASK, Starting parallel LayersAnalysis [5]: 55 for TestLockSanityChecks
Starting parallel LayersAnalysis [5]: 55 for TestLockSanityChecks
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C.java
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C.java
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/A.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/A.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/A.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/A.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/A.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/A.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/Other.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/Other.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/B.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/B.java
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/B.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/B.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/B.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/B.java
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/B.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/B.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/B.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Other.java
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/B.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/B.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/B.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/C.java
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/D.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/C.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/D.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/C.java
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/D.java
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/C.java
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Concurrency detector ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Structure analysis ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Reference equality ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Static structure ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
Starting group: UtilityAnalysis, SingletonAnalysis, LockAnalysis, EffectsAnalysis
com.surelogic.analysis.uniqueness.classic.sideeffecting.UniquenessAnalysisModule$1@5b37e0d2: 0
com.surelogic.analysis.visitors.TopLevelAnalysisVisitor$1@69663380: 65
com.surelogic.analysis.granules.FlowUnitGranulator@4459eb14: 440
##SUBTASK, Starting parallel UtilityAnalysis [6]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel UtilityAnalysis [6]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK, Starting parallel SingletonAnalysis [7]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel SingletonAnalysis [7]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK, Starting parallel LockAnalysis [8]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel LockAnalysis [8]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Looking at @RegionLock("MUTEX is this protects WaitQueue") on Object
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2c120920 on java.lang.Object
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3f092ae2 on inherited_region.good.Good4
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6f3f5e9 on test_unique_names.C1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3a94a71e on test_unique_names.GoodC2
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1b88437a on twoLocksOneRegion.unrelatedClasses.Test
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4780a63a on qualified_receivers_as_locks.Outer.Inner
Created com.surelogic.dropsea.ir.drops.locks.LockModel@21f6a6d7 on test_requires_lock.Other1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@527623ea on test_requires_lock.Other1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6e48a0bf on test_requires_lock.TestDuplicates
Created com.surelogic.dropsea.ir.drops.locks.LockModel@32fc8914 on test_requires_lock.TestDuplicates
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7a108a0b on test_requires_lock.C.Inner1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@35ea0e21 on test_returns_lock.C.Inner1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5057554b on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2e69dd98 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@93ddcdf on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6cc340df on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@654bd01 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6631254e on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@10dc673 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@77bebb35 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@54a1bc76 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3bd5e8f9 on twoLocksOneRegion.sameClass.Bad
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5661f118 on test_requires_lock.StateLock_LockNames
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1b7c1688 on test_requires_lock.StateLock_LockNames
Created com.surelogic.dropsea.ir.drops.locks.LockModel@324546f1 on test_requires_lock.StateLock_LockNames
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6848d2d2 on inherited_region.good.Good3
Created com.surelogic.dropsea.ir.drops.locks.LockModel@13fb4105 on twoLocksOneRegion.inherited.Super
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4c3e2eca on test_requires_lock.CannotRequireRWLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@62ceabdd on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2bf42de8 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5b934f99 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@66e6725f on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@71e1ad1d on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7bf045a4 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3ade22c4 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6fffcb4a on inherited_region.baseCase.Good1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6aaea05d on test_requires_lock.StateLock_Constructor
Created com.surelogic.dropsea.ir.drops.locks.LockModel@30995d3a on test_requires_lock.StateLock_Constructor
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6cb49ed3 on test_requires_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5ce7eee6 on test_requires_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5c07c55c on test_returns_lock.StateLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@716b244c on test_returns_lock.StateLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6b49f573 on test_returns_lock.StateLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@12206bad on test_returns_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@8bf287e on test_returns_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@282c978b on test_requires_lock.Root
Created com.surelogic.dropsea.ir.drops.locks.LockModel@49a3b6ab on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@382e9b39 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6202ab7 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4afc7537 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1ebe842d on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@52052390 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5577cef5 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7c8b5ca1 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@16fe30f1 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6d9c881d on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@677e33d on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@20bfc906 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@47210c58 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4e74a8c1 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7723c439 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@290ac422 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@66865e97 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@d5fc026 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6434dfb8 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1be03cc8 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4fc6abc5 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3ceb0ceb on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7e60ddd1 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@647ca8a9 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1e9ebf60 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7a76640c on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@280b0c6 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@33869df on test_unique_names.GoodC3
Created com.surelogic.dropsea.ir.drops.locks.LockModel@68b6a367 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2129fc79 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@26286e1a on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@661e9d91 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3b6eb7ae on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@554a4e8e on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@30f7b283 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@22175319 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6c8a4332 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6b334e13 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@66dd9a5c on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7eca8205 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4067dd3d on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@315550f4 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3bd033f8 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@11a0442d on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6fd0ed11 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7419c2ef on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4eec7067 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5dfec4bb on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@35ae1270 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@f1ab090 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@22d8965c on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@9a845a0 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4c50eb77 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@16145c5d on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@701842b5 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7096d30d on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@766b6033 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3f986425 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7294fe3e on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@718b2703 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6014a0a6 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@33243867 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@65aeabd5 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@113b0105 on test_requires_lock.D
Created com.surelogic.dropsea.ir.drops.locks.LockModel@60474010 on twoLocksOneRegion.unrelatedClasses.Test2
Created com.surelogic.dropsea.ir.drops.locks.LockModel@70a7afce on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@42d71ff on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4dd77b56 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@174af53c on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5a5ee1c4 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3513c1f9 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@43e811c6 on inherited_region.good.Good2
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2e366eee on test_requires_lock.TestImprovedMessages
##SUBTASK, Starting parallel EffectsAnalysis [9]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel EffectsAnalysis [9]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Starting parallel UtilityAnalysis [6]: 65 for TestLockSanityChecks
Starting parallel UtilityAnalysis [6]: 65 for TestLockSanityChecks
##SUBTASK, Starting parallel SingletonAnalysis [7]: 65 for TestLockSanityChecks
Starting parallel SingletonAnalysis [7]: 65 for TestLockSanityChecks
##SUBTASK, Starting parallel LockAnalysis [8]: 65 for TestLockSanityChecks
Starting parallel LockAnalysis [8]: 65 for TestLockSanityChecks
Looking at @RegionLock("MUTEX is this protects WaitQueue") on Object
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2c120920 on java.lang.Object
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3f092ae2 on inherited_region.good.Good4
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6f3f5e9 on test_unique_names.C1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3a94a71e on test_unique_names.GoodC2
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1b88437a on twoLocksOneRegion.unrelatedClasses.Test
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4780a63a on qualified_receivers_as_locks.Outer.Inner
Created com.surelogic.dropsea.ir.drops.locks.LockModel@21f6a6d7 on test_requires_lock.Other1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@527623ea on test_requires_lock.Other1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6e48a0bf on test_requires_lock.TestDuplicates
Created com.surelogic.dropsea.ir.drops.locks.LockModel@32fc8914 on test_requires_lock.TestDuplicates
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7a108a0b on test_requires_lock.C.Inner1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@35ea0e21 on test_returns_lock.C.Inner1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5057554b on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2e69dd98 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@93ddcdf on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6cc340df on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@654bd01 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6631254e on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@10dc673 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@77bebb35 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@54a1bc76 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3bd5e8f9 on twoLocksOneRegion.sameClass.Bad
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5661f118 on test_requires_lock.StateLock_LockNames
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1b7c1688 on test_requires_lock.StateLock_LockNames
Created com.surelogic.dropsea.ir.drops.locks.LockModel@324546f1 on test_requires_lock.StateLock_LockNames
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6848d2d2 on inherited_region.good.Good3
Created com.surelogic.dropsea.ir.drops.locks.LockModel@13fb4105 on twoLocksOneRegion.inherited.Super
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4c3e2eca on test_requires_lock.CannotRequireRWLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@62ceabdd on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2bf42de8 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5b934f99 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@66e6725f on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@71e1ad1d on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7bf045a4 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3ade22c4 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6fffcb4a on inherited_region.baseCase.Good1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6aaea05d on test_requires_lock.StateLock_Constructor
Created com.surelogic.dropsea.ir.drops.locks.LockModel@30995d3a on test_requires_lock.StateLock_Constructor
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6cb49ed3 on test_requires_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5ce7eee6 on test_requires_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5c07c55c on test_returns_lock.StateLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@716b244c on test_returns_lock.StateLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6b49f573 on test_returns_lock.StateLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@12206bad on test_returns_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@8bf287e on test_returns_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@282c978b on test_requires_lock.Root
Created com.surelogic.dropsea.ir.drops.locks.LockModel@49a3b6ab on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@382e9b39 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6202ab7 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4afc7537 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1ebe842d on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@52052390 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5577cef5 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7c8b5ca1 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@16fe30f1 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6d9c881d on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@677e33d on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@20bfc906 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@47210c58 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4e74a8c1 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7723c439 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@290ac422 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@66865e97 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@d5fc026 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6434dfb8 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1be03cc8 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4fc6abc5 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3ceb0ceb on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7e60ddd1 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@647ca8a9 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1e9ebf60 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7a76640c on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@280b0c6 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@33869df on test_unique_names.GoodC3
Created com.surelogic.dropsea.ir.drops.locks.LockModel@68b6a367 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2129fc79 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@26286e1a on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@661e9d91 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3b6eb7ae on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@554a4e8e on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@30f7b283 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@22175319 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6c8a4332 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6b334e13 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@66dd9a5c on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7eca8205 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4067dd3d on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@315550f4 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3bd033f8 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@11a0442d on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6fd0ed11 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7419c2ef on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4eec7067 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5dfec4bb on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@35ae1270 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@f1ab090 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@22d8965c on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@9a845a0 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4c50eb77 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@16145c5d on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@701842b5 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7096d30d on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@766b6033 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3f986425 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7294fe3e on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@718b2703 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6014a0a6 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@33243867 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@65aeabd5 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@113b0105 on test_requires_lock.D
Created com.surelogic.dropsea.ir.drops.locks.LockModel@60474010 on twoLocksOneRegion.unrelatedClasses.Test2
Created com.surelogic.dropsea.ir.drops.locks.LockModel@70a7afce on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@42d71ff on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4dd77b56 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@174af53c on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5a5ee1c4 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3513c1f9 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@43e811c6 on inherited_region.good.Good2
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2e366eee on test_requires_lock.TestImprovedMessages
##SUBTASK, Starting parallel EffectsAnalysis [9]: 65 for TestLockSanityChecks
Starting parallel EffectsAnalysis [9]: 65 for TestLockSanityChecks
##SUBTASK, Checking [ Utility class ] inherited_region.good.GoodRoot
##SUBTASK, Checking [ Utility class ] test_lock_region.Grandparent
##SUBTASK, Checking [ Utility class ] test_requires_lock.C_Policy
##SUBTASK, Checking [ Utility class ] inherited_region.good.Good2
##SUBTASK, Checking [ Utility class ] test_requires_lock.D
##SUBTASK, Checking [ Utility class ] test_requires_lock.PolicyLock_visibility
##SUBTASK, Checking [ Utility class ] test_returns_lock.StateLock
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_lock_region.Other
##SUBTASK, Checking [ Singleton class ] inherited_region.good.GoodRoot
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_lock_region.Grandparent
##SUBTASK, Checking [ Singleton class ] test_requires_lock.C_Policy
##SUBTASK, Checking [ Singleton class ] inherited_region.good.Good2
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.D
##SUBTASK, Checking [ Singleton class ] test_requires_lock.PolicyLock_visibility
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.D
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C_Policy
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.good.Good2
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.good.GoodRoot
##SUBTASK, Checking [ Singleton class ] test_lock_region.Other
##SUBTASK, Checking [ Lock policy ] test_lock_region.Grandparent
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.Other
##SUBTASK, Checking [ Lock policy ] test_requires_lock.PolicyLock_visibility
##SUBTASK, Checking [ Singleton class ] test_returns_lock.StateLock
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.StateLock
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.D
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.good.GoodRoot
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.good.Good2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.Other
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.Grandparent
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_lock_region.LockVizJUC
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_lock_region.LockVizJUC
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.LockVizJUC
##SUBTASK, Checking [ Utility class ] test_lock_field.A
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_lock_field.A
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_field.A
##SUBTASK, Checking [ Utility class ] test_requires_lock.C
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.C
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_field.A
##SUBTASK, Checking [ Utility class ] test_requires_lock.Other1
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.Other1
##SUBTASK, Checking [ Utility class ] test_unique_names.BadC2
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_unique_names.BadC2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.BadC2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.BadC2
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] twoLocksOneRegion.inherited.Super
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] twoLocksOneRegion.inherited.Super
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.inherited.Super
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.Other1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.Other1
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_unique_names.StateVsPolicyLocks
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_unique_names.StateVsPolicyLocks
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.StateVsPolicyLocks
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] inherited_region.Instance.Bad1
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] inherited_region.Instance.Bad1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.Instance.Bad1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Instance.Bad1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.inherited.Super
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] inherited_region.good.Good3
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] inherited_region.good.Good3
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.good.Good3
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] inherited_region.good.Good4
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] inherited_region.good.Good4
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.good.Good4
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.StateVsPolicyLocks
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_lock_region.ProtectInheritedRegion
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_lock_region.ProtectInheritedRegion
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.ProtectInheritedRegion
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.good.Good4
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.good.Good3
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_requires_lock.Root
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.Root
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.Root
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.ProtectInheritedRegion
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.Root
##SUBTASK, Checking [ Utility class ] test_unique_names.GoodC2
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_unique_names.GoodC2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.GoodC2
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] inherited_region.Subregion.Bad3
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] inherited_region.Subregion.Bad3
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.Subregion.Bad3
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.GoodC2
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_lock_field.C
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_lock_field.C
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_field.C
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Subregion.Bad3
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_lock_region.LockViz
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_lock_region.LockViz
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.LockViz
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_field.C
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_returns_lock.C
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_returns_lock.C
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C_Policy
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_requires_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_requires_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.LockViz
##SUBTASK, Checking [ Utility class ] test_requires_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] twoLocksOneRegion.inherited.Duper
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] twoLocksOneRegion.inherited.Duper
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.inherited.Duper
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_lock_region.D
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_lock_region.D
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.D
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_returns_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_requires_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_returns_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.LockVizJUC
##SUBTASK, Checking [ Singleton class ] test_requires_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_returns_lock.C_Policy
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_returns_lock.C_Policy
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C_Policy
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.D
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_returns_lock.PLock
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_returns_lock.PLock
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.PLock
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] twoLocksOneRegion.unrelatedClasses.Test
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] twoLocksOneRegion.unrelatedClasses.Test
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.unrelatedClasses.Test
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.PolicyLock_visibility
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.inherited.Duper
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] inherited_region.baseCase.Good1
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] inherited_region.baseCase.Good1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.baseCase.Good1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.StateLock
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_returns_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_returns_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] inherited_region.Instance.BadRoot1
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] inherited_region.Instance.BadRoot1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.Instance.BadRoot1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.baseCase.Good1
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Instance.BadRoot1
##SUBTASK, Checking [ Utility class ] test_lock_region.C
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_lock_region.C
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.C
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_requires_lock.CannotRequireRWLock
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.CannotRequireRWLock
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.CannotRequireRWLock
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C_Policy
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_returns_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_returns_lock.C_Policy.Inner1
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.unrelatedClasses.Test
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_requires_lock.TestImprovedMessages
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.TestImprovedMessages
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.TestImprovedMessages
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.C
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_requires_lock.PolicyLock_LockNames
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.PolicyLock_LockNames
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.PolicyLock_LockNames
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_unique_names.GoodC3
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_unique_names.GoodC3
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.GoodC3
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.GoodC3
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.CannotRequireRWLock
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] inherited_region.Subregion.Bad2
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] inherited_region.Subregion.Bad2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.Subregion.Bad2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Subregion.Bad2
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_returns_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_returns_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] inherited_region.Subregion.BadRoot2
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] inherited_region.Subregion.BadRoot2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.Subregion.BadRoot2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Subregion.BadRoot2
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.PolicyLock_LockNames
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C_Policy.Inner1
##SUBTASK, Checking [ Utility class ] test_unique_names.C1
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_unique_names.C1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.C1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.C1
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_lock_field.Other
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_lock_field.Other
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_field.Other
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_unique_names.BadC3
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_unique_names.BadC3
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.BadC3
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.BadC3
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] twoLocksOneRegion.unrelatedClasses.Test2
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_field.Other
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_requires_lock.StateLock_LockNames
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.StateLock_LockNames
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.StateLock_LockNames
##SUBTASK, Checking [ Singleton class ] twoLocksOneRegion.unrelatedClasses.Test2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.unrelatedClasses.Test2
##SUBTASK, Checking [ Utility class ] test_lock_region.Parent
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_lock_region.Parent
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.Parent
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.unrelatedClasses.Test2
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_requires_lock.PolicyLock_Constructor
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.PolicyLock_Constructor
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.PolicyLock_Constructor
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.Parent
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_requires_lock.StateLock_Constructor
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.StateLock_Constructor
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.StateLock_Constructor
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.PolicyLock_Constructor
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] twoLocksOneRegion.sameClass.Bad
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] twoLocksOneRegion.sameClass.Bad
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.sameClass.Bad
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.sameClass.Bad
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_requires_lock.StateLock_visibility
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.StateLock_visibility
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.StateLock_visibility
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.StateLock_Constructor
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_lock_field.D
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_lock_field.D
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_field.D
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.StateLock_LockNames
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_field.D
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_requires_lock.TestDuplicates
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_requires_lock.TestDuplicates
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.TestDuplicates
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.PLock
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_returns_lock.PLock.Inner
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_returns_lock.PLock.Inner
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.PLock.Inner
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.PLock.Inner
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.StateLock_visibility
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.TestDuplicates
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.TestImprovedMessages
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_lock_field.B
##SUBTASK, Checking [ Utility class ] test_lock_region.B
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_lock_field.B
##SUBTASK, Checking [ Singleton class ] test_lock_region.B
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_field.B
##SUBTASK, Checking [ Lock policy ] test_lock_region.B
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.B
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] qualified_receivers_as_locks.Outer
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] qualified_receivers_as_locks.Outer
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] qualified_receivers_as_locks.Outer
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_field.B
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] qualified_receivers_as_locks.Outer
##SUBTASK_DONE
##SUBTASK, Checking [ Utility class ] test_lock_region.GreatGrandparent
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] test_lock_region.GreatGrandparent
##SUBTASK, Checking [ Utility class ] qualified_receivers_as_locks.Outer.Inner
##SUBTASK_DONE
##SUBTASK, Checking [ Singleton class ] qualified_receivers_as_locks.Outer.Inner
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] qualified_receivers_as_locks.Outer.Inner
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.GreatGrandparent
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] qualified_receivers_as_locks.Outer.Inner
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.GreatGrandparent
##SUBTASK_DONE
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
Starting group: UniquenessAnalysisModule
Starting group: NullablePreprocessorModule
##SUBTASK, Starting parallel NullablePreprocessorModule [11]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel NullablePreprocessorModule [11]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Starting parallel NullablePreprocessorModule [11]: 55 for TestLockSanityChecks
Starting parallel NullablePreprocessorModule [11]: 55 for TestLockSanityChecks
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/A.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/D.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/C.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/B.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/B.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable Preprocessor ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
Starting group: NullableModule2
##SUBTASK, Starting parallel NullableModule2 [12]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel NullableModule2 [12]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Starting parallel NullableModule2 [12]: 440 for TestLockSanityChecks
Starting parallel NullableModule2 [12]: 440 for TestLockSanityChecks
##SUBTASK, Checking [ Nullable ] test_lock_region.Grandparent.Grandparent()
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_protectedMethod_publicLock()
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.bad2(test_requires_lock.C_Policy)
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_otherClassTest2()
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_defaultMethod_protectedStaticLock()
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_ancestorClassTest1()
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.good101(test_requires_lock.TestDuplicates,test_requires_lock.Other1)
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_publicMethod_defaultLock()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.get()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_defaultMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_publicMethod_protectedLock()
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.good1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_publicMethod_privateLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.good2()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_publicMethod_defaultLock()
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,int,int)
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_ancestorClassTest2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_protectedMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.good3(test_requires_lock.C_Policy)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_publicMethod_protectedLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(int,int,int,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_protectedMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.Inner1.Inner1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_publicMethod_publicLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_protectedMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_privateStaticMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_publicMethod_publicLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_protectedMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_privateStaticMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_privateStaticMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_publicMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_privateStaticMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_privateStaticMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_publicMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_privateStaticMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_privateStaticMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_defaultStaticMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_privateStaticMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_defaultStaticMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_defaultStaticMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_publicMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_defaultStaticMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_defaultStaticMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_publicMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_defaultStaticMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(boolean,boolean)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_protectedStaticMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_protectedStaticMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_defaultStaticMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_protectedStaticMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_defaultStaticMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_protectedStaticMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_protectedStaticMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_publicStaticMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_protectedStaticMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_publicStaticMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.bad(test_requires_lock.TestDuplicates)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_protectedStaticMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_publicStaticMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_protectedStaticMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_publicStaticMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_publicStaticMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_publicStaticMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_publicStaticMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_privateMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_privateMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_privateMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_publicStaticMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_privateMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_privateMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_defaultMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_privateMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_defaultMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_privateMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,boolean)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_privateMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_defaultMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_defaultMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_defaultMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_defaultMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_protectedMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_protectedMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_protectedMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_protectedMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_publicMethod_privateStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_publicMethod_defaultStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_publicMethod_protectedStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_publicMethod_publicStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.Inner1.Inner2.Inner2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(boolean,boolean)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.Grandparent.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_unique_names.BadC2.BadC2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.Inner1.Inner2.good1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.Inner1.Inner2.getInnerLock_good()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.Inner1.Inner2.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.Inner1.good1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.Inner1.bad1()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.Inner1.bad2()
##SUBTASK, Checking [ Nullable ] test_lock_region.B.B()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_unique_names.BadC2.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.Inner1.good2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] twoLocksOneRegion.inherited.Super.Super()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.Inner1.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.D.D()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] twoLocksOneRegion.inherited.Super.<clinit>
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.D.<clinit>
##SUBTASK, Checking [ Nullable ] inherited_region.good.Good4.Good4()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.B.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_privateMethod_privateLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] qualified_receivers_as_locks.Outer.Outer()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_privateMethod_defaultLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_privateMethod_protectedLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_privateMethod_publicLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_defaultMethod_privateLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_defaultMethod_defaultLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_defaultMethod_protectedLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_defaultMethod_publicLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_protectedMethod_privateLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.bad_protectedMethod_defaultLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] qualified_receivers_as_locks.Outer.Inner.Inner()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_protectedMethod_protectedLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(float,java.lang.Object)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.good.Good4.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.Other.Other()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.Other.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockVizJUC.LockVizJUC()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] qualified_receivers_as_locks.Outer.Inner.set(int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] qualified_receivers_as_locks.Outer.Inner.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] qualified_receivers_as_locks.Outer.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.StateLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(boolean,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(boolean,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_ancestorClassTest1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_ancestorClassTest2()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockVizJUC.getPrivateMadeDefault1()
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_thisQualified_staticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_implicit_staticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockVizJUC.getPrivateMadeDefault2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_typeQualified_staticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockVizJUC.getPrivateMadeProtected1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_typeQualifiedInstance()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,int,int,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_doesntExist()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockVizJUC.getPrivateMadeProtected2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_exists()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockVizJUC.getPrivateMadeProtected3()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_exists2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockVizJUC.getPrivateMadePublic1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_bad_param(java.lang.Object)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockVizJUC.getPrivateMadePublic2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_param_doesntExist(test_returns_lock.StateLock)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockVizJUC.getPrivateMadePublic3()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_param_nonfinal(test_returns_lock.StateLock)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockVizJUC.getPrivateMadePublic4()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_param_good(test_returns_lock.StateLock)
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_staticMethod_instanceRegion1()
##SUBTASK, Checking [ Nullable ] test_lock_region.LockVizJUC.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_staticMethod_instanceRegion1a()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(java.lang.Object,boolean)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.good.Good2.Good2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.good.Good2.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.Other1.Other1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.Other1.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.C_Policy()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,float)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_staticMethod_staticRegion1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_staticMethod_staticRegion1a()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_staticMethod_unknownRegionWithThis()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.D.D()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_staticMethod_unknownRegion()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.D.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_staticMethod_unknownClass1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.C()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_staticMethod_unknownClass1a()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(boolean,float)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.getLock_staticMethod_paramLock(test_returns_lock.StateLock)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.StateLock.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.Instance.BadRoot1.BadRoot1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.bad1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.bad2(test_requires_lock.C)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.good1()
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(boolean,float)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.Instance.BadRoot1.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.good2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.CannotRequireRWLock.CannotRequireRWLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.good3(test_requires_lock.C)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.Inner1.Inner1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(java.lang.Object,int)
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.Inner1.Inner2.Inner2()
##SUBTASK, Checking [ Nullable ] test_requires_lock.C_Policy.bad1()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.Inner1.Inner2.good1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.Inner1.Inner2.getInnerLock_good()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.Inner1.Inner2.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.Inner1.good1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.Inner1.bad1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.Inner1.bad2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.Inner1.good2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.Inner1.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.C.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] twoLocksOneRegion.unrelatedClasses.Test.Test()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.CannotRequireRWLock.bad()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] twoLocksOneRegion.unrelatedClasses.Test.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.CannotRequireRWLock.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestImprovedMessages.TestImprovedMessages()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(int,java.lang.Object)
##SUBTASK, Checking [ Nullable ] inherited_region.Subregion.Bad2.Bad2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.Subregion.Bad2.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.C_Policy()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(boolean,java.lang.Object)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestImprovedMessages.bad(test_requires_lock.TestImprovedMessages)
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.getLock()
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(boolean,java.lang.Object)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.getLock(test_returns_lock.C_Policy)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestImprovedMessages.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_field.B.B()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.getLock2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.getInstanceLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.getInstanceLock(test_returns_lock.C_Policy)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.Inner1.Inner1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_unique_names.GoodC3.GoodC3()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_unique_names.GoodC3.<clinit>
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_field.B.<clinit>
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.PLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.GreatGrandparent.GreatGrandparent()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.GreatGrandparent.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_field.Other.Other()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_thisQualified_staticLock()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_implicit_staticLock()
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.Inner1.Inner2.Inner2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_typeQualified_staticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_doesntExist()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_exists()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_exists2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.Inner1.Inner2.getLock_good()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_bad_param(java.lang.Object)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(float,boolean)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(java.lang.Object,float)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.Inner1.Inner2.getLock_bad()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.Inner1.Inner2.getInnerLock_good()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.Inner1.Inner2.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.Inner1.getLock_good()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.Inner1.getLock_badQualifiedReceiver()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.Inner1.getLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.Inner1.getLock2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.Inner1.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_param_doesntExist(test_returns_lock.PLock)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C_Policy.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.StateLock_LockNames()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_param_nonfinal(test_returns_lock.PLock)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(int,boolean)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_param_good(test_returns_lock.PLock)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_field.Other.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_staticMethod_instanceRegion1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_staticMethod_instanceRegion1a()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.Parent.Parent()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_staticMethod_staticRegion1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_staticMethod_staticRegion1a()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_staticMethod_unknownRegionWithThis()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.bad_thisQualified_staticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.good_implicit_staticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_staticMethod_unknownRegion()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.good_typeQualified_staticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.bad_typeQualifiedInstance()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_staticMethod_unknownClass1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.bad_doesntExist()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.Parent.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.good_exists_implicit_this()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.good_exists_explicit_this()
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_staticMethod_unknownClass1a()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_Constructor.StateLock_Constructor(int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.bad_param_doesnt_exist(java.lang.Object)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.getLock_staticMethod_paramLock(test_returns_lock.PLock)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.bad_param_lock_doesnt_exist(test_requires_lock.StateLock_LockNames)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.good_param_nonfinal(test_requires_lock.StateLock_LockNames)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.Inner.Inner()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.good_param_is_good(test_requires_lock.StateLock_LockNames)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.bad_static_use_of_explicit_this()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_Constructor.StateLock_Constructor(int,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.bad_static_use_of_implicit_this()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.Inner.getLock_innerClassMethod_qualifiedThis_staticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.Inner.getLock_innerClassMethod_qualifiedThis_nonStaticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_Constructor.StateLock_Constructor(test_requires_lock.StateLock_Constructor)
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.Inner.<clinit>
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.good_staticMethod_implicit_staticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.PLock.<clinit>
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.good.GoodRoot.GoodRoot()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_Constructor.StateLock_Constructor(int,int,int)
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.good_staticMethod_typeQualified_staticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.bad_staticMethod_unknownRegionWithThis()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.bad_staticMethod_unknownRegionImplicitThis()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.good.GoodRoot.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.bad_staticMethod_unknownClass1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_field.A.A()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.bad_staticMethod_unknownClass1a()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_Constructor.StateLock_Constructor(int,int,int,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.staticMethod_paramLock(test_requires_lock.StateLock_LockNames)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_LockNames.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(int,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_unique_names.StateVsPolicyLocks.StateVsPolicyLocks()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(float,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(java.lang.Object,java.lang.Object)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_Constructor.<clinit>
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_field.D.D()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_field.A.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.Instance.Bad1.Bad1()
##SUBTASK, Checking [ Nullable ] test_unique_names.StateVsPolicyLocks.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.ProtectInheritedRegion.ProtectInheritedRegion()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_field.D.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.TestDuplicates()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.Instance.Bad1.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.good.Good3.Good3()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.ProtectInheritedRegion.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_unique_names.GoodC2.GoodC2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_unique_names.GoodC2.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_field.C.C()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.good.Good3.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.Root.Root()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.Root.<clinit>
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.set1(int)
##SUBTASK, Checking [ Nullable ] inherited_region.Subregion.Bad3.Bad3()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.set2(int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_field.C.<clinit>
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.Subregion.Bad3.<clinit>
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.bad()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockViz.LockViz()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.goodStatic1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.goodStatic2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.badStatic1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.goodStatic10()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.goodStatic11()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.goodStatic12()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.TestDuplicates.good100(test_requires_lock.TestDuplicates)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockViz.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.PolicyLock_visibility(float,float)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_parameterTest(test_requires_lock.PolicyLock_visibility)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_visibility.good_otherClassTest1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.bad_staticMethod_unknownClass1a()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.staticMethod_paramLock(test_requires_lock.PolicyLock_LockNames)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.C()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] twoLocksOneRegion.inherited.Duper.Duper()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_unique_names.BadC3.BadC3()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.getLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] twoLocksOneRegion.inherited.Duper.worse()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.getLock(test_returns_lock.C)
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.getLock2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] twoLocksOneRegion.inherited.Duper.<clinit>
##SUBTASK, Checking [ Nullable ] test_unique_names.BadC3.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] twoLocksOneRegion.unrelatedClasses.Test2.Test2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(int,float)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockViz.getPrivateMadeDefault1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.getInstanceLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] twoLocksOneRegion.unrelatedClasses.Test2.<clinit>
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_Constructor.PolicyLock_Constructor(int)
##SUBTASK, Checking [ Nullable ] test_lock_region.LockViz.getPrivateMadeDefault2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.getInstanceLock(test_returns_lock.C)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.Inner1.Inner1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_Constructor.PolicyLock_Constructor(int,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.Inner1.Inner2.Inner2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_Constructor.PolicyLock_Constructor(test_requires_lock.PolicyLock_Constructor)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.Inner1.Inner2.getLock_good()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.baseCase.Good1.Good1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_Constructor.PolicyLock_Constructor(int,int,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.Inner1.Inner2.getLock_bad()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.Inner1.Inner2.getInnerLock_good()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockViz.getPrivateMadeProtected1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.Inner1.Inner2.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.Inner1.getLock_good()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockViz.getPrivateMadeProtected2()
##SUBTASK, Checking [ Nullable ] inherited_region.baseCase.Good1.<clinit>
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.C.C()
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.Inner1.getLock_badQualifiedReceiver()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockViz.getPrivateMadeProtected3()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.Inner1.getLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockViz.getPrivateMadePublic1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.Inner1.getLock2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockViz.getPrivateMadePublic2()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.Inner1.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockViz.getPrivateMadePublic3()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_returns_lock.C.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.Subregion.BadRoot2.BadRoot2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.C.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_lock_region.LockViz.getPrivateMadePublic4()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.bad_doesntExist()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.good_exists_implicit_this()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.PolicyLock_LockNames()
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.good_exists_explicit_this()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] twoLocksOneRegion.sameClass.Bad.<clinit>
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.bad_param_doesnt_exist(java.lang.Object)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] inherited_region.Subregion.BadRoot2.<clinit>
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_defaultMethod_protectedLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.bad_param_lock_doesnt_exist(test_requires_lock.PolicyLock_LockNames)
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_unique_names.C1.C1()
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_defaultMethod_publicLock()
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_Constructor.PolicyLock_Constructor(int,int,int,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.good_param_nonfinal(test_requires_lock.PolicyLock_LockNames)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_protectedMethod_privateLock()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.good_param_is_good(test_requires_lock.PolicyLock_LockNames)
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_protectedMethod_defaultLock()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_protectedMethod_protectedLock()
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.bad_static_use_of_explicit_this()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_protectedMethod_publicLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.bad_static_use_of_implicit_this()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_unique_names.C1.<clinit>
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_publicMethod_privateLock()
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.good_staticMethod_implicit_staticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_Constructor.<clinit>
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_privateMethod_privateLock()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.good_staticMethod_typeQualified_staticLock()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] twoLocksOneRegion.sameClass.Bad.Bad()
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_privateMethod_defaultLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.bad_staticMethod_unknownRegionWithThis()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_privateMethod_protectedLock()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.bad_thisQualified_staticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_privateMethod_publicLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.good_implicit_staticLock()
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.bad_staticMethod_unknownRegionImplicitThis()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.good_typeQualified_staticLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.bad_defaultMethod_privateLock()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.bad_staticMethod_unknownClass1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(int,java.lang.Object)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.PolicyLock_LockNames.bad_typeQualifiedInstance()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_defaultMethod_defaultLock()
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(float,boolean)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(float,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(float,float)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(float,java.lang.Object)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(java.lang.Object,boolean)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(java.lang.Object,int)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(java.lang.Object,float)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(java.lang.Object,java.lang.Object)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_parameterTest(test_requires_lock.StateLock_visibility)
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_otherClassTest1()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.good_otherClassTest2()
##SUBTASK_DONE
##SUBTASK, Checking [ Nullable ] test_requires_lock.StateLock_visibility.StateLock_visibility(int,int,int)
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Cleaning up after analysis
Cleaning up after analysis
[GC (System.gc())  147768K->69622K(192000K), 0.0145450 secs]
[Full GC (System.gc())  69622K->44306K(192000K), 0.1636150 secs]
##WORK, 1
##SUBTASK_DONE
Updating consistency proof
##SUBTASK, Updating consistency proof
Exporting results to TestLockSanityChecks-2015.06.23-at-13.16.26.078
##SUBTASK, Exporting results to TestLockSanityChecks-2015.06.23-at-13.16.26.078
Creating snapshot: /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestLockSanityChecks-2015.06.23-at-13.16.26.078/running_or_crashed_sea_snapshot.xml.gz
[GC (Allocation Failure)  142610K->52379K(194560K), 0.0061990 secs]
Done in 5665 ms.
ConcurrencyDetector	: 26 ms
ThreadEffectsModule	: 18 ms
StructureAnalysis	: 2 ms
ParameterizedTypeAnalysis	: 10 ms
EqualityAnalysis	: 45 ms
LayersAnalysis	: 182 ms
UtilityAnalysis	: 1 ms
SingletonAnalysis	: 1 ms
LockAnalysis	: 700 ms
EffectsAnalysis	: 58 ms
UniquenessAnalysisModule	: 0 ms
NullablePreprocessorModule	: 52 ms
NullableModule2	: 1850 ms
[2015-06-23 13:16:33    INFO] partial bindings = 10444 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
[2015-06-23 13:16:33    INFO] full bindings = 2904 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
cached = 0
totalT = 0
#Performance data for TestLockSanityChecks
#Tue Jun 23 13:16:33 EDT 2015
jsure.Add.required=0
jsure.All.analyses=839
jsure.Binding.before.canon=119
jsure.Binding.full.time=708
jsure.Binding.partial.time=457
jsure.Bindings.full=2904
jsure.Bindings.partial=10444
jsure.Canonicalization=570
jsure.Cleanup=126
jsure.Destroy.time=33
jsure.Drop.creation=24
jsure.Find.canon.time=15
jsure.Parsing=920
jsure.Promise.parsing=584
jsure.Promise.scrubbing=1645
jsure.Sea.export=876
jsure.Sea.update=81
jsure.Total.JSure.time=5665
jsure.Total.blocks=375
jsure.Total.canonical=6579
jsure.Total.decls=775
jsure.Total.destroyed=1202
jsure.Total.gced=0
jsure.Total.loc=2981
jsure.Total.nodes=72662
jsure.Total.stmts=574
jsure.Total.try.destroyed=1202
jsure.analysis.ConcurrencyDetector=26
jsure.analysis.EffectsAnalysis=58
jsure.analysis.EqualityAnalysis=45
jsure.analysis.LayersAnalysis=182
jsure.analysis.LockAnalysis=700
jsure.analysis.NullableModule2=1850
jsure.analysis.NullablePreprocessorModule=52
jsure.analysis.ParameterizedTypeAnalysis=10
jsure.analysis.SingletonAnalysis=1
jsure.analysis.StructureAnalysis=2
jsure.analysis.ThreadEffectsModule=18
jsure.analysis.UniquenessAnalysisModule=0
jsure.analysis.UtilityAnalysis=1
jsure.num.threads=8
##DONE
Renaming snapshot: /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestLockSanityChecks-2015.06.23-at-13.16.26.078/sea_snapshot.xml.gz
Done with JSure!
Scanning complete (6759 ms)
No socket to close
Closing std streams
Process result after waiting = 0
