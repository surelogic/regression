Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/jsr166y.jar
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.jsure.tests_1.0.0/lib/jdom.jar
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/asm-4.1.jar
Path: /home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018/lib/runtime/javac.jar
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/collections-generic-4.0.jar
Path: /home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018/lib/runtime/log4j-1.3alpha-8.jar
Path: /home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018/lib/runtime/java-diff-utils-1.2.jar
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/trove-3.0.3.jar
Path: /home/edwin/qa/test/eclipse/plugins/org.junit_4.8.2.v4_8_2_v20110321-1705/junit.jar
Path: /home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018/lib/runtime/log4j-xml-1.3alpha-8.jar
Path: /home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018/lib/runtime/sablejbdd-0.02.jar
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/asm-commons-4.1.jar
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/antlr-runtime-3.1-sl.jar
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.jsure.tests_1.0.0
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.jsure.tests_1.0.0/lib/maven-ant-tasks-2.1.3.jar
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/derby.jar
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/commons-lang3-3.1.jar
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/extra166y.jar
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/promises-5.1.0.jar
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/ant.jar
Path: /home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.jsure.tests_1.0.0/lib/ant-junit.jar
Path: /home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018/lib/runtime/javadoc.jar
Path: /home/edwin/qa/test/eclipse/plugins/com.surelogic.jsure.tests_1.0.0/lib/ant.jar
Starting process:
	/home/edwin/work/jdk1.7.0_10/jre/bin/java
	-Dsurelogic.test.code=NONE
	-XX:MaxPermSize=512m
	-verbosegc
	-Dsl.run.dir=/home/edwin/qa/test/workspaces/regression/TestLockSanityChecks/.jsure-data/TestLockSanityChecks-2014.03.10-at-10.44.05.691
	-Dfluid.ir.versioning=Versioning.Off
	-DAnnotationRules.label=RemoteJSureRun.AnnotationRules
	-Ddc.testing=true
	-Dfluid.directory.url=file:/home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018/
	-Xmx2048m
	-classpath
	/home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/jsr166y.jar:/home/edwin/qa/test/eclipse/plugins/com.surelogic.jsure.tests_1.0.0/lib/jdom.jar:/home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/asm-4.1.jar:/home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018/lib/runtime/javac.jar:/home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018:/home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/collections-generic-4.0.jar:/home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018/lib/runtime/log4j-1.3alpha-8.jar:/home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018/lib/runtime/java-diff-utils-1.2.jar:/home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/trove-3.0.3.jar:/home/edwin/qa/test/eclipse/plugins/org.junit_4.8.2.v4_8_2_v20110321-1705/junit.jar:/home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018/lib/runtime/log4j-xml-1.3alpha-8.jar:/home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018/lib/runtime/sablejbdd-0.02.jar:/home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/asm-commons-4.1.jar:/home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/antlr-runtime-3.1-sl.jar:/home/edwin/qa/test/eclipse/plugins/com.surelogic.jsure.tests_1.0.0:/home/edwin/qa/test/eclipse/plugins/com.surelogic.jsure.tests_1.0.0/lib/maven-ant-tasks-2.1.3.jar:/home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/derby.jar:/home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/commons-lang3-3.1.jar:/home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/extra166y.jar:/home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/promises-5.1.0.jar:/home/edwin/qa/test/eclipse/plugins/com.surelogic.common_5.3.0.201403101018/lib/runtime/ant.jar:/home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018:/home/edwin/qa/test/eclipse/plugins/com.surelogic.jsure.tests_1.0.0/lib/ant-junit.jar:/home/edwin/qa/test/eclipse/plugins/edu.cmu.cs.fluid_5.3.0.201403101018/lib/runtime/javadoc.jar:/home/edwin/qa/test/eclipse/plugins/com.surelogic.jsure.tests_1.0.0/lib/ant.jar
	com.surelogic.jsure.tests.RemoteJSureRunTest
First line = JVM started: 1.7.0_10
Log level: INFO
Created reader
Created monitor
Created log handler
Running RemoteJSureRunTest
Setting up XML output
Javac set edu.cmu.cs.fluid.default.JRE to 
Javac set edu.cmu.cs.fluid.analysis.thread.count to 8
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.IRConcurrencyDetector to true
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ThreadEffectAssurance2 to true
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.StructureAssurance to true
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ParameterizedType to true
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.EqualityAssurance to true
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LayersAssurance to true
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Utility to true
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Singleton to true
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LockAssurance3 to true
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.EffectAssurance2 to true
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Nullable to true
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceUWM to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceUWM_ALL to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceUWM_SE to true
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceSE to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.NonNullRawTypes to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.DefinitelyAssigned to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LV to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BCA to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.CALLS to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BenchmarkingUniquenessNew to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BenchmarkingUniquenessNew_SE to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BenchmarkingUniquenessSE to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.cliend.eclipse.TypeBasedAlias to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Types to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ConstantExpr to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Binder to false
Javac set com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.TestIsFunctional to false
[GC 31936K->1528K(122368K), 0.0043750 secs]
runPath = /home/edwin/qa/test/workspaces/regression/TestLockSanityChecks/.jsure-data/TestLockSanityChecks-2014.03.10-at-10.44.05.691
Creating run: TestLockSanityChecks-2014.03.10-at-10.44.05.691
projects = TestLockSanityChecks
Loading edu.cmu.cs.fluid.make.nonabductive.proposals = false
Loading edu.cmu.cs.fluid.load.all.classes = false
Loading edu.cmu.cs.fluid.timeoutFlag = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BCA = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ConstantExpr = false
Loading edu.cmu.cs.fluid.physMemoryInMB = 7976
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.EqualityAssurance = false
Loading edu.cmu.cs.fluid.xml.diff.directory = /home/edwin/qa/test/workspaces/regression/TestLockSanityChecks/.jsure-data/promises-xml
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceUWM = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.IRConcurrencyDetector = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Singleton = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceUWM_ALL = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.CALLS = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BenchmarkingUniquenessSE = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ThreadEffectAssurance2 = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Binder = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.cliend.eclipse.TypeBasedAlias = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Nullable = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceUWM_SE = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.TestIsFunctional = false
Loading edu.cmu.cs.fluid.scan.may.run.uniqueness = false
Loading edu.cmu.cs.fluid.tool-memory-mb = 2048
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.DefinitelyAssigned = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceSE = false
Loading edu.cmu.cs.fluid.analysis.thread.count = 8
Loading edu.cmu.cs.fluid.timeoutSec = 60
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.NonNullRawTypes = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LayersAssurance = false
Loading edu.cmu.cs.fluid.default.JRE = org.eclipse.jdt.launching.JRE_CONTAINER
Loading edu.cmu.cs.fluid.treat.as.java.8 = false
Loading edu.cmu.cs.fluid.timeoutWarningSec = 30
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Utility = false
Loading edu.cmu.cs.fluid.modeling.problem.filters = 00000012com\.apple.*00000013com\.oracle.*00000010com\.sun.*00000014.*\.internal.*00000007apple.*00000008oracle.*00000012org\.junit.*00000018junit\.framework.*00000011quicktime.*00000005sun.*
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BenchmarkingUniquenessNew_SE = false
Loading edu.cmu.cs.fluid.scan.may.use.compression = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ParameterizedType = true
Loading edu.cmu.cs.fluid.allow.javadoc.annos = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LockAssurance3 = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BenchmarkingUniquenessNew = false
Loading edu.cmu.cs.fluid.data.directory = /home/edwin/qa/test/workspaces/regression/TestLockSanityChecks/.jsure-data
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.EffectAssurance2 = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.StructureAssurance = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LV = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Types = false
JSure data dir = /home/edwin/qa/test/workspaces/regression/TestLockSanityChecks/.jsure-data
XML diff dir   = /home/edwin/qa/test/workspaces/regression/TestLockSanityChecks/.jsure-data/promises-xml
Looking for JRE in org.eclipse.jdt.launching.JRE_CONTAINER
default JRE = org.eclipse.jdt.launching.JRE_CONTAINER
Javac set edu.cmu.cs.fluid.default.JRE to org.eclipse.jdt.launching.JRE_CONTAINER
Initialized job
No path exists
Created com.surelogic.analysis.threads.ThreadEffectsModule
Starting a new group for ThreadEffectsModule
Created com.surelogic.analysis.annotationbounds.ParameterizedTypeAnalysis
Created com.surelogic.analysis.concurrency.driver.LockAnalysis
Starting a new group for LockAnalysis
Group: EXTERNALLY
	ThreadEffectsModule
	ParameterizedTypeAnalysis
Created com.surelogic.analysis.effects.EffectsAnalysis
Created com.surelogic.analysis.uniqueness.plusFrom.traditional.UniquenessAnalysisModule
Starting a new group for UniquenessAnalysisModule
Group: com.surelogic.analysis.visitors.TopLevelAnalysisVisitor$1@4d503061, class com.surelogic.analysis.bca.BindingContextAnalysis, EXTERNALLY
	LockAnalysis
	EffectsAnalysis
Group: INTERNALLY
	UniquenessAnalysisModule
##TASK, Scan, 450
Initializing ...
##SUBTASK, Initializing ...
monitor = com.surelogic.common.jobs.remote.AbstractRemoteSLJob$Monitor@2b763bac
singleThread = false
[GC 33464K->20910K(122368K), 0.0071530 secs]
Done initializing org.eclipse.jdt.launching.JRE_CONTAINER: 0
org.eclipse.jdt.launching.JRE_CONTAINER: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/resources.jar
[GC 52846K->32717K(122368K), 0.0113850 secs]
org.eclipse.jdt.launching.JRE_CONTAINER: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/rt.jar
org.eclipse.jdt.launching.JRE_CONTAINER: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/jsse.jar
org.eclipse.jdt.launching.JRE_CONTAINER: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/jce.jar
org.eclipse.jdt.launching.JRE_CONTAINER: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/charsets.jar
org.eclipse.jdt.launching.JRE_CONTAINER: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/jfr.jar
org.eclipse.jdt.launching.JRE_CONTAINER: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/ext/localedata.jar
org.eclipse.jdt.launching.JRE_CONTAINER: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/ext/sunec.jar
org.eclipse.jdt.launching.JRE_CONTAINER: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/ext/sunpkcs11.jar
org.eclipse.jdt.launching.JRE_CONTAINER: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/ext/sunjce_provider.jar
org.eclipse.jdt.launching.JRE_CONTAINER: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/ext/dnsns.jar
org.eclipse.jdt.launching.JRE_CONTAINER: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/ext/zipfs.jar
Done initializing TestLockSanityChecks: 55
Trying to find /home/edwin/qa/test/workspaces/regression/TestLockSanityChecks/.jsure-data/TestLockSanityChecks-2014.03.10-at-10.44.05.691/source/TestLockSanityChecks.bin.zip
TestLockSanityChecks: TestLockSanityChecks -> org.eclipse.jdt.launching.JRE_CONTAINER
Done initializing org.eclipse.jdt.launching.JRE_CONTAINER: 0
TestLockSanityChecks: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/resources.jar
TestLockSanityChecks: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/rt.jar
TestLockSanityChecks: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/jsse.jar
TestLockSanityChecks: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/jce.jar
TestLockSanityChecks: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/charsets.jar
TestLockSanityChecks: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/jfr.jar
TestLockSanityChecks: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/ext/localedata.jar
TestLockSanityChecks: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/ext/sunec.jar
TestLockSanityChecks: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/ext/sunpkcs11.jar
TestLockSanityChecks: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/ext/sunjce_provider.jar
TestLockSanityChecks: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/ext/dnsns.jar
TestLockSanityChecks: Done initializing with /home/edwin/work/jdk1.7.0_10/jre/lib/ext/zipfs.jar
TestLockSanityChecks: Done initializing with /home/edwin/qa/test/suites/regression/TestLockSanityChecks/promises-4.0.0.jar
##SUBTASK_DONE
##WORK, 1
Assuming that the projects are run in dependency order
Parsing ...
##SUBTASK, Parsing ...
Done adapting 0 files for org.eclipse.jdt.launching.JRE_CONTAINER
##SUBTASK_DONE
##WORK, 1
Parsing ...
##SUBTASK, Parsing ...
[GC 64653K->42810K(154304K), 0.0135830 secs]
JCP: warning: [options] bootstrap class path not set in conjunction with -source 1.5
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
Adapting 55 CUTs
Done adapting 55 files for TestLockSanityChecks
##SUBTASK_DONE
##WORK, 1
Handling references for org.eclipse.jdt.launching.JRE_CONTAINER
##SUBTASK, Handling references for org.eclipse.jdt.launching.JRE_CONTAINER
Handling 19 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
Setting project for Object from org.eclipse.jdt.launching.JRE_CONTAINER
Handling 35 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
Handling 54 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
Handling 57 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
Handling 32 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
Handling 17 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
Handling 8 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
Handling 12 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
Handling 15 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
Handling 4 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
Handling 2 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
##SUBTASK_DONE
##WORK, 1
Handling references for TestLockSanityChecks
##SUBTASK, Handling references for TestLockSanityChecks
Handling 31 dangling refs for TestLockSanityChecks
Handling 3 dangling refs for TestLockSanityChecks
Handling 1 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
Handling 2 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
##SUBTASK_DONE
##WORK, 1
Updated 261 files in org.eclipse.jdt.launching.JRE_CONTAINER
Updated 89 files in TestLockSanityChecks
Parsing ASTs  = 571 ms
Handling refs = 570 ms
Canonicalizing ASTs
##SUBTASK, Canonicalizing ASTs
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
[GC 106682K->55420K(154304K), 0.0258400 secs]
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/Parent.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/A.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/B.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/GoodC2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/BadC3.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/BadC2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/good/Good3.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/LockViz.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/Other.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/C.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/C.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/good/Good2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/B.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_returns_lock/PLock.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/C.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_returns_lock/StateLock.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/Grandparent.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/D.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/Other1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##WORK, 1
Binding = 156 ms
Cleaned 0 in 16 ms
##SUBTASK_DONE
##WORK, 1
Handling references for TestLockSanityChecks
##SUBTASK, Handling references for TestLockSanityChecks
Handling 19 dangling refs for TestLockSanityChecks
##SUBTASK_DONE
##WORK, 1
Handling references for org.eclipse.jdt.launching.JRE_CONTAINER
##SUBTASK, Handling references for org.eclipse.jdt.launching.JRE_CONTAINER
Handling 19 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER
##SUBTASK_DONE
##WORK, 1
Updated 261 files in org.eclipse.jdt.launching.JRE_CONTAINER
Updated 89 files in TestLockSanityChecks
[GC 64797K->55772K(238272K), 0.0111060 secs]
[Full GC 55772K->40430K(238272K), 0.0804460 secs]
Creating drops
##SUBTASK, Creating drops
Created binary drop for java.lang.AbstractStringBuilder
Created binary drop for java.lang.IllegalArgumentException
Created binary drop for java.lang.InterruptedException
Created binary drop for java.nio.file.WatchEvent
Created binary drop for java.lang.ref.SoftReference
Created binary drop for java.nio.charset.CodingErrorAction
Created binary drop for java.nio.channels.GatheringByteChannel
Created binary drop for java.lang.annotation.Retention
Created binary drop for sun.reflect.annotation.AnnotationType
Created binary drop for java.lang.annotation.Documented
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
Created binary drop for java.security.Principal
Created binary drop for java.lang.Short
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/Other.java
Created binary drop for sun.util.locale.LocaleSyntaxException
Created binary drop for java.io.FilterInputStream
Created binary drop for java.util.RandomAccess
Created binary drop for java.util.Iterator
Created binary drop for java.lang.IllegalAccessException
Created binary drop for java.lang.annotation.Annotation
Created binary drop for java.util.Enumeration
Created binary drop for com.surelogic.RegionLocks
Created binary drop for java.util.concurrent.Callable
Created binary drop for java.io.File
Created binary drop for java.nio.file.attribute.FileAttributeView
Created binary drop for java.nio.file.attribute.GroupPrincipal
Created binary drop for java.util.concurrent.locks.ReentrantReadWriteLock
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/B.java
Created binary drop for java.lang.Byte
Created binary drop for java.util.concurrent.Future
Created binary drop for sun.reflect.ConstructorAccessor
Created binary drop for java.nio.charset.CoderResult
Created binary drop for java.io.Closeable
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
Created binary drop for java.util.Locale
Created binary drop for java.security.NoSuchProviderException
Created binary drop for java.lang.Readable
Created binary drop for java.nio.channels.Channel
Created binary drop for sun.nio.ch.Interruptible
Created binary drop for java.nio.file.PathMatcher
Created binary drop for java.io.UnsupportedEncodingException
Created binary drop for java.security.PermissionCollection
Created binary drop for java.lang.Long
Created binary drop for java.lang.Package
Created binary drop for java.util.concurrent.locks.ReentrantLock
Created binary drop for java.util.concurrent.locks.ReadWriteLock
Created binary drop for java.util.AbstractSet
Created binary drop for java.nio.file.FileSystem
Created binary drop for java.lang.ClassValue
Created binary drop for java.util.Map
Created binary drop for java.lang.NoSuchFieldException
Created binary drop for java.util.ListIterator
Created binary drop for java.util.AbstractCollection
Created binary drop for sun.util.LocaleServiceProviderPool
Created binary drop for java.nio.channels.spi.AbstractInterruptibleChannel
Created binary drop for java.nio.channels.CompletionHandler
Created binary drop for sun.util.locale.LocaleObjectCache
Created binary drop for java.nio.channels.InterruptibleChannel
Created binary drop for java.security.Timestamp
Created binary drop for java.net.ContentHandlerFactory
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
Created binary drop for java.nio.channels.ReadableByteChannel
Created binary drop for sun.reflect.ReflectionFactory
Created binary drop for sun.util.resources.OpenListResourceBundle
Created binary drop for java.nio.charset.Charset
Created binary drop for java.nio.channels.FileLock
Created binary drop for java.net.ContentHandler
Created binary drop for java.net.URLConnection
Created binary drop for java.lang.Float
Created binary drop for java.util.spi.LocaleServiceProvider
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
Created binary drop for java.lang.Boolean
Created binary drop for java.util.spi.LocaleNameProvider
Created binary drop for java.lang.Runnable
Created binary drop for java.io.PrintStream
Created binary drop for java.lang.String
Created binary drop for java.util.Vector
Created binary drop for java.io.PrintWriter
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
Created binary drop for java.nio.channels.ClosedChannelException
Created binary drop for java.nio.file.WatchKey
Created binary drop for java.util.AbstractMap
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/D.java
Created binary drop for java.io.IOException
Created binary drop for com.surelogic.PolicyLock
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
Created binary drop for java.lang.SecurityException
Created binary drop for java.nio.DoubleBuffer
Created binary drop for java.nio.file.LinkOption
Created binary drop for java.io.DataOutputStream
Created binary drop for java.security.cert.CertPath
Created binary drop for java.lang.CharSequence
Created binary drop for java.lang.Thread
Created binary drop for sun.misc.URLClassPath
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
Created binary drop for java.lang.reflect.AccessibleObject
Created binary drop for java.util.concurrent.locks.Condition
Created binary drop for java.lang.Integer
Created binary drop for java.io.FilenameFilter
Created binary drop for java.util.zip.ZipException
Created binary drop for java.io.FileNotFoundException
Created binary drop for java.util.jar.Attributes
Created binary drop for java.nio.channels.SeekableByteChannel
Created binary drop for java.net.MalformedURLException
Created binary drop for java.nio.channels.WritableByteChannel
Created binary drop for java.lang.reflect.Method
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
Created binary drop for sun.util.locale.BaseLocale
Created binary drop for java.security.CodeSource
Created binary drop for java.io.OutputStream
Created binary drop for java.util.Set
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
Created binary drop for java.util.jar.JarEntry
Created binary drop for java.util.SortedMap
Created binary drop for java.lang.Double
Created binary drop for java.security.KeyException
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
Created binary drop for java.lang.annotation.ElementType
Created binary drop for java.security.Key
Created binary drop for java.nio.file.spi.FileSystemProvider
Created binary drop for java.util.Deque
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/A.java
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
Created binary drop for com.surelogic.Regions
Created binary drop for java.lang.Exception
Created binary drop for java.util.LinkedList
Created binary drop for java.security.CodeSigner
Created binary drop for java.lang.CloneNotSupportedException
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
Created binary drop for java.lang.reflect.Constructor
Created binary drop for java.security.PublicKey
Created binary drop for java.net.SocketException
Created binary drop for java.nio.file.attribute.FileStoreAttributeView
Created binary drop for java.nio.IntBuffer
Created binary drop for java.util.Hashtable
Created binary drop for java.lang.NullPointerException
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
Created binary drop for java.util.zip.ZipConstants
Created binary drop for java.util.Comparator
Created binary drop for java.lang.Number
Created binary drop for java.io.Writer
Created binary drop for java.lang.RuntimeException
Created binary drop for java.nio.FloatBuffer
Created binary drop for java.security.GeneralSecurityException
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
Created binary drop for java.util.ArrayList
Created binary drop for java.security.cert.CertificateException
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
Created binary drop for com.surelogic.RegionLock
Created binary drop for java.nio.file.AccessMode
Created binary drop for java.security.ProtectionDomain
Created binary drop for java.util.jar.Manifest
Created binary drop for java.net.Proxy
Created binary drop for java.security.InvalidKeyException
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
Created binary drop for java.util.HashMap
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
Created binary drop for java.nio.channels.FileChannel
Created binary drop for java.util.zip.ZipFile
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/C1.java
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
Created binary drop for java.lang.reflect.InvocationTargetException
Created binary drop for java.security.Permission
Created binary drop for java.net.UnknownHostException
Created binary drop for java.util.Queue
Created binary drop for java.nio.file.attribute.BasicFileAttributes
Created binary drop for java.util.concurrent.locks.AbstractOwnableSynchronizer
Created binary drop for java.nio.channels.AsynchronousCloseException
Created binary drop for java.nio.ShortBuffer
Created binary drop for java.lang.ref.Reference
Created binary drop for java.lang.StringBuffer
Created binary drop for java.nio.charset.CharsetDecoder
Created binary drop for java.io.Flushable
Created binary drop for java.net.FileNameMap
Created binary drop for java.io.FileDescriptor
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
Created binary drop for java.util.Collection
Created binary drop for java.util.zip.InflaterInputStream
Created binary drop for java.io.DataOutput
Created binary drop for java.net.InterfaceAddress
Created binary drop for java.io.InputStream
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/C.java
Created binary drop for java.lang.InstantiationException
Created binary drop for sun.util.locale.Extension
Created binary drop for sun.misc.MetaIndex
Created binary drop for com.surelogic.InRegion
Created binary drop for java.lang.Character
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
Created binary drop for java.net.URLStreamHandlerFactory
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
Created binary drop for java.net.UnknownServiceException
Created binary drop for java.util.concurrent.ConcurrentMap
Created binary drop for java.lang.Throwable
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/C.java
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
Created binary drop for java.nio.ByteOrder
Created binary drop for java.io.SyncFailedException
Created binary drop for java.lang.ThreadLocal
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/D.java
Created binary drop for java.lang.Deprecated
Created binary drop for java.nio.file.attribute.AttributeView
Created binary drop for java.util.List
Created binary drop for java.util.Date
Created binary drop for java.net.NetworkInterface
Created binary drop for java.nio.CharBuffer
Created binary drop for java.lang.StringBuilder
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
Created binary drop for sun.util.locale.InternalLocaleBuilder
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
Created binary drop for java.lang.reflect.TypeVariable
Created binary drop for java.nio.charset.CharacterCodingException
Created binary drop for java.util.zip.Inflater
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
Created binary drop for java.security.cert.CertificateEncodingException
Created binary drop for com.surelogic.RequiresLock
Created binary drop for java.net.InetAddress
Created binary drop for java.util.Dictionary
Created binary drop for java.security.cert.Certificate
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/D.java
Created binary drop for java.nio.file.attribute.UserPrincipalLookupService
Created binary drop for java.util.ResourceBundle
Created binary drop for java.nio.channels.ScatteringByteChannel
Created binary drop for java.lang.SuppressWarnings
Created binary drop for java.lang.ClassLoader
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
Created binary drop for java.nio.file.OpenOption
Created binary drop for java.lang.reflect.Type
Created binary drop for java.net.SocketAddress
Created binary drop for java.nio.channels.AsynchronousFileChannel
Created binary drop for java.lang.Iterable
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
Created binary drop for java.util.concurrent.TimeUnit
Created binary drop for java.io.FileFilter
Created binary drop for java.io.Serializable
Created binary drop for java.nio.file.Path
Created binary drop for sun.reflect.MethodAccessor
Created binary drop for com.surelogic.ReturnsLock
Created binary drop for java.lang.Enum
Created binary drop for sun.reflect.FieldAccessor
Created binary drop for java.nio.channels.AsynchronousChannel
Created binary drop for java.lang.reflect.Field
Created binary drop for java.io.ObjectStreamException
Created binary drop for java.util.AbstractSequentialList
Created binary drop for java.nio.file.attribute.UserPrincipal
Created binary drop for java.lang.annotation.Target
Created binary drop for sun.misc.Resource
Created binary drop for java.nio.Buffer
Created binary drop for java.nio.ByteBuffer
Created binary drop for java.nio.file.FileStore
Created binary drop for java.lang.StackTraceElement
Created binary drop for java.nio.file.DirectoryStream
Created binary drop for java.lang.ref.ReferenceQueue
Created binary drop for java.util.AbstractList
Created binary drop for java.lang.ThreadGroup
Created binary drop for java.util.Stack
Created binary drop for java.lang.Void
Created binary drop for java.nio.LongBuffer
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
Created binary drop for java.lang.Cloneable
Created binary drop for java.lang.Object
Created binary drop for sun.util.locale.LanguageTag
Created binary drop for sun.misc.JarIndex
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
Created binary drop for sun.util.locale.LocaleExtensions
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
Created binary drop for java.nio.file.CopyOption
Created binary drop for java.nio.file.WatchService
Created binary drop for java.lang.Appendable
Created binary drop for java.nio.MappedByteBuffer
Created binary drop for java.net.URISyntaxException
Created binary drop for java.util.jar.JarFile
Created binary drop for java.lang.AutoCloseable
Created binary drop for com.surelogic.PolicyLocks
Created binary drop for java.nio.file.Watchable
Created binary drop for java.nio.file.attribute.FileAttribute
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/B.java
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
Created binary drop for java.util.zip.DataFormatException
Created binary drop for java.util.concurrent.locks.Lock
Created binary drop for sun.misc.Unsafe
Created binary drop for java.nio.charset.CharsetEncoder
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/Other.java
Created binary drop for java.util.concurrent.ExecutorService
Created binary drop for java.security.PrivilegedAction
Created binary drop for java.lang.Class
Created binary drop for java.net.URI
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
Created binary drop for java.lang.Comparable
Created binary drop for java.util.concurrent.locks.AbstractQueuedSynchronizer
Created binary drop for java.util.MissingResourceException
Created binary drop for java.lang.reflect.Member
Created binary drop for java.security.SignatureException
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/C.java
Created binary drop for sun.util.locale.ParseStatus
Created binary drop for java.security.NoSuchAlgorithmException
Created binary drop for java.net.URLStreamHandler
Created binary drop for java.lang.ref.WeakReference
Created binary drop for java.util.zip.ZipEntry
Created binary drop for java.util.WeakHashMap
Created binary drop for java.nio.file.attribute.FileTime
Created binary drop for java.lang.annotation.RetentionPolicy
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/C.java
Created binary drop for java.security.Guard
Created binary drop for java.net.InetAddressImpl
Created binary drop for java.net.URL
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
Created binary drop for java.util.concurrent.Executor
Created binary drop for java.lang.ReflectiveOperationException
Created binary drop for java.io.FilterOutputStream
Created binary drop for java.lang.NumberFormatException
Created binary drop for java.nio.channels.ByteChannel
Created binary drop for sun.reflect.LangReflectAccess
Created binary drop for sun.reflect.ConstantPool
Created binary drop for java.lang.reflect.GenericDeclaration
Created binary drop for java.lang.reflect.AnnotatedElement
Created source drop for file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
Created binary drop for com.surelogic.Region
##SUBTASK_DONE
##WORK, 1
Parsing promises
##SUBTASK, Parsing promises
Javac making log: RemoteJSureRun.AnnotationRules
Creating JUnitXMLOutput: RemoteJSureRun.AnnotationRules
Creating TestOutput RemoteJSureRun.AnnotationRules (com.surelogic.test.SilentTestOutput@6d223732, com.surelogic.test.xml.JUnitXMLOutput@6155eb97)
Added 6 promises for java.lang.InterruptedException in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@3684c7e9
Added 1 promises for inherited_region.good.GoodRoot in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@4e5ef4c3
Added 1 promises for test_lock_region.Other in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@2f882609
Added 12 promises for java.lang.IllegalArgumentException in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@1c962a81
Added 2 promises for twoLocksOneRegion.inherited.Duper in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@6a92b6af
Added 6 promises for java.lang.IllegalAccessException in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@41ed2cd1
Added 4 promises for java.util.Enumeration in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@6e814bbc
Added 61 promises for java.lang.Short in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@52569b8
Added 105 promises for java.util.AbstractMap in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@42a54c1d
Added 87 promises for test_requires_lock.StateLock_visibility in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@1ec39ab6
Added 6 promises for java.util.Iterator in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@40403ae
Added 22 promises for java.util.concurrent.locks.Condition in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@6e74d760
Added 7 promises for java.util.concurrent.locks.ReadWriteLock in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@68d2ef8a
Added 6 promises for java.lang.NoSuchFieldException in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@7b01e044
Added 37 promises for java.lang.Boolean in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@7f99a0c4
Added 4 promises for qualified_receivers_as_locks.Outer in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@5575ccf9
Added 3 promises for test_unique_names.GoodC3 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@677630f5
line 1:34 mismatched character ' ' expecting '''
Added 3 promises for test_unique_names.BadC3 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@403a7c5e
line 1:38 mismatched character 'h' expecting '''
line 1:43 mismatched character 'o' expecting '''
line 1:34 mismatched character ' ' expecting '''
line 1:38 mismatched character 'h' expecting '''
line 1:43 mismatched character '(' expecting '''
line 1:27 mismatched character ' ' expecting '''
line 1:37 mismatched character 'h' expecting '''
line 1:42 mismatched character 'o' expecting '''
line 1:28 mismatched character ' ' expecting '''
line 1:37 mismatched character 'h' expecting '''
line 1:42 mismatched character '(' expecting '''
line 1:36 mismatched character ' ' expecting '''
line 1:26 mismatched character ' ' expecting '''
line 1:28 mismatched character ' ' expecting '''
line 1:36 mismatched character ' ' expecting '''
Added 26 promises for test_returns_lock.StateLock in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@7b70081a
Added 24 promises for test_returns_lock.PLock in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@16b5d4e1
Added 298 promises for java.lang.String in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@5d3aa2b9
Added 138 promises for java.util.LinkedList in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@1f9c2665
Added 6 promises for java.lang.CloneNotSupportedException in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@1c9443d2
Added 64 promises for java.util.Map in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@1b765a2b
Added 3 promises for test_requires_lock.Root in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@13dbe345
Added 6 promises for java.io.PrintWriter in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@68114dd7
Added 169 promises for java.util.Vector in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@2651a76
Added 87 promises for java.util.jar.Attributes in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@3dae7085
Added 3 promises for test_requires_lock.D in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@652ac066
Added 55 promises for java.util.AbstractCollection in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@e5c6d3e
Added 1 promises for twoLocksOneRegion.unrelatedClasses.Test2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@2888efde
Added 2 promises for inherited_region.good.Good2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@34d46725
Added 3 promises for test_unique_names.GoodC2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@375112e4
Added 7 promises for test_unique_names.StateVsPolicyLocks in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@13b8362e
Added 22 promises for java.lang.Number in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@741830b8
line 1:27 mismatched character ' ' expecting '''
Added 96 promises for java.lang.Integer in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@4c566d9b
line 1:31 mismatched character ' ' expecting '''
line 1:27 mismatched character ' ' expecting '''
line 1:32 mismatched character 'h' expecting '''
line 1:37 mismatched character 'o' expecting '''
line 1:32 mismatched character 'h' expecting '''
line 1:37 mismatched character '(' expecting '''
Added 23 promises for test_requires_lock.PolicyLock_LockNames in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@60cc9900
Added 18 promises for java.util.Queue in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@1cae2623
Added 12 promises for java.lang.SecurityException in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@425df37a
Added 1 promises for inherited_region.Instance.Bad1 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@5039ed28
Added 12 promises for java.lang.CharSequence in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@55f57b35
Added 73 promises for java.lang.Float in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@66e1319f
Added 11 promises for test_lock_region.Parent in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@2e6844a3
line 1:63 mismatched character ' ' expecting '''
Added 3 promises for test_requires_lock.CannotRequireRWLock in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@51762faf
Added 79 promises for test_requires_lock.PolicyLock_visibility in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@541c803
Added 54 promises for java.util.Set in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@58275eca
Added 138 promises for java.lang.Thread in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@1e4ab31a
Added 12 promises for java.lang.Exception in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@2c7b235c
WARNING: Couldn't find hashCode() in java.util.ArrayList
WARNING: Couldn't find equals(java.lang.Object) in java.util.ArrayList
Added 103 promises for java.util.ArrayList in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@60e52f16
Added 6 promises for java.lang.NullPointerException in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@12bf8558
Added 47 promises for java.lang.Throwable in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@598e4d88
[GC 167790K->44750K(238656K), 0.0066680 secs]
Added 3 promises for test_unique_names.BadC2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@39902800
Added 12 promises for java.lang.RuntimeException in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@69004948
Added 70 promises for java.lang.Double in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@4f734944
line 1:54 mismatched character 'h' expecting '''
line 1:59 mismatched character '<EOF>' expecting '''
Added 31 promises for java.util.SortedMap in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@4031202
line 1:30 mismatched character ' ' expecting '''
Added 9 promises for test_requires_lock.StateLock_Constructor in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@f646436
Added 157 promises for java.lang.StringBuffer in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@62d6e8d0
Added 15 promises for test_returns_lock.C_Policy in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@7eded5df
Added 87 promises for java.util.Deque in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@4731512e
line 1:37 mismatched character ' ' expecting '''
Added 60 promises for java.util.HashMap in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@41343d7c
Added 14 promises for test_requires_lock.C_Policy in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@6d4a1c70
Added 2 promises for java.lang.ref.SoftReference in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@6da3bb87
Added 9 promises for java.lang.Enum in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@57ebbd68
line 1:27 mismatched character ' ' expecting '''
Added 6 promises for java.lang.InstantiationException in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@58a1896f
line 1:31 mismatched character ' ' expecting '''
line 1:27 mismatched character ' ' expecting '''
line 1:32 mismatched character 'h' expecting '''
line 1:37 mismatched character 'o' expecting '''
line 1:32 mismatched character 'h' expecting '''
line 1:37 mismatched character '(' expecting '''
Added 26 promises for test_requires_lock.StateLock_LockNames in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@2e4e6a3
Added 64 promises for test_lock_field.C in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@53b3f765
Added 1 promises for inherited_region.good.Good4 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@2afbd47a
Added 143 promises for java.lang.AbstractStringBuilder in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@3a1f830b
Added 10 promises for test_lock_region.Grandparent in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@7270b7c6
Added 82 promises for java.util.Hashtable in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@f22345d
Added 17 promises for java.util.concurrent.ConcurrentMap in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@7ae9dc0f
Added 96 promises for java.lang.Long in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@209c81f4
Added 3 promises for twoLocksOneRegion.sameClass.Bad in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@cee8427
Added 1 promises for test_lock_region.D in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@203ddacf
Added 60 promises for java.util.AbstractList in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@76ac9512
Added 16 promises for java.util.AbstractSet in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@6ce0030d
Added 2 promises for inherited_region.good.Good3 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@728e326e
Added 6 promises for java.io.Writer in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@4e772f6c
Added 27 promises for java.lang.Object in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@1c2889a0
Added 103 promises for java.util.concurrent.locks.ReentrantReadWriteLock in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@50d58727
Added 6 promises for java.lang.Appendable in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@70258dab
Added 59 promises for java.lang.Byte in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@31969e5d
Added 89 promises for java.util.List in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@55d13898
Added 29 promises for java.util.concurrent.TimeUnit in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@63e5503d
Added 18 promises for java.util.ListIterator in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@41b6d030
Added 3 promises for java.lang.Iterable in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@6dfff19a
Added 3 promises for java.nio.file.Path in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@6d03fae3
Added 3 promises for test_unique_names.C1 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@7206f6c0
Added 29 promises for java.util.AbstractSequentialList in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@631fe9ed
Added 12 promises for java.lang.reflect.InvocationTargetException in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@3733fd9b
Added 29 promises for java.util.Dictionary in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@32e5d13d
Added 1 promises for inherited_region.baseCase.Good1 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@1dc94490
Added 108 promises for java.lang.StringBuilder in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@199f7f57
Added 58 promises for java.util.concurrent.locks.ReentrantLock in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@a441f
Added 2 promises for test_requires_lock.TestImprovedMessages in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@47ace768
Added 45 promises for java.util.ResourceBundle in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@2a63c591
Added 1 promises for java.lang.ref.ReferenceQueue in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@226e273a
Added 2 promises for twoLocksOneRegion.inherited.Super in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@139a5197
Added 54 promises for java.util.Collection in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@5ab16c52
Added 3 promises for test_requires_lock.Other1 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@2ad9b414
Added 18 promises for java.nio.CharBuffer in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@723b0990
Added 6 promises for java.io.PrintStream in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@5953d528
Added 3 promises for java.nio.file.DirectoryStream in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@29d50d84
Added 11 promises for test_lock_region.GreatGrandparent in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@42c08a7e
line 1:58 mismatched character 'h' expecting '''
line 1:63 mismatched character '<EOF>' expecting '''
line 1:69 mismatched character ' ' expecting '''
line 1:69 mismatched character ' ' expecting '''
line 1:69 mismatched character ' ' expecting '''
Added 2 promises for inherited_region.Subregion.BadRoot2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@6b9881ac
Added 21 promises for java.util.Stack in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@460217b9
Added 18 promises for test_lock_region.C in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@4c225681
Added 1 promises for java.lang.ThreadLocal in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@7181140f
Added 16 promises for test_lock_region.ProtectInheritedRegion in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@2ed22908
Added 1 promises for test_lock_region.B in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@33ca8b9d
Added 18 promises for java.net.URISyntaxException in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@1bcc1503
Added 20 promises for java.util.concurrent.locks.Lock in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@48fab4ad
Added 66 promises for test_lock_region.LockVizJUC in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@5424c29a
Added 34 promises for java.util.concurrent.ExecutorService in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@2747ac17
Added 7 promises for test_requires_lock.PolicyLock_Constructor in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@61616da4
Added 66 promises for test_lock_region.LockViz in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@1e14352f
Added 22 promises for java.util.concurrent.locks.AbstractQueuedSynchronizer in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@4b5b347d
Added 56 promises for java.util.WeakHashMap in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@7057d6a8
Added 12 promises for java.lang.Class in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@149717ec
line 1:30 mismatched character ' ' expecting '''
Added 17 promises for test_returns_lock.C in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@4ecccb6e
line 1:41 mismatched character ' ' expecting '''
Added 16 promises for test_requires_lock.C in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@a7cb409
Added 1 promises for twoLocksOneRegion.unrelatedClasses.Test in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@5782899e
Added 1 promises for inherited_region.Subregion.Bad3 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@742250f4
Added 16 promises for test_requires_lock.TestDuplicates in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@438c0862
Added 6 promises for java.lang.NumberFormatException in org.eclipse.jdt.launching.JRE_CONTAINER: com.surelogic.tree.SyntaxTreeNode@533db7a7
Added 1 promises for inherited_region.Subregion.Bad2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@cc3d21a
##SUBTASK_DONE
##WORK, 1
Scrubbing promises
##SUBTASK, Scrubbing promises
[GC 172110K->48266K(364224K), 0.0075360 secs]
Creating RegionModel java.lang.Object.Instance for org.eclipse.jdt.launching.JRE_CONTAINER
[2014-03-10 10:44:11    INFO] Couldn't find field unknownField in com.surelogic.tree.SyntaxTreeNode@53b3f765 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:11    INFO] Couldn't find field fieldFromD in com.surelogic.tree.SyntaxTreeNode@53b3f765 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:11    INFO] Couldn't find field badFieldFromD in com.surelogic.tree.SyntaxTreeNode@53b3f765 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Previously trying to convert java.util.Map<?,?> to java.util.Map<java.lang.Object,java.lang.Object>
Previously trying to convert java.util.Map<?,?> to java.util.Map<java.lang.Object,java.lang.Object>
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
[2014-03-10 10:44:11    INFO] Couldn't find region UnknownRegion in com.surelogic.tree.SyntaxTreeNode@4c225681 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNPARSEABLE: static region is from unrelated class (Other) */  @ RegionLocks ( {   /* is UNBOUND: Region is undefined */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot protect a static region with 'this' */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot protect a static region with a non-static field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region protected by class */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region protected by static field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region is from the protecting class; field is from the same */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region is from the protecting class; doesn't matter that field is from superclass (B) */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region is from the protecting class; doesn't matter that field is from subclass (D) */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region is from the protecting class; doesn't matter that field is from an unrelated class (Other) */  @ RegionLock ( # ) ,   /* is UNPARSEABLE: static region is from superclass (B) */  @ RegionLock ( # ) ,   /* is UNPARSEABLE: static region is from subclass (D) */  @ RegionLock ( # ) ,   /* is UNPARSEABLE: static region is from unrelated class (Other) */  @ RegionLock ( # ) } ) public class C extends test_lock_region.B { public  C () { # } final java.lang.Object nonStaticField #; final static java.lang.Object staticFieldFromC #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:11    INFO] Couldn't find field unknownField in com.surelogic.tree.SyntaxTreeNode@53b3f765 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:11    INFO] Couldn't find field unknownField in com.surelogic.tree.SyntaxTreeNode@53b3f765 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:11    INFO] Couldn't find field fieldFromD in com.surelogic.tree.SyntaxTreeNode@53b3f765 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:11    INFO] Couldn't find field badFieldFromD in com.surelogic.tree.SyntaxTreeNode@53b3f765 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.AbstractCollection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.List.toArray(T [])
Skipping subst for T extends java.lang.Object in java.util.Collection.toArray(T [])
Previously trying to convert java.util.Map<?,?> to java.util.Map<java.lang.Object,java.lang.Object>
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@7b70081a -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find field p in com.surelogic.tree.SyntaxTreeNode@7b70081a -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@7b70081a -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@7b70081a -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@7b70081a -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find field NoSuchClass in com.surelogic.tree.SyntaxTreeNode@7b70081a -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@16b5d4e1 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find field p in com.surelogic.tree.SyntaxTreeNode@16b5d4e1 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@16b5d4e1 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@16b5d4e1 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@16b5d4e1 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find field NoSuchClass in com.surelogic.tree.SyntaxTreeNode@16b5d4e1 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@60cc9900 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find field p in com.surelogic.tree.SyntaxTreeNode@60cc9900 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@60cc9900 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@60cc9900 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@60cc9900 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find field NoSuchClass in com.surelogic.tree.SyntaxTreeNode@60cc9900 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@2e4e6a3 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find field p in com.surelogic.tree.SyntaxTreeNode@2e4e6a3 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@2e4e6a3 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@2e4e6a3 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@2e4e6a3 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2014-03-10 10:44:12    INFO] Couldn't find field NoSuchClass in com.surelogic.tree.SyntaxTreeNode@2e4e6a3 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
##SUBTASK_DONE
##WORK, 1
Starting analyses
Using new analysis framework -- groups
Starting group: ThreadEffectsModule, ParameterizedTypeAnalysis
##SUBTASK, Starting parallel ThreadEffectsModule [0]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER
Starting parallel ThreadEffectsModule [0]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER
##SUBTASK, Starting parallel ParameterizedTypeAnalysis [1]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER
Starting parallel ParameterizedTypeAnalysis [1]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Starting parallel ThreadEffectsModule [0]: 55 for TestLockSanityChecks
Starting parallel ThreadEffectsModule [0]: 55 for TestLockSanityChecks
##SUBTASK, Starting parallel ParameterizedTypeAnalysis [1]: 55 for TestLockSanityChecks
Starting parallel ParameterizedTypeAnalysis [1]: 55 for TestLockSanityChecks
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/B.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/B.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/C.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/C.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/B.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/B.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/C.java
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/A.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/A.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/C.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/Other.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/D.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/C.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
Starting group: LockAnalysis, EffectsAnalysis
com.surelogic.analysis.visitors.TopLevelAnalysisVisitor$1@4d503061: 65
##SUBTASK, Starting parallel LockAnalysis [2]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER
Starting parallel LockAnalysis [2]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER
##SUBTASK, Starting parallel EffectsAnalysis [3]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER
Starting parallel EffectsAnalysis [3]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Starting parallel LockAnalysis [2]: 65 for TestLockSanityChecks
Starting parallel LockAnalysis [2]: 65 for TestLockSanityChecks
##SUBTASK, Starting parallel EffectsAnalysis [3]: 65 for TestLockSanityChecks
Starting parallel EffectsAnalysis [3]: 65 for TestLockSanityChecks
##SUBTASK, Checking [ Lock policy ] test_requires_lock.StateLock_LockNames
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.sameClass.Bad
##SUBTASK, Checking [ Lock policy ] inherited_region.Subregion.BadRoot2
##SUBTASK, Checking [ Lock policy ] qualified_receivers_as_locks.Outer.Inner
##SUBTASK, Checking [ Lock policy ] inherited_region.good.Good2
##SUBTASK, Checking [ Lock policy ] test_lock_field.Other
##SUBTASK, Checking [ Lock policy ] test_returns_lock.PLock.Inner
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Subregion.BadRoot2
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.sameClass.Bad
##SUBTASK, Checking [ Region effects ] test_lock_field.Other
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] qualified_receivers_as_locks.Outer.Inner
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.TestImprovedMessages
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.Instance.Bad1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Instance.Bad1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_field.A
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.StateLock_LockNames
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.good.Good2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.ProtectInheritedRegion
##SUBTASK, Checking [ Lock policy ] test_lock_region.LockVizJUC
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.StateLock_visibility
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.ProtectInheritedRegion
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.B
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.B
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.PLock.Inner
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.unrelatedClasses.Test2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.LockViz
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.inherited.Duper
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.unrelatedClasses.Test2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_field.C
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_field.A
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C.Inner1
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C_Policy
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C_Policy
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_field.C
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.good.Good4
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.good.Good4
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.PolicyLock_visibility
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.GoodC3
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.GoodC3
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.Instance.BadRoot1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Instance.BadRoot1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.BadC2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.BadC2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.PolicyLock_LockNames
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.inherited.Duper
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.D
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.D
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C
##SUBTASK, Checking [ Lock policy ] test_requires_lock.Root
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.Root
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.StateVsPolicyLocks
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.StateVsPolicyLocks
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.Parent
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.LockVizJUC
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.PolicyLock_Constructor
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.Parent
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C
##SUBTASK, Checking [ Lock policy ] test_requires_lock.CannotRequireRWLock
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.PolicyLock_LockNames
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.CannotRequireRWLock
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] qualified_receivers_as_locks.Outer
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.PolicyLock_Constructor
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] qualified_receivers_as_locks.Outer
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.good.GoodRoot
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.good.GoodRoot
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.GoodC2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C_Policy
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.GoodC2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.LockViz
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.BadC3
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.BadC3
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.PLock
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C_Policy
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C_Policy.Inner1.Inner2
##SUBTASK, Checking [ Region effects ] test_requires_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.unrelatedClasses.Test
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.Other
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.unrelatedClasses.Test
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.Subregion.Bad3
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.Other
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Subregion.Bad3
##SUBTASK, Checking [ Lock policy ] test_lock_field.B
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.TestDuplicates
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_field.B
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.GreatGrandparent
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.GreatGrandparent
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.baseCase.Good1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.baseCase.Good1
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C_Policy.Inner1.Inner2
##SUBTASK, Checking [ Lock policy ] test_requires_lock.Other1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.C1
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.StateLock_visibility
##SUBTASK, Checking [ Region effects ] test_requires_lock.Other1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.good.Good3
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.good.Good3
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.inherited.Super
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.inherited.Super
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_field.D
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.TestDuplicates
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.Subregion.Bad2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.TestImprovedMessages
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.C1
##SUBTASK, Checking [ Region effects ] inherited_region.Subregion.Bad2
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.StateLock_Constructor
##SUBTASK, Checking [ Region effects ] test_lock_field.D
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.PLock
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.StateLock_Constructor
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.StateLock
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.PolicyLock_visibility
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.C
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.C
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.Grandparent
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.Grandparent
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.D
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.D
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.StateLock
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
Starting group: UniquenessAnalysisModule
##SUBTASK, Starting parallel UniquenessAnalysisModule [4]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER
Starting parallel UniquenessAnalysisModule [4]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Starting parallel UniquenessAnalysisModule [4]: 55 for TestLockSanityChecks
Starting parallel UniquenessAnalysisModule [4]: 55 for TestLockSanityChecks
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/B.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/A.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/B.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_field/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Uniqueness + From ] file:/home/edwin/qa/test/suites/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Cleaning up after analysis
Cleaning up after analysis
[GC 153283K->53712K(353152K), 0.0116920 secs]
[Full GC 53712K->26968K(353152K), 0.1027660 secs]
##WORK, 1
##SUBTASK_DONE
Updating consistency proof
##SUBTASK, Updating consistency proof
Exporting results to TestLockSanityChecks-2014.03.10-at-10.44.05.691
##SUBTASK, Exporting results to TestLockSanityChecks-2014.03.10-at-10.44.05.691
Creating snapshot: /home/edwin/qa/test/workspaces/regression/TestLockSanityChecks/.jsure-data/TestLockSanityChecks-2014.03.10-at-10.44.05.691/running_or_crashed_sea_snapshot.xml.gz
Done in 6126 ms.
ThreadEffectsModule	: 33 ms
ParameterizedTypeAnalysis	: 43 ms
LockAnalysis	: 777 ms
EffectsAnalysis	: 50 ms
UniquenessAnalysisModule	: 39 ms
cached = 0
totalT = 0
#Performance data for TestLockSanityChecks
#Mon Mar 10 10:44:14 EDT 2014
jsure.Add.required=0
jsure.All.analyses=412
jsure.Binding.before.canon=156
jsure.Binding.full.time=847
jsure.Binding.partial.time=613
jsure.Bindings.full=2901
jsure.Bindings.partial=10078
jsure.Canonicalization=412
jsure.Cleanup=93
jsure.Destroy.time=19
jsure.Drop.creation=26
jsure.Find.canon.time=14
jsure.Parsing=1148
jsure.Promise.parsing=943
jsure.Promise.scrubbing=2039
jsure.Sea.export=813
jsure.Sea.update=240
jsure.Total.JSure.time=6126
jsure.Total.blocks=375
jsure.Total.canonical=6579
jsure.Total.decls=775
jsure.Total.destroyed=1202
jsure.Total.gced=0
jsure.Total.loc=2981
jsure.Total.nodes=72435
jsure.Total.stmts=574
jsure.Total.try.destroyed=1202
jsure.analysis.EffectsAnalysis=50
jsure.analysis.LockAnalysis=777
jsure.analysis.ParameterizedTypeAnalysis=43
jsure.analysis.ThreadEffectsModule=33
jsure.analysis.UniquenessAnalysisModule=39
jsure.num.threads=8
##DONE
Renaming snapshot: /home/edwin/qa/test/workspaces/regression/TestLockSanityChecks/.jsure-data/TestLockSanityChecks-2014.03.10-at-10.44.05.691/sea_snapshot.xml.gz
Done with JSure!
Closing AnnotationRules log
Closed JUnitXMLOutput RemoteJSureRun.AnnotationRules
Scanning complete (7445 ms)
No socket to close
Closing std streams
Process result after waiting = 0
