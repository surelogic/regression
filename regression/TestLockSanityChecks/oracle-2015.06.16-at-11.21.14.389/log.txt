LOCAL vm : 1.8.0_05
Path: /Users/aarong/git/jsure/jsure-analysis/bin
Path: /Users/aarong/git/common/common/lib/runtime/commons-codec-1.10.jar
Path: /Users/aarong/git/common/common/lib/runtime/trove-3.0.3.jar
Path: /Users/aarong/git/common/common/lib/runtime/antlr-3.5.2-runtime.jar
Path: /Users/aarong/git/common/common/lib/runtime/servlet-api-3.1.jar
Path: /Users/aarong/git/jsure/jsure-common/lib/runtime/diffutils-1.2.1.jar
Path: /Users/aarong/git/common/common/bin
Path: /Users/aarong/git/common/common/lib/runtime/asm-5.0.2.jar
Path: /Users/aarong/git/jsure/jsure-analysis/lib/runtime/renamedJavac.jar
Path: /Users/aarong/git/common/common/lib/runtime/asm-tree-5.0.2.jar
Path: /Users/aarong/git/common/common/lib/runtime/promises-5.6.0.jar
Path: /Users/aarong/git/jsure/jsure-analysis/lib/runtime/log4j-xml-1.3alpha-8.jar
Path: /Users/aarong/git/common/common/lib/runtime/derby-10.11.1.1.jar
Path: /Users/aarong/git/jsure/jsure-common/bin
Path: /Users/aarong/git/common/common/lib/runtime/ant-1.9.4.jar
Path: /Users/aarong/git/common/common/lib/runtime/collections-generic-4.0.jar
Path: /Users/aarong/git/jsure/jsure-analysis/lib/runtime/log4j-1.3alpha-8.jar
Path: /Users/aarong/git/common/common/lib/runtime/asm-commons-5.0.2.jar
Path: /Users/aarong/git/common/common/lib/runtime/commons-lang3-3.3.2.jar
Path: /Users/aarong/git/common/common/lib/runtime/commons-io-2.4.jar
Starting process:
	/Library/Java/JavaVirtualMachines/jdk1.8.0_05.jdk/Contents/Home/jre/bin/java
	-Dsl.running.in.remote.vm=true
	-Dsurelogic.test.code=NONE
	-XX:MaxPermSize=512m
	-verbosegc
	-DSureLogicX=true
	-Dsl.run.dir=/Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestLockSanityChecks-2015.06.16-at-11.21.14.389
	-Dfluid.ir.versioning=Versioning.Off
	-Dfluid.directory.url=file:/Eclipses/eclipse-standard-luna-SR2-macosx-cocoa-x86_64/../../Users/aarong/git/jsure/jsure-analysis/
	-Xmx2048m
	-classpath
	/Users/aarong/git/jsure/jsure-analysis/bin:/Users/aarong/git/common/common/lib/runtime/commons-codec-1.10.jar:/Users/aarong/git/common/common/lib/runtime/trove-3.0.3.jar:/Users/aarong/git/common/common/lib/runtime/antlr-3.5.2-runtime.jar:/Users/aarong/git/common/common/lib/runtime/servlet-api-3.1.jar:/Users/aarong/git/jsure/jsure-common/lib/runtime/diffutils-1.2.1.jar:/Users/aarong/git/common/common/bin:/Users/aarong/git/common/common/lib/runtime/asm-5.0.2.jar:/Users/aarong/git/jsure/jsure-analysis/lib/runtime/renamedJavac.jar:/Users/aarong/git/common/common/lib/runtime/asm-tree-5.0.2.jar:/Users/aarong/git/common/common/lib/runtime/promises-5.6.0.jar:/Users/aarong/git/jsure/jsure-analysis/lib/runtime/log4j-xml-1.3alpha-8.jar:/Users/aarong/git/common/common/lib/runtime/derby-10.11.1.1.jar:/Users/aarong/git/jsure/jsure-common/bin:/Users/aarong/git/common/common/lib/runtime/ant-1.9.4.jar:/Users/aarong/git/common/common/lib/runtime/collections-generic-4.0.jar:/Users/aarong/git/jsure/jsure-analysis/lib/runtime/log4j-1.3alpha-8.jar:/Users/aarong/git/common/common/lib/runtime/asm-commons-5.0.2.jar:/Users/aarong/git/common/common/lib/runtime/commons-lang3-3.3.2.jar:/Users/aarong/git/common/common/lib/runtime/commons-io-2.4.jar
	com.surelogic.javac.jobs.RemoteJSureRun

First line in REMOTE vm = Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
[GC (Allocation Failure)  512K->504K(327168K), 0.0012330 secs]
[GC (Allocation Failure)  1004K->579K(327680K), 0.0009180 secs]
[GC (Allocation Failure)  1603K->747K(327680K), 0.0010000 secs]
[GC (Allocation Failure)  1771K->803K(328704K), 0.0009280 secs]
JVM started: 1.8.0_05
Log level: INFO
Created reader
Created monitor
Created log handler
Running RemoteJSureRun
[GC (Allocation Failure)  2851K->1027K(328704K), 0.0011480 secs]
[GC (Allocation Failure)  3075K->1307K(331264K), 0.0012270 secs]
[GC (Allocation Failure)  5403K->1595K(331264K), 0.0013990 secs]
[GC (Allocation Failure)  5691K->1803K(335360K), 0.0012430 secs]
runPath = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestLockSanityChecks-2015.06.16-at-11.21.14.389
Creating run: TestLockSanityChecks-2015.06.16-at-11.21.14.389
projects = TestLockSanityChecks
Loading edu.cmu.cs.fluid.make.nonabductive.proposals = false
Loading edu.cmu.cs.fluid.load.all.classes = false
Loading edu.cmu.cs.fluid.timeoutFlag = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BCA = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ConstantExpr = false
Loading edu.cmu.cs.fluid.physMemoryInMB = 20480
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.EqualityAssurance = false
Loading edu.cmu.cs.fluid.xml.diff.directory = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/promises-xml
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceUWM = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.IRConcurrencyDetector = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Singleton = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.CALLS = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BenchmarkingUniquenessSE = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ThreadEffectAssurance2 = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Binder = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.cliend.eclipse.TypeBasedAlias = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Nullable = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.TestIsFunctional = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceUWM_SE = false
Loading edu.cmu.cs.fluid.tool-memory-mb = 2048
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.DefinitelyAssigned = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.UniquenessAssuranceSE = true
Loading edu.cmu.cs.fluid.analysis.thread.count = 8
Loading edu.cmu.cs.fluid.timeoutSec = 11
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.NonNullRawTypes = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LayersAssurance = false
Loading edu.cmu.cs.fluid.default.JRE = org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Loading edu.cmu.cs.fluid.timeoutWarningSec = 30
Loading edu.cmu.cs.fluid.modeling.problem.filters = 00000012com\.apple.*00000013com\.oracle.*00000010com\.sun.*00000014.*\.internal.*00000023.*BakedArrayList\.class00000007apple.*00000008oracle.*00000011quicktime.*00000005sun.*
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Utility = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BenchmarkingUniquenessNew_SE = false
Loading edu.cmu.cs.fluid.scan.may.use.compression = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.ParameterizedType = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Final = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LockAssurance3 = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.BenchmarkingUniquenessNew = false
Loading edu.cmu.cs.fluid.data.directory = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.NullablePreprocessor = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.EffectAssurance2 = true
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.LV = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.StructureAssurance = false
Loading com.surelogic.jsure.active.com.surelogic.jsure.client.eclipse.Types = false
JSure data dir = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data
XML diff dir   = /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/promises-xml
Looking for JRE in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
default JRE = org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Initialized job
Created com.surelogic.analysis.threads.ThreadEffectsModule
Starting a new group for ThreadEffectsModule
Created com.surelogic.analysis.annotationbounds.ParameterizedTypeAnalysis
Created com.surelogic.analysis.concurrency.driver.LockAnalysis
Starting a new group for LockAnalysis
Group: EXTERNALLY
	ThreadEffectsModule
	ParameterizedTypeAnalysis
[GC (Allocation Failure)  9995K->2291K(335360K), 0.0018620 secs]
Created com.surelogic.analysis.effects.EffectsAnalysis
Created com.surelogic.analysis.uniqueness.classic.sideeffecting.UniquenessAnalysisModule
Starting a new group for UniquenessAnalysisModule
Group: com.surelogic.analysis.visitors.TopLevelAnalysisVisitor$1@69663380, class com.surelogic.analysis.bca.BindingContextAnalysis, EXTERNALLY
	LockAnalysis
	EffectsAnalysis
Group: com.surelogic.analysis.uniqueness.classic.sideeffecting.UniquenessAnalysisModule$1@5b37e0d2, class com.surelogic.analysis.bca.BindingContextAnalysis, INTERNALLY
	UniquenessAnalysisModule
##TASK, Scan, 450
Initializing ...
##SUBTASK, Initializing ...
monitor = com.surelogic.common.jobs.remote.AbstractRemoteSLJob$Monitor@4459eb14
singleThread = false
[GC (Allocation Failure)  10483K->2539K(340992K), 0.0017540 secs]
[GC (Allocation Failure)  15735K->10657K(340992K), 0.0054790 secs]
[GC (Allocation Failure)  23933K->23865K(351744K), 0.0086780 secs]
Done initializing org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: 0
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/resources.jar
[GC (Allocation Failure)  44834K->43793K(352256K), 0.0125340 secs]
[GC (Allocation Failure)  64785K->47433K(366080K), 0.0051840 secs]
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/rt.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jsse.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jce.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/charsets.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jfr.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/dnsns.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/localedata.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunec.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunjce_provider.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunpkcs11.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/zipfs.jar
org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: Done initializing with /System/Library/Java/Extensions/MRJToolkit.jar
Done initializing TestLockSanityChecks: 55
Trying to find /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestLockSanityChecks-2015.06.16-at-11.21.14.389/source/TestLockSanityChecks.bin.zip
TestLockSanityChecks: TestLockSanityChecks -> org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Done initializing org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: 0
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/resources.jar
[GC (Allocation Failure)  81225K->54033K(366080K), 0.0072120 secs]
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/rt.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jsse.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jce.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/charsets.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/jfr.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/dnsns.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/localedata.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunec.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunjce_provider.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/sunpkcs11.jar
TestLockSanityChecks: Done initializing with /jre1.7.0_55.jre/Contents/Home/lib/ext/zipfs.jar
TestLockSanityChecks: Done initializing with /System/Library/Java/Extensions/MRJToolkit.jar
TestLockSanityChecks: Done initializing with /Users/aarong/git/regression/regression/TestLockSanityChecks/promises-4.0.0.jar
##SUBTASK_DONE
##WORK, 1
Assuming that the projects are run in dependency order
Parsing ...
##SUBTASK, Parsing ...
Done adapting 0 files for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK_DONE
##WORK, 1
Parsing ...
##SUBTASK, Parsing ...
JCP: warning: [options] bootstrap class path not set in conjunction with -source 1.7
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
Adapting 55 CUTs
[GC (Allocation Failure)  87825K->61816K(388608K), 0.0146060 secs]
Done adapting 55 files for TestLockSanityChecks
##SUBTASK_DONE
##WORK, 1
Handling references for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK, Handling references for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 19 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Setting project for Object from org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 36 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 54 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 58 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 34 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 18 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 9 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 12 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 15 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 4 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 2 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK_DONE
##WORK, 1
Handling references for TestLockSanityChecks
##SUBTASK, Handling references for TestLockSanityChecks
Handling 31 dangling refs for TestLockSanityChecks
Handling 3 dangling refs for TestLockSanityChecks
Handling 1 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 2 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK_DONE
##WORK, 1
Updated 267 files in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Updated 89 files in TestLockSanityChecks
Parsing ASTs  = 482 ms
Handling refs = 404 ms
[2015-06-16 11:21:16    INFO] partial bindings = 0 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
[2015-06-16 11:21:16    INFO] full bindings = 0 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
Canonicalizing ASTs
##SUBTASK, Canonicalizing ASTs
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
[GC (Allocation Failure)  115064K->67438K(389632K), 0.0162920 secs]
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
##WORK, 1
[2015-06-16 11:21:16    INFO] partial bindings = 1692 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
[2015-06-16 11:21:16    INFO] full bindings = 1512 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
Canonicalizing TestLockSanityChecks/src/test_lock_field/B.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/D.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/B.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/A.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/C.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/GoodC2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_returns_lock/StateLock.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/good/Good3.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/BadC3.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
[GC (Metadata GC Threshold)  73557K->67835K(413184K), 0.0111180 secs]
[Full GC (Metadata GC Threshold)  67835K->65998K(166912K), 0.2624060 secs]
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/C.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/Other.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/LockViz.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/BadC2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/good/Good2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/Parent.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/Other1.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_returns_lock/PLock.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/C.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_lock_region/Grandparent.java
##WORK, 1
Canonicalizing TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##WORK, 1
Binding = 125 ms
Cleaned 0 in 10 ms
##SUBTASK_DONE
##WORK, 1
Handling references for TestLockSanityChecks
##SUBTASK, Handling references for TestLockSanityChecks
Handling 19 dangling refs for TestLockSanityChecks
##SUBTASK_DONE
##WORK, 1
Handling references for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK, Handling references for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Handling 19 dangling refs for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK_DONE
##WORK, 1
Updated 267 files in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Updated 89 files in TestLockSanityChecks
[GC (System.gc())  73934K->66230K(167424K), 0.0016100 secs]
[Full GC (System.gc())  66230K->55382K(167424K), 0.1061910 secs]
Creating drops
##SUBTASK, Creating drops
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
Created binary drop for sun.misc.URLClassPath
Created binary drop for java.lang.Double
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/B.java
Created binary drop for java.util.zip.InflaterInputStream
Created binary drop for sun.reflect.ConstantPool
Created binary drop for java.security.CodeSource
Created binary drop for java.nio.file.attribute.FileStoreAttributeView
Created binary drop for java.nio.IntBuffer
Created binary drop for com.surelogic.PolicyLock
Created binary drop for java.util.WeakHashMap
Created binary drop for java.nio.channels.AsynchronousCloseException
Created binary drop for java.nio.CharBuffer
Created binary drop for java.io.DataOutput
Created binary drop for java.nio.charset.CodingErrorAction
Created binary drop for java.nio.file.OpenOption
Created binary drop for java.io.FilterOutputStream
Created binary drop for com.surelogic.Regions
Created binary drop for java.security.NoSuchProviderException
Created binary drop for java.util.Deque
Created binary drop for java.net.MalformedURLException
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
Created binary drop for java.lang.String
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C.java
Created binary drop for java.lang.reflect.Constructor
Created binary drop for sun.reflect.ConstructorAccessor
Created binary drop for sun.util.locale.LocaleSyntaxException
Created binary drop for java.nio.file.spi.FileSystemProvider
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
Created binary drop for java.nio.channels.ReadableByteChannel
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/A.java
Created binary drop for java.io.UnsupportedEncodingException
Created binary drop for java.lang.Float
Created binary drop for java.lang.AutoCloseable
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/D.java
Created binary drop for java.security.Guard
Created binary drop for java.security.NoSuchAlgorithmException
Created binary drop for java.nio.file.Watchable
Created binary drop for java.lang.Deprecated
Created binary drop for java.net.FileNameMap
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/C.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
Created binary drop for sun.misc.JarIndex
Created binary drop for java.security.cert.Certificate
Created binary drop for java.util.Set
Created binary drop for java.io.FileNotFoundException
Created binary drop for java.util.concurrent.locks.AbstractQueuedSynchronizer
Created binary drop for java.net.UnknownServiceException
Created binary drop for sun.util.locale.ParseStatus
Created binary drop for java.net.UnknownHostException
Created binary drop for java.net.SocketException
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/D.java
Created binary drop for java.lang.ThreadLocal
Created binary drop for java.util.Iterator
Created binary drop for java.nio.charset.Charset
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
Created binary drop for java.util.Dictionary
Created binary drop for java.nio.charset.CharsetEncoder
Created binary drop for java.lang.StringBuilder
Created binary drop for java.nio.channels.spi.AbstractInterruptibleChannel
Created binary drop for java.lang.Exception
Created binary drop for java.io.FileFilter
Created binary drop for java.lang.Number
Created binary drop for java.lang.reflect.AnnotatedElement
Created binary drop for java.lang.ClassLoader
Created binary drop for java.nio.ByteOrder
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
Created binary drop for java.nio.ByteBuffer
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
Created binary drop for java.util.concurrent.locks.Condition
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
Created binary drop for java.net.URLConnection
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/B.java
Created binary drop for java.lang.AbstractStringBuilder
Created binary drop for java.util.AbstractMap
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
Created binary drop for java.lang.Iterable
Created binary drop for java.security.PermissionCollection
Created binary drop for java.io.DataOutputStream
Created binary drop for java.util.ListIterator
Created binary drop for java.lang.Readable
Created binary drop for java.lang.reflect.GenericDeclaration
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
Created binary drop for java.util.concurrent.locks.Lock
Created binary drop for java.lang.Long
Created binary drop for java.io.IOException
Created binary drop for java.nio.channels.InterruptibleChannel
Created binary drop for java.security.Key
Created binary drop for java.lang.NumberFormatException
Created binary drop for java.lang.Comparable
Created binary drop for com.surelogic.PolicyLocks
Created binary drop for java.io.Flushable
Created binary drop for com.surelogic.RegionLocks
Created binary drop for java.nio.file.Path
Created binary drop for java.lang.ref.SoftReference
Created binary drop for sun.util.LocaleServiceProviderPool
Created binary drop for java.lang.Cloneable
Created binary drop for java.util.zip.ZipFile
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/C1.java
Created binary drop for java.util.concurrent.Future
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
Created binary drop for java.nio.file.attribute.AttributeView
Created binary drop for java.lang.reflect.Type
Created binary drop for java.lang.Character
Created binary drop for java.nio.file.attribute.UserPrincipalLookupService
Created binary drop for java.security.cert.CertPath
Created binary drop for java.nio.file.DirectoryStream
Created binary drop for com.surelogic.ReturnsLock
Created binary drop for java.lang.annotation.RetentionPolicy
Created binary drop for sun.security.util.Debug
Created binary drop for java.util.LinkedList
Created binary drop for java.util.zip.ZipConstants
Created binary drop for java.nio.file.WatchEvent
Created binary drop for java.nio.channels.WritableByteChannel
Created binary drop for java.util.jar.Attributes
Created binary drop for java.util.List
Created binary drop for java.nio.ShortBuffer
Created binary drop for java.lang.Package
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
Created binary drop for java.lang.Appendable
Created binary drop for java.lang.InterruptedException
Created binary drop for java.nio.file.attribute.FileAttributeView
Created binary drop for java.net.InetAddressImpl
Created binary drop for java.util.Collection
Created binary drop for java.util.Locale
Created binary drop for java.security.Permission
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/Other.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
Created binary drop for java.util.jar.Manifest
Created binary drop for java.io.Closeable
Created binary drop for sun.misc.MetaIndex
Created binary drop for java.util.zip.ZipEntry
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
Created binary drop for java.math.BigInteger
Created binary drop for java.util.AbstractSequentialList
Created binary drop for com.surelogic.RequiresLock
Created binary drop for java.lang.reflect.AccessibleObject
Created binary drop for java.lang.IllegalAccessException
Created binary drop for java.util.ResourceBundle
Created binary drop for java.lang.NoSuchFieldException
Created binary drop for java.util.jar.JarEntry
Created binary drop for java.lang.annotation.Retention
Created binary drop for java.security.ProtectionDomain
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
Created binary drop for java.nio.channels.AsynchronousFileChannel
Created binary drop for java.lang.reflect.InvocationTargetException
Created binary drop for java.lang.reflect.Method
Created binary drop for java.security.PrivilegedAction
Created binary drop for java.util.MissingResourceException
Created binary drop for java.io.SyncFailedException
Created binary drop for java.lang.StringBuffer
Created binary drop for sun.util.locale.InternalLocaleBuilder
Created binary drop for sun.reflect.FieldAccessor
Created binary drop for java.net.NetworkInterface
Created binary drop for java.lang.Integer
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
Created binary drop for java.util.Enumeration
Created binary drop for java.util.spi.LocaleNameProvider
Created binary drop for java.lang.Runnable
Created binary drop for java.nio.MappedByteBuffer
Created binary drop for java.net.URI
Created binary drop for java.nio.file.FileStore
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
Created binary drop for java.nio.charset.CharsetDecoder
Created binary drop for java.security.InvalidKeyException
Created binary drop for java.lang.Short
Created binary drop for java.nio.file.WatchService
Created binary drop for java.lang.ref.WeakReference
Created binary drop for sun.util.locale.LocaleObjectCache
Created binary drop for java.io.ObjectStreamException
Created binary drop for java.util.HashMap
Created binary drop for java.lang.NullPointerException
Created binary drop for java.util.AbstractCollection
Created binary drop for sun.util.locale.LocaleExtensions
Created binary drop for java.lang.Boolean
Created binary drop for java.io.FilenameFilter
Created binary drop for java.net.InterfaceAddress
Created binary drop for com.surelogic.Region
Created binary drop for java.nio.file.attribute.FileTime
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
Created binary drop for java.io.InputStream
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
Created binary drop for java.nio.file.LinkOption
Created binary drop for sun.reflect.CallerSensitive
Created binary drop for sun.util.resources.OpenListResourceBundle
Created binary drop for java.security.KeyException
Created binary drop for java.net.InetAddress
Created binary drop for java.lang.Thread
Created binary drop for java.nio.file.attribute.GroupPrincipal
Created binary drop for java.lang.SuppressWarnings
Created binary drop for java.nio.file.attribute.BasicFileAttributes
Created binary drop for java.lang.reflect.Field
Created binary drop for java.lang.annotation.Target
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
Created binary drop for java.net.URISyntaxException
Created binary drop for sun.misc.Resource
Created binary drop for java.net.URL
Created binary drop for sun.nio.ch.Interruptible
Created binary drop for java.security.AccessControlException
Created binary drop for java.nio.channels.SeekableByteChannel
Created binary drop for java.lang.RuntimeException
Created binary drop for java.lang.Throwable
Created binary drop for java.net.Proxy
Created binary drop for java.net.URLStreamHandlerFactory
Created binary drop for com.surelogic.InRegion
Created binary drop for java.nio.file.PathMatcher
Created binary drop for java.io.Writer
Created binary drop for java.util.concurrent.locks.ReentrantReadWriteLock
Created binary drop for java.nio.channels.FileChannel
Created binary drop for sun.reflect.ReflectionFactory
Created binary drop for java.util.Hashtable
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
Created binary drop for java.security.SignatureException
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
Created binary drop for java.io.Serializable
Created binary drop for java.lang.annotation.Documented
Created binary drop for java.nio.file.AccessMode
Created binary drop for java.lang.Enum
Created binary drop for java.security.Principal
Created binary drop for java.nio.file.WatchKey
Created binary drop for java.lang.ref.Reference
Created binary drop for java.security.PublicKey
Created binary drop for java.nio.FloatBuffer
Created binary drop for java.nio.channels.ByteChannel
Created binary drop for java.util.spi.LocaleServiceProvider
Created binary drop for java.nio.file.attribute.UserPrincipal
Created binary drop for java.lang.SecurityException
Created binary drop for java.nio.file.FileSystem
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Other.java
Created binary drop for sun.util.locale.BaseLocale
Created binary drop for java.net.ContentHandler
Created binary drop for java.lang.ThreadGroup
Created binary drop for java.security.CodeSigner
Created binary drop for java.util.zip.Inflater
Created binary drop for java.lang.Object
Created binary drop for java.util.Queue
Created binary drop for java.io.PrintStream
Created binary drop for java.util.RandomAccess
Created binary drop for java.io.PrintWriter
Created binary drop for java.nio.channels.Channel
Created binary drop for java.nio.channels.ClosedChannelException
Created binary drop for java.nio.channels.AsynchronousChannel
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
Created binary drop for java.util.Date
Created binary drop for java.util.AbstractSet
Created binary drop for java.util.concurrent.ExecutorService
Created binary drop for java.lang.InstantiationException
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
Created binary drop for java.lang.reflect.Member
Created binary drop for java.nio.DoubleBuffer
Created binary drop for sun.reflect.annotation.AnnotationType
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
Created binary drop for java.lang.Void
Created binary drop for java.lang.IllegalArgumentException
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
Created binary drop for java.lang.Class
Created binary drop for java.lang.ClassValue
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
Created binary drop for java.util.concurrent.Executor
Created binary drop for java.lang.ref.ReferenceQueue
Created binary drop for java.util.Random
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C.java
Created binary drop for sun.reflect.LangReflectAccess
Created binary drop for java.util.AbstractList
Created binary drop for java.util.zip.ZipException
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
Created binary drop for java.nio.charset.CoderResult
Created binary drop for java.nio.channels.GatheringByteChannel
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
Created binary drop for java.lang.StackTraceElement
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
Created binary drop for sun.util.locale.Extension
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/C.java
Created binary drop for java.net.ContentHandlerFactory
Created binary drop for java.util.concurrent.locks.ReadWriteLock
Created binary drop for java.lang.ReflectiveOperationException
Created binary drop for java.util.concurrent.locks.ReentrantLock
Created binary drop for java.nio.charset.CharacterCodingException
Created binary drop for java.security.DomainCombiner
Created binary drop for java.util.jar.JarFile
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
Created binary drop for java.util.concurrent.TimeUnit
Created binary drop for java.io.FilterInputStream
Created binary drop for java.io.OutputStream
Created binary drop for java.security.AccessControlContext
Created binary drop for java.nio.channels.FileLock
Created binary drop for java.net.URLStreamHandler
Created binary drop for java.io.FileDescriptor
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
Created binary drop for java.util.Map
Created binary drop for java.security.cert.CertificateException
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
Created binary drop for java.util.Stack
Created binary drop for java.util.zip.DataFormatException
Created binary drop for java.lang.annotation.ElementType
Created binary drop for java.io.File
Created binary drop for java.nio.file.CopyOption
Created binary drop for java.util.SortedMap
Created binary drop for java.net.SocketAddress
Created binary drop for java.util.concurrent.Callable
Created binary drop for com.surelogic.RegionLock
Created binary drop for java.util.concurrent.locks.AbstractOwnableSynchronizer
Created binary drop for java.nio.channels.CompletionHandler
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
Created binary drop for java.util.concurrent.ConcurrentMap
Created binary drop for java.util.Comparator
Created binary drop for java.util.ArrayList
Created binary drop for java.util.Vector
Created binary drop for java.nio.file.attribute.FileAttribute
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/D.java
Created binary drop for java.lang.Byte
Created binary drop for java.lang.annotation.Annotation
Created binary drop for java.security.cert.CertificateEncodingException
Created binary drop for java.lang.reflect.TypeVariable
Created binary drop for java.lang.CloneNotSupportedException
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
Created binary drop for java.nio.LongBuffer
Created binary drop for java.security.Timestamp
Created binary drop for sun.reflect.MethodAccessor
Created binary drop for sun.util.locale.LanguageTag
Created source drop for file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
Created binary drop for java.lang.CharSequence
Created binary drop for java.nio.Buffer
Created binary drop for java.nio.channels.ScatteringByteChannel
Created binary drop for java.security.GeneralSecurityException
##SUBTASK_DONE
##WORK, 1
Parsing promises
##SUBTASK, Parsing promises
Added 3 promises for java.lang.[] in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@799f7e29
Added 3 promises for java.lang.[] in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@551e4c6d
Javac making log: AnnotationRules
Added 1 promises for inherited_region.Subregion.Bad3 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@535f2615
Added 3 promises for test_requires_lock.Other1 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@7e88cf1d
Added 6 promises for java.lang.NullPointerException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@49fa0d28
Added 9 promises for test_requires_lock.StateLock_Constructor in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@54e07301
Added 1 promises for inherited_region.good.GoodRoot in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@3cdffc28
Added 61 promises for java.lang.Short in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2f3092be
Added 16 promises for test_requires_lock.TestDuplicates in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@7395c3ad
Added 2 promises for test_requires_lock.TestImprovedMessages in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@1fe2b76a
Added 70 promises for java.lang.Double in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1a66939a
Added 18 promises for java.net.URISyntaxException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@73501170
Added 73 promises for java.lang.Float in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@460032e7
Added 12 promises for java.lang.reflect.InvocationTargetException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7eb8ea59
Added 22 promises for java.lang.Number in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@745f41c1
Added 1 promises for test_lock_region.B in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@6b29b877
Added 3 promises for test_unique_names.GoodC2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@4e2b201b
Added 6 promises for java.io.Writer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3bdb55b2
Added 16 promises for test_requires_lock.C in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@413dd05b
Added 18 promises for java.util.ListIterator in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@6881bb4d
Added 18 promises for java.util.Queue in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@37faf19f
Added 12 promises for java.lang.SecurityException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5bf52d7d
Added 6 promises for java.util.Iterator in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@58bf9d87
Added 66 promises for test_lock_region.LockVizJUC in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@31174807
Added 26 promises for test_returns_lock.StateLock in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@3d1c57bf
Added 64 promises for test_lock_field.C in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@563f1e5a
Added 2 promises for java.lang.ref.SoftReference in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3c659abe
Added 47 promises for java.lang.Throwable in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3563b5c0
Added 109 promises for java.lang.StringBuilder in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@342d7f2f
Added 2 promises for twoLocksOneRegion.inherited.Super in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@136eb417
Added 3 promises for java.util.Date in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@93dabe9
Added 6 promises for java.lang.InstantiationException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@43ac3df7
Added 23 promises for test_requires_lock.PolicyLock_LockNames in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@4b898a99
Added 1 promises for inherited_region.Instance.Bad1 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@2205abf8
Added 6 promises for java.lang.InterruptedException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2267cc33
Added 3 promises for test_requires_lock.D in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@a603d9b
Added 1 promises for inherited_region.good.Good4 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@7abf3ecc
Added 2 promises for twoLocksOneRegion.inherited.Duper in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@6a7f8a7a
Added 54 promises for java.util.Set in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5e45f7b9
Added 29 promises for java.util.AbstractSequentialList in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4068a227
Added 26 promises for test_requires_lock.StateLock_LockNames in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@277ef9bf
Added 31 promises for java.lang.Object in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1db97a05
Added 22 promises for java.util.concurrent.locks.Condition in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@49a85cc1
Added 3 promises for java.lang.Iterable in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3c54a5e7
Added 29 promises for java.util.Dictionary in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@1f7e789a
Added 24 promises for test_returns_lock.PLock in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@637a03e0
Added 139 promises for java.util.LinkedList in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@45e74444
Added 60 promises for java.util.AbstractList in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@25518a83
Added 45 promises for java.util.ResourceBundle in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@290afc57
Added 16 promises for java.util.AbstractSet in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@582d8857
line 1:49 missing EOF at '.'
line 1:49 missing EOF at '.'
line 1:49 missing EOF at '.'
Added 96 promises for java.lang.Long in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@67a687f8
Added 18 promises for test_lock_region.C in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@38620708
Added 16 promises for test_lock_region.ProtectInheritedRegion in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@616638e8
Added 2 promises for inherited_region.good.Good2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@f758f24
Added 6 promises for java.lang.NumberFormatException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@23bd369f
Added 7 promises for java.util.concurrent.locks.ReadWriteLock in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@648e6ad8
Added 11 promises for test_lock_region.GreatGrandparent in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@1b391f12
Added 3 promises for test_requires_lock.Root in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@56545763
Added 1 promises for java.lang.ref.ReferenceQueue in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@72e2ccb3
Added 3 promises for java.nio.file.Path in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@22cdf0a2
Added 88 promises for java.util.jar.Attributes in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@248abef2
Added 89 promises for java.util.List in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@355fd5f8
Added 108 promises for java.util.AbstractMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@6365548a
Added 6 promises for java.io.PrintStream in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2382d2e6
Added 3 promises for java.util.Locale in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@71ed26c6
Added 7 promises for test_unique_names.StateVsPolicyLocks in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@1fd5609b
Added 12 promises for java.lang.IllegalArgumentException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@38086845
Added 34 promises for java.util.concurrent.ExecutorService in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5d73c668
Added 3 promises for java.util.jar.Manifest in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3c1753e
Added 20 promises for java.util.concurrent.locks.Lock in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@699f1c7b
Added 3 promises for java.util.zip.ZipEntry in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3363a125
Added 2 promises for inherited_region.Subregion.BadRoot2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@14644a56
Added 3 promises for test_unique_names.BadC2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@2d293fc9
Added 6 promises for java.lang.NoSuchFieldException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@62c84c46
Added 56 promises for java.util.WeakHashMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@cdcc71a
[GC (Allocation Failure)  130134K->59470K(176128K), 0.0061360 secs]
Added 12 promises for java.lang.Class in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4f661fad
Added 14 promises for test_requires_lock.C_Policy in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@d0666e7
Added 4 promises for qualified_receivers_as_locks.Outer in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@4b12f2a7
Added 17 promises for java.util.concurrent.ConcurrentMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7316c58b
Added 87 promises for java.util.Deque in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4509cac3
Added 17 promises for test_returns_lock.C in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@71053154
Added 1 promises for inherited_region.baseCase.Good1 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@15a5605d
Added 3 promises for test_unique_names.GoodC3 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@62f48ebc
Added 6 promises for java.lang.CloneNotSupportedException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@26ce5800
Added 96 promises for java.lang.Integer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5b17282f
Added 4 promises for java.util.Enumeration in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@17075c0c
Added 55 promises for java.util.AbstractCollection in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@713efa2a
Added 10 promises for test_lock_region.Grandparent in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@1369846c
Added 21 promises for java.util.Stack in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@28aafd2
Added 18 promises for java.nio.CharBuffer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3ad59360
Added 301 promises for java.lang.String in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@a96f18c
Added 1 promises for java.lang.ThreadLocal in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@772a5123
Added 1 promises for inherited_region.Subregion.Bad2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@68aff233
Added 3 promises for test_unique_names.C1 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@37ae25b5
Added 11 promises for test_lock_region.Parent in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@1917354b
Added 1 promises for test_lock_region.D in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@383893c3
Added 12 promises for java.lang.CharSequence in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3d324600
Added 2 promises for inherited_region.good.Good3 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@3a0575a
Added 64 promises for java.util.Map in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3041d582
Added 3 promises for test_unique_names.BadC3 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@4a2f4789
Added 22 promises for java.util.concurrent.locks.AbstractQueuedSynchronizer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@4a4cacfb
Added 141 promises for java.lang.Thread in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@565eb1a8
Added 31 promises for java.util.SortedMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@75d313a7
Added 66 promises for test_lock_region.LockViz in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@51295ae8
Added 79 promises for test_requires_lock.PolicyLock_visibility in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@657da5cf
Added 12 promises for java.lang.Exception in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@43752412
WARNING: TreeAccessor couldn't find equals(java.lang.Object) in java.util.ArrayList
WARNING: TreeAccessor couldn't find hashCode() in java.util.ArrayList
Added 12 promises for java.lang.RuntimeException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@76f7f751
Added 1 promises for twoLocksOneRegion.unrelatedClasses.Test2 in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@26658928
Added 104 promises for java.util.ArrayList in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7f86f3ba
Added 3 promises for twoLocksOneRegion.sameClass.Bad in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@3c5e2da9
Added 138 promises for java.math.BigInteger in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5f0b747e
Added 6 promises for java.lang.IllegalAccessException in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7cbc2ce0
Added 13 promises for java.lang.Enum in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@186d7350
Added 3 promises for test_requires_lock.CannotRequireRWLock in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@423c8356
Added 83 promises for java.util.Hashtable in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@2144aa15
Added 1 promises for test_lock_region.Other in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@4f2ff487
Added 15 promises for test_returns_lock.C_Policy in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@13e70dc2
Added 6 promises for java.io.PrintWriter in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7ba72b84
Added 87 promises for test_requires_lock.StateLock_visibility in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@6f6b2a96
Added 58 promises for java.util.concurrent.locks.ReentrantLock in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@112ff0b4
Added 144 promises for java.lang.AbstractStringBuilder in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@696f6d9d
Added 29 promises for java.util.concurrent.TimeUnit in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@5f36cc0d
Added 3 promises for java.nio.file.DirectoryStream in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@47ddd1a0
Added 6 promises for java.lang.Appendable in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7f903526
Added 158 promises for java.lang.StringBuffer in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@210c0710
Added 1 promises for twoLocksOneRegion.unrelatedClasses.Test in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@a67153d
Added 54 promises for java.util.Collection in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@7222c1bd
Added 170 promises for java.util.Vector in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@23883755
Added 7 promises for test_requires_lock.PolicyLock_Constructor in TestLockSanityChecks: com.surelogic.tree.SyntaxTreeNode@10c3c934
Added 61 promises for java.util.HashMap in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@3b1bd0c4
Added 59 promises for java.lang.Byte in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@237b01f2
Added 37 promises for java.lang.Boolean in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@688c8d7d
Added 103 promises for java.util.concurrent.locks.ReentrantReadWriteLock in org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7: com.surelogic.tree.SyntaxTreeNode@28c9271b
##SUBTASK_DONE
##WORK, 1
Scrubbing promises
##SUBTASK, Scrubbing promises
[GC (Allocation Failure)  145486K->62126K(178176K), 0.0080350 secs]
Creating RegionModel java.lang.Object.Instance for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
[2015-06-16 11:21:18    INFO] Couldn't find field unknownField in com.surelogic.tree.SyntaxTreeNode@563f1e5a -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:18    INFO] Couldn't find field fieldFromD in com.surelogic.tree.SyntaxTreeNode@563f1e5a -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:18    INFO] Couldn't find field badFieldFromD in com.surelogic.tree.SyntaxTreeNode@563f1e5a -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find field unknownField in com.surelogic.tree.SyntaxTreeNode@563f1e5a -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find field unknownField in com.surelogic.tree.SyntaxTreeNode@563f1e5a -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find field fieldFromD in com.surelogic.tree.SyntaxTreeNode@563f1e5a -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find field badFieldFromD in com.surelogic.tree.SyntaxTreeNode@563f1e5a -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is undefined (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ RegionLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ RegionLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ RegionLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ RegionLock ( # ) ,   /* is UNBOUND: unknown field */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: class cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: static field cannot protect an instance region */  @ RegionLock ( # ) } )   /* is UNASSOCIATED: non-final field from child */  @ PolicyLocks ( {   /* is UNBOUND: Field is undefined (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: receiver (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final field (Instance Region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: field is non-final (Instance Region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: class (Static region) */  @ PolicyLock ( # ) ,   /* is CONSISTENT: known final static field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field (static region) */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: primitively typed field */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Static locks can use fields from other classes */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Instance locks cannot use fields from other classes */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from GP */  @ PolicyLock ( # ) ,   /* is CONSISTENT: Can use field from Parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: Field is unknown */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: Cannot use a field from a child */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from GP */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from parent */  @ PolicyLock ( # ) ,   /* is UNBOUND: unknown field */  @ PolicyLock ( # ) ,   /* is UNASSOCIATED: non-final field from child */  @ PolicyLock ( # ) } ) public class C extends test_lock_field.B { public  C () { # } final java.lang.Object goodField #; java.lang.Object badField #; final int nonObjectField #; final static java.lang.Object goodStatic #; static java.lang.Object badStatic #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find region UnknownRegion in com.surelogic.tree.SyntaxTreeNode@38620708 -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } )   /* is UNPARSEABLE: static region is from unrelated class (Other) */  @ RegionLocks ( {   /* is UNBOUND: Region is undefined */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot protect a static region with 'this' */  @ RegionLock ( # ) ,   /* is UNASSOCIATED: Cannot protect a static region with a non-static field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region protected by class */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region protected by static field */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region is from the protecting class; field is from the same */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region is from the protecting class; doesn't matter that field is from superclass (B) */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region is from the protecting class; doesn't matter that field is from subclass (D) */  @ RegionLock ( # ) ,   /* is CONSISTENT: Static region is from the protecting class; doesn't matter that field is from an unrelated class (Other) */  @ RegionLock ( # ) ,   /* is UNPARSEABLE: static region is from superclass (B) */  @ RegionLock ( # ) ,   /* is UNPARSEABLE: static region is from subclass (D) */  @ RegionLock ( # ) ,   /* is UNPARSEABLE: static region is from unrelated class (Other) */  @ RegionLock ( # ) } ) public class C extends test_lock_region.B { public  C () { # } final java.lang.Object nonStaticField #; final static java.lang.Object staticFieldFromC #; }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[GC (Allocation Failure)  148142K->65716K(187904K), 0.0101850 secs]
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@3d1c57bf -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find field p in com.surelogic.tree.SyntaxTreeNode@3d1c57bf -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@3d1c57bf -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@3d1c57bf -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@3d1c57bf -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find field NoSuchClass in com.surelogic.tree.SyntaxTreeNode@3d1c57bf -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock extends java.lang.Object { public  StateLock () { # }   /*is UNASSOCIATED: Cannot qualify a static lock with this*/  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /*is UNASSOCIATED: Cannot type-qualify an instance lock*/  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualifiedInstance() { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /*is UNBOUND*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /*is CONSISTENT: parameter is non-final, but unchanged*/  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /*is UNASSOCIATED: Cannot refer to 'this' on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /*is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /*is CONSISTENT*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /*is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /*is UNBOUND: Lock does not exist*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /*is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package)*/  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@637a03e0 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find field p in com.surelogic.tree.SyntaxTreeNode@637a03e0 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@637a03e0 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@637a03e0 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@637a03e0 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find field NoSuchClass in com.surelogic.tree.SyntaxTreeNode@637a03e0 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PLock extends java.lang.Object { public  PLock () { # }   /* is UNASSOCIATED: Cannot qualify a static lock with this */  @ ReturnsLock ( # ) public java.lang.Object getLock_thisQualified_staticLock() { # }   /* is CONSISTENT*/  @ ReturnsLock ( # ) public java.lang.Object getLock_implicit_staticLock() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_typeQualified_staticLock() { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_doesntExist() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_exists2() { # }   /* is UNBOUND: parameter p doesn't exist */  @ ReturnsLock ( # ) public java.lang.Object getLock_bad_param(# final # o) { # }   /* is UNBOUND */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_doesntExist(# final # p) { # }   /* is CONSISTENT: parameter is non-final, but unchanged */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_nonfinal(# # p) { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public java.lang.Object getLock_param_good(# final # p) { # }   /* is UNASSOCIATED: Cannot refer to 'this' on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1() { # }   /* is UNASSOCIATED: Cannot refer to 'this' (implicitly) on static method */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_instanceRegion1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_staticRegion1a() { # }   /* is UNBOUND: Lock does not exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegionWithThis() { # }   /* is UNBOUND: Lock doesn't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownRegion() { # }   /* is UNBOUND: Class doesn't exist (Default package) */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1() { # }   /* is UNBOUND: Package & Class don't exist */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_unknownClass1a() { # }   /* is CONSISTENT */  @ ReturnsLock ( # ) public static java.lang.Object getLock_staticMethod_paramLock(# final # p) { # } @ SuppressWarnings ( # ) private class Inner extends java.lang.Object { # public  # Inner # # # # public # # getLock_innerClassMethod_qualifiedThis_staticLock# # # # public # # getLock_innerClassMethod_qualifiedThis_nonStaticLock# # # } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@277ef9bf -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find field p in com.surelogic.tree.SyntaxTreeNode@277ef9bf -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@277ef9bf -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@277ef9bf -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@277ef9bf -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find field NoSuchClass in com.surelogic.tree.SyntaxTreeNode@277ef9bf -- @ Regions ( { @ Region ( # ) , @ Region ( # ) , @ Region ( # ) } ) @ RegionLocks ( { @ RegionLock ( # ) , @ RegionLock ( # ) , @ RegionLock ( # ) } ) public class StateLock_LockNames extends java.lang.Object { public  StateLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final but unchanged*/  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@4b898a99 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find field p in com.surelogic.tree.SyntaxTreeNode@4b898a99 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@4b898a99 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@4b898a99 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find lock DoesntExist in com.surelogic.tree.SyntaxTreeNode@4b898a99 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
[2015-06-16 11:21:19    INFO] Couldn't find field NoSuchClass in com.surelogic.tree.SyntaxTreeNode@4b898a99 -- @ PolicyLocks ( { @ PolicyLock ( # ) , @ PolicyLock ( # ) , @ PolicyLock ( # ) } ) public class PolicyLock_LockNames extends java.lang.Object { public  PolicyLock_LockNames () { # }   /*is UNASSOCIATED: cannot qualify a static lock with this*/  @ RequiresLock ( # ) public void bad_thisQualified_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_typeQualified_staticLock() {  }   /*is UNASSOCIATED: type-qualified instance lock*/  @ RequiresLock ( # ) public void bad_typeQualifiedInstance() {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_doesntExist() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_implicit_this() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_exists_explicit_this() {  }   /*is UNBOUND: Parameter doesn't exist*/  @ RequiresLock ( # ) public void bad_param_doesnt_exist(# final # o) {  }   /* is UNBOUND: Lock doesn't exist*/  @ RequiresLock ( # ) public void bad_param_lock_doesnt_exist(# final # p) {  }   /* is CONSISTENT: parameter is non-final, but not changed */  @ RequiresLock ( # ) public void good_param_nonfinal(# # p) {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public void good_param_is_good(# final # p) {  }   /*is UNASSOCIATED: cannot use 'this' on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_explicit_this() {  }   /*is UNASSOCIATED: cannot use 'this' (implicit) on static method*/  @ RequiresLock ( # ) public static void bad_static_use_of_implicit_this() {  }   /*is CONSISTENT*/  @ RequiresLock ( # ) public static void good_staticMethod_implicit_staticLock() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void good_staticMethod_typeQualified_staticLock() {  }   /*is UNBOUND: static use of this with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionWithThis() {  }   /*is UNBOUND: static use of this (implicit) with unknown region*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownRegionImplicitThis() {  }   /*is UNBOUND: No such class (default package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1() {  }   /*is UNBOUND: No such class (non-existent package)*/  @ RequiresLock ( # ) public static void bad_staticMethod_unknownClass1a() {  }   /* is CONSISTENT */  @ RequiresLock ( # ) public static void staticMethod_paramLock(# final # p) {  } }
for project TestLockSanityChecks (in method edu.cmu.cs.fluid.java.bind.ClassMemberSearch.findClassBodyMembers(-) thread "pool-1-thread-1")
##SUBTASK_DONE
##WORK, 1
Starting analyses
Using new analysis framework -- groups
Starting group: ThreadEffectsModule, ParameterizedTypeAnalysis
##SUBTASK, Starting parallel ThreadEffectsModule [0]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel ThreadEffectsModule [0]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##SUBTASK, Starting parallel ParameterizedTypeAnalysis [1]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel ParameterizedTypeAnalysis [1]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Starting parallel ThreadEffectsModule [0]: 55 for TestLockSanityChecks
Starting parallel ThreadEffectsModule [0]: 55 for TestLockSanityChecks
##SUBTASK, Starting parallel ParameterizedTypeAnalysis [1]: 55 for TestLockSanityChecks
Starting parallel ParameterizedTypeAnalysis [1]: 55 for TestLockSanityChecks
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/B.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Super.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good3.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_Constructor.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_visibility.java
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/B.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad3.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/D.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/unrelatedClasses/Test.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/C.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/Other.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/C1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/A.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/A.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/BadRoot1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Other1.java
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC3.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/C.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/StateLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockViz.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/StateVsPolicyLocks.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/baseCase/Good1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestDuplicates.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/TestImprovedMessages.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/inherited/Duper.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_Constructor.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/D.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/LockVizJUC.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/B.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/D.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/B.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/C_Policy.java
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/GoodRoot.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Instance/Bad1.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/GreatGrandparent.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/BadRoot2.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Other.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/qualified_receivers_as_locks/Outer.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/twoLocksOneRegion/sameClass/Bad.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/GoodC3.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_field/D.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/Subregion/Bad2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/PLock.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/C.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/PolicyLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good2.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/CannotRequireRWLock.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_visibility.java
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/inherited_region/good/Good4.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/ProtectInheritedRegion.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_returns_lock/C_Policy.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Grandparent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_lock_region/Parent.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/Root.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Thread effects ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_unique_names/BadC2.java
##SUBTASK, Checking [ Annotation bounds ] file:/Users/aarong/git/regression/regression/TestLockSanityChecks/src/test_requires_lock/StateLock_LockNames.java
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
Starting group: LockAnalysis, EffectsAnalysis
com.surelogic.analysis.uniqueness.classic.sideeffecting.UniquenessAnalysisModule$1@5b37e0d2: 0
com.surelogic.analysis.visitors.TopLevelAnalysisVisitor$1@69663380: 65
##SUBTASK, Starting parallel LockAnalysis [2]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel LockAnalysis [2]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Looking at @RegionLock("MUTEX is this protects WaitQueue") on Object
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5fc9b631 on java.lang.Object
Created com.surelogic.dropsea.ir.drops.locks.LockModel@550aa065 on test_requires_lock.StateLock_LockNames
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2793bb92 on test_requires_lock.StateLock_LockNames
Created com.surelogic.dropsea.ir.drops.locks.LockModel@313c0053 on test_requires_lock.StateLock_LockNames
Created com.surelogic.dropsea.ir.drops.locks.LockModel@717ab41b on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4b0fce8d on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@561b99a3 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@77435ab on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@238a8332 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@16445a68 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1c181f82 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3a67a8c7 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4d833faa on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@79a0ab68 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@25984fd1 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@223eea35 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7694ffb7 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@a13f1e6 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6d92c1b2 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3828f177 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6910d882 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7c998887 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@77d49f7 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@78a1a326 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@179ab078 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@27f7cfbc on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4a280844 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3fe53ab4 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7dbe4440 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@64adfe64 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6e4db09d on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@78eb077a on twoLocksOneRegion.inherited.Super
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7c2d5e36 on test_requires_lock.TestImprovedMessages
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7f67c076 on test_unique_names.C1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5f97d837 on test_unique_names.GoodC2
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6eddf06e on test_unique_names.GoodC3
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7817cf6d on twoLocksOneRegion.unrelatedClasses.Test2
Created com.surelogic.dropsea.ir.drops.locks.LockModel@39b2d469 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5885f508 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@595a30f6 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1ff0f017 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@30ce6e1c on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4714e0b8 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4f41b52c on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5729949b on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1454beec on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4499b506 on qualified_receivers_as_locks.Outer.Inner
Created com.surelogic.dropsea.ir.drops.locks.LockModel@699a6581 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2d5d5a07 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2465fb2f on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@60892773 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5a05f08e on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1dcf14ab on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@16f828be on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3f6337ad on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4a97214f on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2f981efa on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@78726e6f on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5e0af093 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2de43f44 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@42e49bcc on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@298e84e9 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@20096723 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2c1b6279 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4a47a6cd on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@17b3caa0 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7ce8870a on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@b172a44 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7c118425 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@757eb7cd on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4d96bebf on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7fe1f843 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@fa16b36 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@fe175d0 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@777a41d5 on inherited_region.good.Good2
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3d5af91 on test_returns_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@22cf9811 on test_returns_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@47ce161a on test_requires_lock.Other1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6e58d248 on test_requires_lock.Other1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7cd13694 on twoLocksOneRegion.unrelatedClasses.Test
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2a1e3958 on test_requires_lock.StateLock_Constructor
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5020a54b on test_requires_lock.StateLock_Constructor
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6abc6f8c on test_returns_lock.StateLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1863818f on test_returns_lock.StateLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3a92546c on test_returns_lock.StateLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@14fc1c2f on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@109798c6 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7f4f106d on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@57d60adc on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@23bf796d on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@fc28474 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@8893199 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3742223f on test_requires_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6d7c1870 on test_requires_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@562f9325 on test_returns_lock.C.Inner1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3d7074ae on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@304244e8 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@109ef2f7 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3a82ed7a on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4693b80 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@262e5ae1 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6c84c1f6 on test_requires_lock.CannotRequireRWLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@217c42dd on inherited_region.good.Good4
Created com.surelogic.dropsea.ir.drops.locks.LockModel@343c9ab7 on test_requires_lock.Root
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7efd66b7 on twoLocksOneRegion.sameClass.Bad
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3d54a91f on test_requires_lock.TestDuplicates
Created com.surelogic.dropsea.ir.drops.locks.LockModel@172c2366 on test_requires_lock.TestDuplicates
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1a756aea on test_requires_lock.C.Inner1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@728814dd on inherited_region.baseCase.Good1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4492ef9 on inherited_region.good.Good3
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3e1f1ecc on test_requires_lock.D
Created com.surelogic.dropsea.ir.drops.locks.LockModel@41f002a1 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6803c47a on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3bef580d on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1e9c7ca on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@672c902d on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2069f1dd on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@116975ce on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1c11c9e6 on test_requires_lock.StateLock_visibility
##SUBTASK, Starting parallel EffectsAnalysis [3]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
Starting parallel EffectsAnalysis [3]: 0 for org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##SUBTASK, Starting parallel LockAnalysis [2]: 65 for TestLockSanityChecks
Starting parallel LockAnalysis [2]: 65 for TestLockSanityChecks
Looking at @RegionLock("MUTEX is this protects WaitQueue") on Object
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5fc9b631 on java.lang.Object
Created com.surelogic.dropsea.ir.drops.locks.LockModel@550aa065 on test_requires_lock.StateLock_LockNames
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2793bb92 on test_requires_lock.StateLock_LockNames
Created com.surelogic.dropsea.ir.drops.locks.LockModel@313c0053 on test_requires_lock.StateLock_LockNames
Created com.surelogic.dropsea.ir.drops.locks.LockModel@717ab41b on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4b0fce8d on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@561b99a3 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@77435ab on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@238a8332 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@16445a68 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1c181f82 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3a67a8c7 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4d833faa on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@79a0ab68 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@25984fd1 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@223eea35 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7694ffb7 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@a13f1e6 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6d92c1b2 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3828f177 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6910d882 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7c998887 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@77d49f7 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@78a1a326 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@179ab078 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@27f7cfbc on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4a280844 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3fe53ab4 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7dbe4440 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@64adfe64 on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6e4db09d on test_lock_region.LockViz
Created com.surelogic.dropsea.ir.drops.locks.LockModel@78eb077a on twoLocksOneRegion.inherited.Super
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7c2d5e36 on test_requires_lock.TestImprovedMessages
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7f67c076 on test_unique_names.C1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5f97d837 on test_unique_names.GoodC2
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6eddf06e on test_unique_names.GoodC3
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7817cf6d on twoLocksOneRegion.unrelatedClasses.Test2
Created com.surelogic.dropsea.ir.drops.locks.LockModel@39b2d469 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5885f508 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@595a30f6 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1ff0f017 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@30ce6e1c on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4714e0b8 on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4f41b52c on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5729949b on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1454beec on test_lock_region.ProtectInheritedRegion
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4499b506 on qualified_receivers_as_locks.Outer.Inner
Created com.surelogic.dropsea.ir.drops.locks.LockModel@699a6581 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2d5d5a07 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2465fb2f on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@60892773 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5a05f08e on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1dcf14ab on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@16f828be on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3f6337ad on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4a97214f on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2f981efa on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@78726e6f on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5e0af093 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2de43f44 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@42e49bcc on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@298e84e9 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@20096723 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2c1b6279 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4a47a6cd on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@17b3caa0 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7ce8870a on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@b172a44 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7c118425 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@757eb7cd on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4d96bebf on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7fe1f843 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@fa16b36 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@fe175d0 on test_lock_region.LockVizJUC
Created com.surelogic.dropsea.ir.drops.locks.LockModel@777a41d5 on inherited_region.good.Good2
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3d5af91 on test_returns_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@22cf9811 on test_returns_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@47ce161a on test_requires_lock.Other1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6e58d248 on test_requires_lock.Other1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7cd13694 on twoLocksOneRegion.unrelatedClasses.Test
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2a1e3958 on test_requires_lock.StateLock_Constructor
Created com.surelogic.dropsea.ir.drops.locks.LockModel@5020a54b on test_requires_lock.StateLock_Constructor
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6abc6f8c on test_returns_lock.StateLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1863818f on test_returns_lock.StateLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3a92546c on test_returns_lock.StateLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@14fc1c2f on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@109798c6 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7f4f106d on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@57d60adc on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@23bf796d on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@fc28474 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@8893199 on test_lock_field.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3742223f on test_requires_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6d7c1870 on test_requires_lock.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@562f9325 on test_returns_lock.C.Inner1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3d7074ae on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@304244e8 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@109ef2f7 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3a82ed7a on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4693b80 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@262e5ae1 on test_lock_region.C
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6c84c1f6 on test_requires_lock.CannotRequireRWLock
Created com.surelogic.dropsea.ir.drops.locks.LockModel@217c42dd on inherited_region.good.Good4
Created com.surelogic.dropsea.ir.drops.locks.LockModel@343c9ab7 on test_requires_lock.Root
Created com.surelogic.dropsea.ir.drops.locks.LockModel@7efd66b7 on twoLocksOneRegion.sameClass.Bad
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3d54a91f on test_requires_lock.TestDuplicates
Created com.surelogic.dropsea.ir.drops.locks.LockModel@172c2366 on test_requires_lock.TestDuplicates
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1a756aea on test_requires_lock.C.Inner1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@728814dd on inherited_region.baseCase.Good1
Created com.surelogic.dropsea.ir.drops.locks.LockModel@4492ef9 on inherited_region.good.Good3
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3e1f1ecc on test_requires_lock.D
Created com.surelogic.dropsea.ir.drops.locks.LockModel@41f002a1 on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@6803c47a on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@3bef580d on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1e9c7ca on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@672c902d on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@2069f1dd on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@116975ce on test_requires_lock.StateLock_visibility
Created com.surelogic.dropsea.ir.drops.locks.LockModel@1c11c9e6 on test_requires_lock.StateLock_visibility
##SUBTASK, Starting parallel EffectsAnalysis [3]: 65 for TestLockSanityChecks
Starting parallel EffectsAnalysis [3]: 65 for TestLockSanityChecks
##SUBTASK, Checking [ Lock policy ] inherited_region.Subregion.Bad3
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.unrelatedClasses.Test
##SUBTASK, Checking [ Lock policy ] test_unique_names.BadC3
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C.Inner1
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.inherited.Duper
##SUBTASK, Checking [ Lock policy ] test_requires_lock.CannotRequireRWLock
##SUBTASK, Checking [ Lock policy ] test_requires_lock.StateLock_Constructor
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Subregion.Bad3
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.CannotRequireRWLock
##SUBTASK, Checking [ Region effects ] test_unique_names.BadC3
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.unrelatedClasses.Test
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.StateVsPolicyLocks
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.Other1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.StateVsPolicyLocks
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.TestDuplicates
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.good.Good2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.Other1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.LockViz
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_field.B
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.good.Good2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.good.Good4
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_field.B
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.good.Good4
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.Instance.BadRoot1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C_Policy
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.inherited.Duper
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.B
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.B
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.inherited.Super
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.inherited.Super
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.unrelatedClasses.Test2
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Instance.BadRoot1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.unrelatedClasses.Test2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.C1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.C1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.StateLock
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.PLock
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C
##SUBTASK, Checking [ Region effects ] test_requires_lock.StateLock_Constructor
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.D
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C_Policy
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.StateLock_LockNames
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.D
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_field.C
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.StateLock_LockNames
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.C
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.LockViz
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_field.C
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.TestImprovedMessages
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.LockVizJUC
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_field.A
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_field.A
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.baseCase.Good1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.baseCase.Good1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.D
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.D
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.good.GoodRoot
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.good.GoodRoot
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.GreatGrandparent
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.GreatGrandparent
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.PolicyLock_visibility
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.C
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.Instance.Bad1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Instance.Bad1
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] twoLocksOneRegion.sameClass.Bad
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] twoLocksOneRegion.sameClass.Bad
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.Other
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.Other
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.PolicyLock_LockNames
##SUBTASK, Checking [ Lock policy ] test_unique_names.BadC2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.BadC2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.Subregion.BadRoot2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Subregion.BadRoot2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] qualified_receivers_as_locks.Outer
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] qualified_receivers_as_locks.Outer
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] qualified_receivers_as_locks.Outer.Inner
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] qualified_receivers_as_locks.Outer.Inner
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.StateLock_visibility
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.PolicyLock_LockNames
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.ProtectInheritedRegion
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.StateLock
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.ProtectInheritedRegion
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.C
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.good.Good3
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.PLock
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.good.Good3
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_field.Other
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.C
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_returns_lock.PLock.Inner
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_field.Other
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C_Policy
##SUBTASK, Checking [ Lock policy ] test_lock_region.Grandparent
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.Grandparent
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.Root
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_returns_lock.PLock.Inner
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.Root
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C_Policy
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C_Policy.Inner1
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.C_Policy.Inner1.Inner2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.GoodC2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.GoodC2
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.LockVizJUC
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.PolicyLock_visibility
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.StateLock_visibility
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_unique_names.GoodC3
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_unique_names.GoodC3
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_field.D
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_field.D
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] inherited_region.Subregion.Bad2
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] inherited_region.Subregion.Bad2
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_lock_region.Parent
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_lock_region.Parent
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.TestDuplicates
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.TestImprovedMessages
##SUBTASK_DONE
##SUBTASK_DONE
##SUBTASK, Checking [ Lock policy ] test_requires_lock.PolicyLock_Constructor
##SUBTASK_DONE
##SUBTASK, Checking [ Region effects ] test_requires_lock.PolicyLock_Constructor
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
##WORK, 1
##SUBTASK_DONE
Starting group: UniquenessAnalysisModule
##SUBTASK, Cleaning up after analysis
Cleaning up after analysis
[GC (System.gc())  97185K->66478K(189440K), 0.0104140 secs]
[Full GC (System.gc())  66478K->41029K(189440K), 0.1542100 secs]
##WORK, 1
##SUBTASK_DONE
Updating consistency proof
##SUBTASK, Updating consistency proof
Exporting results to TestLockSanityChecks-2015.06.16-at-11.21.14.389
##SUBTASK, Exporting results to TestLockSanityChecks-2015.06.16-at-11.21.14.389
Creating snapshot: /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestLockSanityChecks-2015.06.16-at-11.21.14.389/running_or_crashed_sea_snapshot.xml.gz
Done in 5312 ms.
ThreadEffectsModule	: 24 ms
ParameterizedTypeAnalysis	: 13 ms
LockAnalysis	: 761 ms
EffectsAnalysis	: 57 ms
UniquenessAnalysisModule	: 0 ms
[2015-06-16 11:21:21    INFO] partial bindings = 10429 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
[2015-06-16 11:21:21    INFO] full bindings = 2903 (in method edu.cmu.cs.fluid.java.bind.AbstractJavaBinder.printStats(-) thread "main")
cached = 0
totalT = 0
#Performance data for TestLockSanityChecks
#Tue Jun 16 11:21:21 EDT 2015
jsure.Add.required=0
jsure.All.analyses=421
jsure.Binding.before.canon=125
jsure.Binding.full.time=681
jsure.Binding.partial.time=472
jsure.Bindings.full=2903
jsure.Bindings.partial=10429
jsure.Canonicalization=583
jsure.Cleanup=110
jsure.Destroy.time=21
jsure.Drop.creation=23
jsure.Find.canon.time=10
jsure.Parsing=891
jsure.Promise.parsing=545
jsure.Promise.scrubbing=2042
jsure.Sea.export=634
jsure.Sea.update=63
jsure.Total.JSure.time=5312
jsure.Total.blocks=375
jsure.Total.canonical=6579
jsure.Total.decls=775
jsure.Total.destroyed=1202
jsure.Total.gced=0
jsure.Total.loc=2981
jsure.Total.nodes=72608
jsure.Total.stmts=574
jsure.Total.try.destroyed=1202
jsure.analysis.EffectsAnalysis=57
jsure.analysis.LockAnalysis=761
jsure.analysis.ParameterizedTypeAnalysis=13
jsure.analysis.ThreadEffectsModule=24
jsure.analysis.UniquenessAnalysisModule=0
jsure.num.threads=8
##DONE
Renaming snapshot: /Users/aarong/Work/Eclipse-Workspaces/Eclipse-luna/Fluid Regression/.jsure-data/TestLockSanityChecks-2015.06.16-at-11.21.14.389/sea_snapshot.xml.gz
Done with JSure!
Scanning complete (6380 ms)
No socket to close
Closing std streams
Process result after waiting = 0
